{"file_contents":{"README.md":{"content":"# ERPDEMO1\n# ERPDEMOfinal\n# ERPDEMOfinal\n# ERPwork\n","size_bytes":51},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a comprehensive Enterprise Resource Planning (ERP) system built with modern web technologies. The application provides a centralized platform for managing various business functions including finance, human resources, supply chain, customer relationship management, manufacturing, project management, and system settings. The system features a modular architecture with dedicated sections for each business domain, enabling organizations to streamline their operations through a unified interface.\n\n## Recent Updates\n\n**Finance Dashboard Implementation (January 2025)**\n- Created responsive Finance Overview dashboard with real-time data visualization\n- Implemented JSON-based data fetching for financial metrics (revenue, expenses, profit)\n- Added interactive charts: Revenue vs Expenses line chart and Department Expenses bar chart\n- Successfully migrated from Bolt to Replit environment with wouter routing system\n- All navigation and component rendering now fully functional\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n\nThe frontend is built using **React with TypeScript** and follows a component-based architecture pattern:\n\n- **UI Framework**: React 18 with TypeScript for type safety and better developer experience\n- **Styling**: Tailwind CSS with shadcn/ui component library for consistent design system\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: Zustand for authentication and global state management\n- **Data Visualization**: Recharts library for charts and analytics dashboards\n- **Form Handling**: React Hook Form with Zod validation schemas\n\nThe frontend is organized into modular sections with each business domain (Finance, HR, CRM, etc.) having its own component hierarchy. The layout system includes responsive sidebar navigation, header, and mobile menu components.\n\n## Backend Architecture\n\nThe backend follows a **Node.js/Express** pattern with TypeScript:\n\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript for type safety across the full stack\n- **API Design**: RESTful API structure with `/api` prefix for all endpoints\n- **Storage Abstraction**: Interface-based storage layer allowing for pluggable storage implementations\n- **Development Setup**: Vite for fast development builds and hot module replacement\n\nThe server implements a middleware-based architecture with request logging, JSON parsing, and error handling built into the request pipeline.\n\n## Data Storage Solutions\n\nThe application uses a hybrid storage approach:\n\n- **Database**: PostgreSQL as the primary database with Drizzle ORM for type-safe database operations\n- **Database Provider**: Neon Database serverless PostgreSQL for cloud deployment\n- **Schema Management**: Drizzle Kit for database migrations and schema management\n- **Development Storage**: In-memory storage implementation for development and testing\n\nThe storage layer is abstracted through interfaces, allowing easy switching between different storage backends.\n\n## Authentication and Authorization\n\nAuthentication is handled through a store-based system:\n\n- **State Management**: Zustand store for authentication state\n- **User Roles**: Role-based access control with multiple user types (Administrator, Manager, Finance, HR, Sales, Operations, Employee)\n- **Permissions**: Granular permission system for feature-level access control\n- **Session Management**: Client-side session handling with automatic authentication checks\n\n## Module Organization\n\nThe application is organized into distinct business modules:\n\n- **Finance**: Accounting, budgeting, payroll, and financial reporting\n- **Human Resources**: Employee management, recruitment, training, and performance\n- **Supply Chain**: Procurement, inventory, vendor management, and logistics\n- **Customer Relationship**: Customer management, sales, marketing, and support\n- **Manufacturing**: Production planning, quality control, maintenance, and reporting\n- **Project Management**: Project tracking, task management, resource allocation, and calendar\n- **Settings**: User preferences, integrations, notifications, and system configuration\n\nEach module follows a consistent structure with overview dashboards, detailed management interfaces, and reporting capabilities.\n\n# External Dependencies\n\n## Database Services\n- **Neon Database**: Serverless PostgreSQL database hosting\n- **Drizzle ORM**: Type-safe database ORM and query builder\n- **Drizzle Kit**: Database migration and schema management tool\n\n## UI and Styling Libraries\n- **Radix UI**: Headless UI components for accessibility and customization\n- **Tailwind CSS**: Utility-first CSS framework\n- **shadcn/ui**: Pre-built component library based on Radix UI and Tailwind\n- **Lucide React**: Icon library for consistent iconography\n\n## Data and Visualization\n- **Recharts**: React charting library for data visualization\n- **TanStack Query**: Data fetching and caching library\n- **Date-fns**: Date manipulation and formatting utilities\n\n## Development Tools\n- **Vite**: Build tool and development server\n- **TypeScript**: Type system for JavaScript\n- **ESBuild**: JavaScript bundler for production builds\n- **Replit Plugins**: Development environment integration tools\n\n## Form and Validation\n- **React Hook Form**: Form state management and validation\n- **Zod**: TypeScript-first schema validation\n- **Drizzle Zod**: Integration between Drizzle ORM and Zod validation\n\n## Additional Utilities\n- **Class Variance Authority**: Utility for managing conditional CSS classes\n- **CLSX**: Utility for constructing className strings\n- **Nanoid**: URL-friendly unique ID generator\n- **Wouter**: Lightweight React router","size_bytes":5752},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          50: \"hsl(214 100% 97%)\",\n          100: \"hsl(214 95% 93%)\",\n          200: \"hsl(213 97% 87%)\",\n          300: \"hsl(212 96% 78%)\",\n          400: \"hsl(213 94% 68%)\",\n          500: \"hsl(217 91% 60%)\",\n          600: \"hsl(221 83% 53%)\",\n          700: \"hsl(224 76% 48%)\",\n          800: \"hsl(226 71% 40%)\",\n          900: \"hsl(224 64% 33%)\",\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          50: \"hsl(210 40% 98%)\",\n          100: \"hsl(210 40% 96%)\",\n          200: \"hsl(214 32% 91%)\",\n          300: \"hsl(213 27% 84%)\",\n          400: \"hsl(215 20% 65%)\",\n          500: \"hsl(215 16% 47%)\",\n          600: \"hsl(215 19% 35%)\",\n          700: \"hsl(215 25% 27%)\",\n          800: \"hsl(217 33% 17%)\",\n          900: \"hsl(222 84% 5%)\",\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        accent: {\n          50: \"hsl(138 76% 97%)\",\n          100: \"hsl(141 84% 93%)\",\n          200: \"hsl(141 78% 85%)\",\n          300: \"hsl(142 77% 73%)\",\n          400: \"hsl(142 69% 58%)\",\n          500: \"hsl(142 71% 45%)\",\n          600: \"hsl(142 76% 36%)\",\n          700: \"hsl(142 72% 29%)\",\n          800: \"hsl(143 64% 24%)\",\n          900: \"hsl(144 61% 20%)\",\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        success: {\n          50: \"hsl(138 76% 97%)\",\n          100: \"hsl(141 84% 93%)\",\n          200: \"hsl(141 78% 85%)\",\n          300: \"hsl(142 77% 73%)\",\n          400: \"hsl(142 69% 58%)\",\n          500: \"hsl(142 71% 45%)\",\n          600: \"hsl(142 76% 36%)\",\n          700: \"hsl(142 72% 29%)\",\n          800: \"hsl(143 64% 24%)\",\n          900: \"hsl(144 61% 20%)\",\n        },\n        warning: {\n          50: \"hsl(48 100% 96%)\",\n          100: \"hsl(48 96% 89%)\",\n          200: \"hsl(48 97% 77%)\",\n          300: \"hsl(46 97% 65%)\",\n          400: \"hsl(43 96% 56%)\",\n          500: \"hsl(38 92% 50%)\",\n          600: \"hsl(32 95% 44%)\",\n          700: \"hsl(26 90% 37%)\",\n          800: \"hsl(23 83% 31%)\",\n          900: \"hsl(22 78% 26%)\",\n        },\n        error: {\n          50: \"hsl(0 86% 97%)\",\n          100: \"hsl(0 93% 94%)\",\n          200: \"hsl(0 96% 89%)\",\n          300: \"hsl(0 94% 82%)\",\n          400: \"hsl(0 91% 71%)\",\n          500: \"hsl(0 84% 60%)\",\n          600: \"hsl(0 72% 51%)\",\n          700: \"hsl(0 74% 42%)\",\n          800: \"hsl(0 70% 35%)\",\n          900: \"hsl(0 63% 31%)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4940},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n});\n","size_bytes":894},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on port 5000\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = 5000;\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":1921},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { readFileSync } from \"fs\";\nimport { join } from \"path\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Finance data endpoint\n  app.get(\"/api/finance-data\", (req, res) => {\n    try {\n      const financeDataPath = join(process.cwd(), \"public\", \"data\", \"finance-data.json\");\n      const financeData = readFileSync(financeDataPath, \"utf-8\");\n      const parsedData = JSON.parse(financeData);\n      res.json(parsedData);\n    } catch (error) {\n      console.error(\"Error reading finance data:\", error);\n      res.status(500).json({ error: \"Failed to load finance data\" });\n    }\n  });\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":952},"server/storage.ts":{"content":"import { users, type User, type InsertUser } from \"@shared/schema\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: number): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<number, User>;\n  currentId: number;\n\n  constructor() {\n    this.users = new Map();\n    this.currentId = 1;\n  }\n\n  async getUser(id: number): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = this.currentId++;\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1012},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2254},"shared/schema.ts":{"content":"import { pgTable, text, serial, integer, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":533},"client/src/App.tsx":{"content":"import { useEffect, useState } from 'react';\nimport { Route, useLocation } from 'wouter';\nimport { Layout } from './components/layout/Layout';\nimport { Dashboard } from './pages/Dashboard';\nimport { Finance } from './pages/Finance';\nimport { HumanResources } from './pages/HumanResources';\nimport { SupplyChain } from './pages/SupplyChain';\nimport { CustomerRelationship } from './pages/CustomerRelationship';\nimport { Manufacturing } from './pages/Manufacturing';\nimport { ProjectManagement } from './pages/ProjectManagement';\nimport { Settings } from './pages/Settings';\nimport { useAuthStore } from './stores/authStore';\nimport { LoginPage } from './pages/LoginPage';\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const { isAuthenticated, checkAuth } = useAuthStore();\n  const [location] = useLocation();\n\n  useEffect(() => {\n    // Simulate authentication check\n    const loadAuth = async () => {\n      await checkAuth();\n      setLoading(false);\n    };\n    \n    loadAuth();\n  }, [checkAuth]);\n  \n  // Change page title based on current route\n  useEffect(() => {\n    const pathSegments = location.split('/').filter(Boolean);\n    const currentPage = pathSegments.length > 0\n      ? pathSegments[0].charAt(0).toUpperCase() + pathSegments[0].slice(1)\n      : 'Dashboard';\n      \n    document.title = `ERP System | ${currentPage}`;\n  }, [location]);\n\n  if (loading) {\n    return (\n      <div className=\"flex h-screen w-screen items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"h-16 w-16 mx-auto border-4 border-t-primary-500 border-gray-200 rounded-full animate-spin\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading application...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return <LoginPage />;\n  }\n\n  return (\n    <Layout>\n      <Route path=\"/\" component={Dashboard} />\n      <Route path=\"/finance\" component={Finance} />\n      <Route path=\"/finance/:rest*\" component={Finance} />\n      <Route path=\"/human-resources\" component={HumanResources} />\n      <Route path=\"/human-resources/:rest*\" component={HumanResources} />\n      <Route path=\"/supply-chain/:rest*\" component={SupplyChain} />\n      <Route path=\"/crm/:rest*\" component={CustomerRelationship} />\n      <Route path=\"/manufacturing/:rest*\" component={Manufacturing} />\n      <Route path=\"/projects/:rest*\" component={ProjectManagement} />\n      <Route path=\"/settings\" component={Settings} />\n      <Route path=\"/settings/:rest*\" component={Settings} />\n    </Layout>\n  );\n}\n\nexport default App;","size_bytes":2575},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 84% 4.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 222.2 84% 4.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 84% 4.9%;\n    --primary: 217 91% 60%;\n    --primary-foreground: 210 40% 98%;\n    --secondary: 210 40% 96%;\n    --secondary-foreground: 222.2 84% 4.9%;\n    --muted: 210 40% 96%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n    --accent: 142 71% 45%;\n    --accent-foreground: 210 40% 98%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n    --ring: 217 91% 60%;\n    --radius: 0.5rem;\n    --chart-1: 12 76% 61%;\n    --chart-2: 173 58% 39%;\n    --chart-3: 197 37% 24%;\n    --chart-4: 43 74% 66%;\n    --chart-5: 27 87% 67%;\n    --sidebar-background: 0 0% 98%;\n    --sidebar-foreground: 240 5.3% 26.1%;\n    --sidebar-primary: 240 5.9% 10%;\n    --sidebar-primary-foreground: 0 0% 98%;\n    --sidebar-accent: 240 4.8% 95.9%;\n    --sidebar-accent-foreground: 240 5.9% 10%;\n    --sidebar-border: 220 13% 91%;\n    --sidebar-ring: 217.2 32.6% 17.5%;\n  }\n\n  .dark {\n    --background: 222.2 84% 4.9%;\n    --foreground: 210 40% 98%;\n    --card: 222.2 84% 4.9%;\n    --card-foreground: 210 40% 98%;\n    --popover: 222.2 84% 4.9%;\n    --popover-foreground: 210 40% 98%;\n    --primary: 217 91% 60%;\n    --primary-foreground: 222.2 47.4% 11.2%;\n    --secondary: 217.2 32.6% 17.5%;\n    --secondary-foreground: 210 40% 98%;\n    --muted: 217.2 32.6% 17.5%;\n    --muted-foreground: 215 20.2% 65.1%;\n    --accent: 142 71% 45%;\n    --accent-foreground: 210 40% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 210 40% 98%;\n    --border: 217.2 32.6% 17.5%;\n    --input: 217.2 32.6% 17.5%;\n    --ring: 212.7 26.8% 83.9%;\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 340 75% 55%;\n    --sidebar-background: 224 71.4% 4.1%;\n    --sidebar-foreground: 210 20% 98%;\n    --sidebar-primary: 224 71.4% 4.1%;\n    --sidebar-primary-foreground: 210 20% 98%;\n    --sidebar-accent: 216 12.2% 83.9%;\n    --sidebar-accent-foreground: 240 5.9% 10%;\n    --sidebar-border: 240 3.7% 15.9%;\n    --sidebar-ring: 217.2 32.6% 17.5%;\n  }\n\n  html {\n    @apply text-gray-900;\n  }\n  \n  body {\n    @apply font-sans bg-gray-50 antialiased;\n  }\n  \n  h1, h2, h3, h4, h5, h6 {\n    @apply font-semibold text-gray-900 leading-tight;\n  }\n  \n  h1 {\n    @apply text-3xl md:text-4xl;\n  }\n  \n  h2 {\n    @apply text-2xl md:text-3xl;\n  }\n  \n  h3 {\n    @apply text-xl md:text-2xl;\n  }\n  \n  h4 {\n    @apply text-lg md:text-xl;\n  }\n  \n  p {\n    @apply leading-relaxed;\n  }\n}\n\n@layer components {\n  .btn {\n    @apply inline-flex items-center justify-center px-4 py-2 rounded-md font-medium transition-colors duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2;\n  }\n  \n  .btn-primary {\n    @apply bg-primary-500 text-white hover:bg-primary-600 focus:ring-primary-500;\n  }\n  \n  .btn-secondary {\n    @apply bg-secondary-500 text-white hover:bg-secondary-600 focus:ring-secondary-500;\n  }\n  \n  .btn-accent {\n    @apply bg-accent-500 text-white hover:bg-accent-600 focus:ring-accent-500;\n  }\n  \n  .btn-success {\n    @apply bg-success-500 text-white hover:bg-success-600 focus:ring-success-500;\n  }\n  \n  .btn-warning {\n    @apply bg-warning-500 text-white hover:bg-warning-600 focus:ring-warning-500;\n  }\n  \n  .btn-error {\n    @apply bg-error-500 text-white hover:bg-error-600 focus:ring-error-500;\n  }\n  \n  .btn-outline {\n    @apply border border-gray-300 text-gray-700 bg-white hover:bg-gray-50 focus:ring-gray-500;\n  }\n  \n  .btn-ghost {\n    @apply text-gray-700 hover:bg-gray-100 focus:ring-gray-500;\n  }\n  \n  .card {\n    @apply bg-white rounded-lg shadow-card overflow-hidden;\n  }\n  \n  .input {\n    @apply w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500;\n  }\n  \n  .select {\n    @apply w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500;\n  }\n  \n  .table-container {\n    @apply overflow-x-auto bg-white rounded-lg shadow-card;\n  }\n  \n  .table {\n    @apply min-w-full divide-y divide-gray-200;\n  }\n  \n  .table th {\n    @apply px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider;\n  }\n  \n  .table td {\n    @apply px-6 py-4 whitespace-nowrap text-sm text-gray-500;\n  }\n  \n  .badge {\n    @apply inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium;\n  }\n  \n  .badge-primary {\n    @apply bg-primary-100 text-primary-800;\n  }\n  \n  .badge-secondary {\n    @apply bg-secondary-100 text-secondary-800;\n  }\n  \n  .badge-accent {\n    @apply bg-accent-100 text-accent-800;\n  }\n  \n  .badge-success {\n    @apply bg-success-100 text-success-800;\n  }\n  \n  .badge-warning {\n    @apply bg-warning-100 text-warning-800;\n  }\n  \n  .badge-error {\n    @apply bg-error-100 text-error-800;\n  }\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 10px;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #c1c1c1;\n  border-radius: 10px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #a1a1a1;\n}\n\n/* Animation utilities */\n.fade-in {\n  animation: fadeIn 0.3s ease-in-out;\n}\n\n.slide-in {\n  animation: slideIn 0.3s ease-in-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateY(10px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}","size_bytes":5757},"client/src/main.tsx":{"content":"import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);","size_bytes":229},"client/src/vite-env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n","size_bytes":38},"client/src/pages/CustomerRelationship.tsx":{"content":"import { useState } from 'react';\nimport { Route, Link, useLocation } from 'wouter';\nimport { HeartHandshake, Users, DollarSign, Megaphone, HeadphonesIcon } from 'lucide-react';\nimport { CRMOverview } from '../components/crm/CRMOverview';\nimport { Customers } from '../components/crm/Customers';\nimport { Sales } from '../components/crm/Sales';\nimport { Marketing } from '../components/crm/Marketing';\nimport { Support } from '../components/crm/Support';\n\nexport function CustomerRelationship() {\n  const [location] = useLocation();\n  const [activeTab, setActiveTab] = useState(\n    location === '/crm' ? 'overview' :\n    location.includes('/customers') ? 'customers' :\n    location.includes('/sales') ? 'sales' :\n    location.includes('/marketing') ? 'marketing' :\n    location.includes('/support') ? 'support' :\n    'overview'\n  );\n\n  const tabs = [\n    { id: 'overview', name: 'Overview', href: '/crm', icon: HeartHandshake },\n    { id: 'customers', name: 'Customers', href: '/crm/customers', icon: Users },\n    { id: 'sales', name: 'Sales', href: '/crm/sales', icon: DollarSign },\n    { id: 'marketing', name: 'Marketing', href: '/crm/marketing', icon: Megaphone },\n    { id: 'support', name: 'Support', href: '/crm/support', icon: HeadphonesIcon },\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 sm:px-6 lg:px-8\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8 overflow-x-auto\">\n              {tabs.map((tab) => (\n                <Link\n                  key={tab.id}\n                  to={tab.href}\n                  className={`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-primary-500 text-primary-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  } flex items-center`}\n                  onClick={() => setActiveTab(tab.id)}\n                >\n                  <tab.icon className=\"mr-2 h-5 w-5\" />\n                  {tab.name}\n                </Link>\n              ))}\n            </nav>\n          </div>\n        </div>\n      </div>\n\n      <Route path=\"/crm\" component={CRMOverview} />\n      <Route path=\"/crm/customers\" component={Customers} />\n      <Route path=\"/crm/sales\" component={Sales} />\n      <Route path=\"/crm/marketing\" component={Marketing} />\n      <Route path=\"/crm/support\" component={Support} />\n    </div>\n  );\n}","size_bytes":2540},"client/src/pages/Dashboard.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { \n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, \n  BarChart, Bar, PieChart, Pie, Cell\n} from 'recharts';\nimport {\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  ShoppingCart,\n  Users,\n  Clipboard,\n  Calendar,\n  AlertCircle,\n  ChevronRight\n} from 'lucide-react';\nimport { useAuthStore } from '../stores/authStore';\nimport { DashboardCard } from '../components/dashboard/DashboardCard';\nimport { DashboardMetric } from '../components/dashboard/DashboardMetric';\nimport { DashboardRecentActivity } from '../components/dashboard/DashboardRecentActivity';\n\n// Mock data for charts\nconst salesData = [\n  { month: 'Jan', sales: 4000 },\n  { month: 'Feb', sales: 3000 },\n  { month: 'Mar', sales: 5000 },\n  { month: 'Apr', sales: 2780 },\n  { month: 'May', sales: 1890 },\n  { month: 'Jun', sales: 2390 },\n  { month: 'Jul', sales: 3490 },\n  { month: 'Aug', sales: 4000 },\n  { month: 'Sep', sales: 4500 },\n  { month: 'Oct', sales: 6000 },\n  { month: 'Nov', sales: 5500 },\n  { month: 'Dec', sales: 7000 },\n];\n\nconst departmentBudget = [\n  { name: 'R&D', value: 20 },\n  { name: 'Marketing', value: 30 },\n  { name: 'Sales', value: 25 },\n  { name: 'Operations', value: 15 },\n  { name: 'HR', value: 10 },\n];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#9370DB'];\n\n// Dashboard activity types\ninterface Activity {\n  id: string;\n  type: string;\n  description: string;\n  timestamp: string;\n  user: string;\n  module: string;\n  status?: string;\n}\n\n// Mock activity data\nconst recentActivities: Activity[] = [\n  {\n    id: '1',\n    type: 'purchase_order',\n    description: 'Purchase order #12345 created',\n    timestamp: '2025-03-15T13:45:00Z',\n    user: 'John Doe',\n    module: 'Supply Chain',\n    status: 'pending'\n  },\n  {\n    id: '2',\n    type: 'invoice',\n    description: 'Invoice #INV-2025-0321 paid',\n    timestamp: '2025-03-15T10:30:00Z',\n    user: 'Sarah Johnson',\n    module: 'Finance',\n    status: 'completed'\n  },\n  {\n    id: '3',\n    type: 'employee',\n    description: 'New employee Alice Smith onboarded',\n    timestamp: '2025-03-14T16:20:00Z',\n    user: 'HR Manager',\n    module: 'Human Resources'\n  },\n  {\n    id: '4',\n    type: 'project',\n    description: 'Project \"Website Redesign\" status updated',\n    timestamp: '2025-03-14T11:15:00Z',\n    user: 'Project Manager',\n    module: 'Projects',\n    status: 'in_progress'\n  },\n  {\n    id: '5',\n    type: 'customer',\n    description: 'New customer Acme Corp added',\n    timestamp: '2025-03-13T09:45:00Z',\n    user: 'Sales Rep',\n    module: 'CRM'\n  }\n];\n\nexport function Dashboard() {\n  const { user } = useAuthStore();\n  const [loading, setLoading] = useState(true);\n  const [metrics, setMetrics] = useState({\n    revenue: 0,\n    orders: 0,\n    customers: 0,\n    tasks: 0\n  });\n\n  // Simulate data loading\n  useEffect(() => {\n    const loadData = async () => {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      setMetrics({\n        revenue: 248970,\n        orders: 1245,\n        customers: 567,\n        tasks: 89\n      });\n      \n      setLoading(false);\n    };\n    \n    loadData();\n  }, []);\n\n  // Format currency\n  const formatCurrency = (value: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex h-full items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"h-12 w-12 mx-auto border-4 border-t-primary-500 border-gray-200 rounded-full animate-spin\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading dashboard data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Welcome header */}\n      <div className=\"bg-white rounded-lg shadow-sm p-6\">\n        <h1 className=\"text-2xl font-semibold text-gray-900\">\n          Welcome back, {user?.name}\n        </h1>\n        <p className=\"mt-1 text-gray-500\">\n          Here's what's happening across your business today\n        </p>\n      </div>\n      \n      {/* Key metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <DashboardMetric\n          title=\"Total Revenue\"\n          value={formatCurrency(metrics.revenue)}\n          change={12.5}\n          changeType=\"increase\"\n          icon={<DollarSign className=\"h-6 w-6 text-primary-500\" />}\n        />\n        <DashboardMetric\n          title=\"Orders\"\n          value={metrics.orders.toString()}\n          change={8.2}\n          changeType=\"increase\"\n          icon={<ShoppingCart className=\"h-6 w-6 text-secondary-500\" />}\n        />\n        <DashboardMetric\n          title=\"New Customers\"\n          value={metrics.customers.toString()}\n          change={-3.1}\n          changeType=\"decrease\"\n          icon={<Users className=\"h-6 w-6 text-accent-500\" />}\n        />\n        <DashboardMetric\n          title=\"Pending Tasks\"\n          value={metrics.tasks.toString()}\n          change={0}\n          changeType=\"neutral\"\n          icon={<Clipboard className=\"h-6 w-6 text-warning-500\" />}\n        />\n      </div>\n      \n      {/* Charts and data */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Sales chart */}\n        <DashboardCard title=\"Revenue Trend\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart\n                data={salesData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip formatter={(value) => [`$${value}`, 'Revenue']} />\n                <Line type=\"monotone\" dataKey=\"sales\" stroke=\"#0052ff\" strokeWidth={2} />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n        \n        {/* Budget allocation */}\n        <DashboardCard title=\"Budget Allocation\">\n          <div className=\"h-80 flex items-center\">\n            <div className=\"w-full grid grid-cols-2 gap-4\">\n              <div className=\"h-72\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <PieChart>\n                    <Pie\n                      data={departmentBudget}\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      labelLine={false}\n                      outerRadius={80}\n                      fill=\"#8884d8\"\n                      dataKey=\"value\"\n                      label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                    >\n                      {departmentBudget.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                      ))}\n                    </Pie>\n                    <Tooltip formatter={(value) => [`${value}%`, 'Budget']} />\n                  </PieChart>\n                </ResponsiveContainer>\n              </div>\n              <div className=\"flex flex-col justify-center space-y-3\">\n                {departmentBudget.map((item, index) => (\n                  <div key={item.name} className=\"flex items-center\">\n                    <div\n                      className=\"w-4 h-4 rounded mr-2\"\n                      style={{ backgroundColor: COLORS[index % COLORS.length] }}\n                    ></div>\n                    <span className=\"text-sm text-gray-700\">{item.name}: {item.value}%</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n      \n      {/* Additional dashboard components */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Recent activity feed */}\n        <div className=\"lg:col-span-2\">\n          <DashboardCard title=\"Recent Activity\">\n            <div className=\"flow-root\">\n              <DashboardRecentActivity activities={recentActivities} />\n            </div>\n            <div className=\"mt-4 border-t border-gray-200 pt-4\">\n              <a href=\"#\" className=\"text-sm font-medium text-primary-600 hover:text-primary-700 flex items-center\">\n                View all activity\n                <ChevronRight className=\"ml-1 h-4 w-4\" />\n              </a>\n            </div>\n          </DashboardCard>\n        </div>\n        \n        {/* Upcoming calendar */}\n        <div>\n          <DashboardCard title=\"Upcoming Calendar\">\n            <div className=\"space-y-4\">\n              <div className=\"flex items-start\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"h-10 w-10 rounded-md bg-primary-100 flex items-center justify-center\">\n                    <Calendar className=\"h-5 w-5 text-primary-600\" />\n                  </div>\n                </div>\n                <div className=\"ml-4\">\n                  <h4 className=\"text-sm font-medium text-gray-900\">Weekly Team Meeting</h4>\n                  <p className=\"mt-1 text-sm text-gray-500\">Today at 10:00 AM</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"h-10 w-10 rounded-md bg-secondary-100 flex items-center justify-center\">\n                    <Calendar className=\"h-5 w-5 text-secondary-600\" />\n                  </div>\n                </div>\n                <div className=\"ml-4\">\n                  <h4 className=\"text-sm font-medium text-gray-900\">Client Presentation</h4>\n                  <p className=\"mt-1 text-sm text-gray-500\">Tomorrow at 2:00 PM</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"h-10 w-10 rounded-md bg-warning-100 flex items-center justify-center\">\n                    <Calendar className=\"h-5 w-5 text-warning-600\" />\n                  </div>\n                </div>\n                <div className=\"ml-4\">\n                  <h4 className=\"text-sm font-medium text-gray-900\">Project Deadline</h4>\n                  <p className=\"mt-1 text-sm text-gray-500\">March 18, 2025</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-4 border-t border-gray-200 pt-4\">\n              <a href=\"#\" className=\"text-sm font-medium text-primary-600 hover:text-primary-700 flex items-center\">\n                View calendar\n                <ChevronRight className=\"ml-1 h-4 w-4\" />\n              </a>\n            </div>\n          </DashboardCard>\n          \n          {/* System alerts */}\n          <div className=\"mt-6\">\n            <DashboardCard title=\"System Alerts\">\n              <div className=\"space-y-4\">\n                <div className=\"flex items-start\">\n                  <div className=\"flex-shrink-0\">\n                    <AlertCircle className=\"h-5 w-5 text-warning-500\" />\n                  </div>\n                  <div className=\"ml-3\">\n                    <h4 className=\"text-sm font-medium text-gray-900\">System maintenance</h4>\n                    <p className=\"mt-1 text-sm text-gray-500\">Scheduled for March 20, 11:00 PM</p>\n                  </div>\n                </div>\n                <div className=\"flex items-start\">\n                  <div className=\"flex-shrink-0\">\n                    <AlertCircle className=\"h-5 w-5 text-error-500\" />\n                  </div>\n                  <div className=\"ml-3\">\n                    <h4 className=\"text-sm font-medium text-gray-900\">License renewal</h4>\n                    <p className=\"mt-1 text-sm text-gray-500\">Your license expires in 15 days</p>\n                  </div>\n                </div>\n              </div>\n            </DashboardCard>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":11987},"client/src/pages/Finance.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Route, Link, useLocation } from 'wouter';\nimport { DollarSign, TrendingUp, Users, FileText, PieChart } from 'lucide-react';\n\n// Finance sub-pages\nimport { FinanceOverview } from '../components/finance/FinanceOverview';\nimport { Accounting } from '../components/finance/Accounting';\nimport { Budgeting } from '../components/finance/Budgeting';\nimport { Payroll } from '../components/finance/Payroll';\nimport { FinanceReports } from '../components/finance/FinanceReports';\n\nexport function Finance() {\n  const [location] = useLocation();\n  const [activeTab, setActiveTab] = useState('overview');\n\n  // Update active tab based on current location\n  useEffect(() => {\n    if (location === '/finance' || location === '/finance/') {\n      setActiveTab('overview');\n    } else if (location.includes('/accounting')) {\n      setActiveTab('accounting');\n    } else if (location.includes('/budgeting')) {\n      setActiveTab('budgeting');\n    } else if (location.includes('/payroll')) {\n      setActiveTab('payroll');\n    } else if (location.includes('/reports')) {\n      setActiveTab('reports');\n    }\n  }, [location]);\n\n  const tabs = [\n    { id: 'overview', name: 'Overview', href: '/finance', icon: DollarSign },\n    { id: 'accounting', name: 'Accounting', href: '/finance/accounting', icon: FileText },\n    { id: 'budgeting', name: 'Budgeting', href: '/finance/budgeting', icon: PieChart },\n    { id: 'payroll', name: 'Payroll', href: '/finance/payroll', icon: Users },\n    { id: 'reports', name: 'Reports', href: '/finance/reports', icon: TrendingUp },\n  ];\n\n  // Render content based on current route\n  const renderContent = () => {\n    console.log('Finance page location:', location); // Debug log\n    console.log('Rendering FinanceOverview component'); // Debug log\n    \n    // Simple test to ensure component is working\n    if (location === '/finance' || location === '/finance/') {\n      return (\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <h1 className=\"text-2xl font-bold mb-4\">Finance Overview Page</h1>\n          <p className=\"text-gray-600 mb-4\">This is a test to confirm the page is loading.</p>\n          <FinanceOverview />\n        </div>\n      );\n    } else if (location === '/finance/accounting') {\n      return <Accounting />;\n    } else if (location === '/finance/budgeting') {\n      return <Budgeting />;\n    } else if (location === '/finance/payroll') {\n      return <Payroll />;\n    } else if (location === '/finance/reports') {\n      return <FinanceReports />;\n    }\n    // Default to overview\n    return (\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h1 className=\"text-2xl font-bold mb-4\">Finance Overview Page (Default)</h1>\n        <p className=\"text-gray-600 mb-4\">This is a test to confirm the page is loading.</p>\n        <FinanceOverview />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 sm:px-6 lg:px-8\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8 overflow-x-auto\">\n              {tabs.map((tab) => (\n                <Link\n                  key={tab.id}\n                  href={tab.href}\n                  className={`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-primary-500 text-primary-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  } flex items-center`}\n                >\n                  <tab.icon className=\"mr-2 h-5 w-5\" />\n                  {tab.name}\n                </Link>\n              ))}\n            </nav>\n          </div>\n        </div>\n      </div>\n\n      {/* Render the active component */}\n      <div className=\"bg-gray-50 min-h-screen p-6\">\n        {renderContent()}\n      </div>\n    </div>\n  );\n}","size_bytes":3967},"client/src/pages/HumanResources.tsx":{"content":"import { useState } from 'react';\nimport { Route, Link, useLocation } from 'wouter';\nimport { Users, UserPlus, Award, BookOpen, LineChart } from 'lucide-react';\n\n// Import HR sub-pages\nimport { HROverview } from '../components/hr/HROverview';\nimport { Employees } from '../components/hr/Employees';\nimport { Recruitment } from '../components/hr/Recruitment';\nimport { Training } from '../components/hr/Training';\nimport { Performance } from '../components/hr/Performance';\n\nexport function HumanResources() {\n  const [location] = useLocation();\n  const [activeTab, setActiveTab] = useState(\n    location === '/human-resources' ? 'overview' :\n    location.includes('/employees') ? 'employees' :\n    location.includes('/recruitment') ? 'recruitment' :\n    location.includes('/training') ? 'training' :\n    location.includes('/performance') ? 'performance' :\n    'overview'\n  );\n\n  const tabs = [\n    { id: 'overview', name: 'Overview', href: '/human-resources', icon: Users },\n    { id: 'employees', name: 'Employees', href: '/human-resources/employees', icon: Users },\n    { id: 'recruitment', name: 'Recruitment', href: '/human-resources/recruitment', icon: UserPlus },\n    { id: 'training', name: 'Training', href: '/human-resources/training', icon: BookOpen },\n    { id: 'performance', name: 'Performance', href: '/human-resources/performance', icon: LineChart },\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 sm:px-6 lg:px-8\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8 overflow-x-auto\">\n              {tabs.map((tab) => (\n                <Link\n                  key={tab.id}\n                  to={tab.href}\n                  className={`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-primary-500 text-primary-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  } flex items-center`}\n                  onClick={() => setActiveTab(tab.id)}\n                >\n                  <tab.icon className=\"mr-2 h-5 w-5\" />\n                  {tab.name}\n                </Link>\n              ))}\n            </nav>\n          </div>\n        </div>\n      </div>\n\n      {location === '/human-resources' && <HROverview />}\n      {location === '/human-resources/employees' && <Employees />}\n      {location === '/human-resources/recruitment' && <Recruitment />}\n      {location === '/human-resources/training' && <Training />}\n      {location === '/human-resources/performance' && <Performance />}\n    </div>\n  );\n}","size_bytes":2704},"client/src/pages/LoginPage.tsx":{"content":"import { useState } from 'react';\nimport { useAuthStore } from '../stores/authStore';\n\nexport function LoginPage() {\n  const [email, setEmail] = useState('admin@example.com');\n  const [password, setPassword] = useState('password');\n  const [rememberMe, setRememberMe] = useState(false);\n  const { login, isLoading, error } = useAuthStore();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    await login(email, password);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"flex justify-center\">\n          <div className=\"h-16 w-16 rounded-lg bg-primary-500 flex items-center justify-center\">\n            <span className=\"text-2xl font-bold text-white\">E</span>\n          </div>\n        </div>\n        <h2 className=\"mt-6 text-center text-3xl font-bold tracking-tight text-gray-900\">\n          Enterprise ERP System\n        </h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          Sign in to access your dashboard\n        </p>\n      </div>\n\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email address\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"input\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Password\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"input\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember_me\"\n                  name=\"remember_me\"\n                  type=\"checkbox\"\n                  checked={rememberMe}\n                  onChange={(e) => setRememberMe(e.target.checked)}\n                  className=\"h-4 w-4 rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\n                />\n                <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\n                  Remember me\n                </label>\n              </div>\n\n              <div className=\"text-sm\">\n                <a href=\"#\" className=\"font-medium text-primary-600 hover:text-primary-500\">\n                  Forgot your password?\n                </a>\n              </div>\n            </div>\n\n            {error && (\n              <div className=\"bg-error-50 border border-error-200 text-error-700 px-4 py-3 rounded relative\" role=\"alert\">\n                <span className=\"block sm:inline\">{error}</span>\n              </div>\n            )}\n\n            <div>\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {isLoading ? (\n                  <>\n                    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Signing in...\n                  </>\n                ) : (\n                  'Sign in'\n                )}\n              </button>\n            </div>\n          </form>\n\n          <div className=\"mt-6\">\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-300\" />\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-2 bg-white text-gray-500\">Available demo accounts</span>\n              </div>\n            </div>\n\n            <div className=\"mt-6 grid grid-cols-1 gap-3\">\n              <div className=\"text-sm text-center text-gray-600\">\n                <p className=\"font-medium text-gray-800\">Demo Credentials:</p>\n                <p className=\"mt-1\">admin@example.com / password</p>\n                <p>manager@example.com / password</p>\n                <p>finance@example.com / password</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":5691},"client/src/pages/Manufacturing.tsx":{"content":"import { useState } from 'react';\nimport { Route, Link, useLocation } from 'wouter';\nimport { Factory, Settings, CheckSquare, PenTool as Tool, BarChart } from 'lucide-react';\nimport { ManufacturingOverview } from '../components/manufacturing/ManufacturingOverview';\nimport { Production } from '../components/manufacturing/Production';\nimport { QualityControl } from '../components/manufacturing/QualityControl';\nimport { Maintenance } from '../components/manufacturing/Maintenance';\nimport { Planning } from '../components/manufacturing/Planning';\n\nexport function Manufacturing() {\n  const [location] = useLocation();\n  const [activeTab, setActiveTab] = useState(\n    location === '/manufacturing' ? 'overview' :\n    location.includes('/production') ? 'production' :\n    location.includes('/quality') ? 'quality' :\n    location.includes('/maintenance') ? 'maintenance' :\n    location.includes('/planning') ? 'planning' :\n    'overview'\n  );\n\n  const tabs = [\n    { id: 'overview', name: 'Overview', href: '/manufacturing', icon: Factory },\n    { id: 'production', name: 'Production', href: '/manufacturing/production', icon: Settings },\n    { id: 'quality', name: 'Quality Control', href: '/manufacturing/quality', icon: CheckSquare },\n    { id: 'maintenance', name: 'Maintenance', href: '/manufacturing/maintenance', icon: Tool },\n    { id: 'planning', name: 'Planning', href: '/manufacturing/planning', icon: BarChart },\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 sm:px-6 lg:px-8\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8 overflow-x-auto\">\n              {tabs.map((tab) => (\n                <Link\n                  key={tab.id}\n                  to={tab.href}\n                  className={`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-primary-500 text-primary-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  } flex items-center`}\n                  onClick={() => setActiveTab(tab.id)}\n                >\n                  <tab.icon className=\"mr-2 h-5 w-5\" />\n                  {tab.name}\n                </Link>\n              ))}\n            </nav>\n          </div>\n        </div>\n      </div>\n\n      <Route path=\"/manufacturing\" component={ManufacturingOverview} />\n      <Route path=\"/manufacturing/production\" component={Production} />\n      <Route path=\"/manufacturing/quality\" component={QualityControl} />\n      <Route path=\"/manufacturing/maintenance\" component={Maintenance} />\n      <Route path=\"/manufacturing/planning\" component={Planning} />\n    </div>\n  );\n}","size_bytes":2789},"client/src/pages/ProjectManagement.tsx":{"content":"import { useState } from 'react';\nimport { Route, Link, useLocation } from 'wouter';\nimport { FolderKanban, ListTodo, Calendar, Users, BarChart } from 'lucide-react';\nimport { ProjectOverview } from '../components/projects/ProjectOverview/index';\nimport { ActiveProjects } from '../components/projects/ActiveProjects/index';\nimport { ProjectTasks } from '../components/projects/ProjectTasks/index';\nimport { ProjectResources } from '../components/projects/ProjectResources/index';\nimport { ProjectCalendar } from '../components/projects/ProjectCalendar/index';\n\nexport function ProjectManagement() {\n  const [location] = useLocation();\n  const [activeTab, setActiveTab] = useState(\n    location === '/projects' ? 'overview' :\n    location.includes('/active') ? 'active' :\n    location.includes('/tasks') ? 'tasks' :\n    location.includes('/resources') ? 'resources' :\n    location.includes('/calendar') ? 'calendar' :\n    'overview'\n  );\n\n  const tabs = [\n    { id: 'overview', name: 'Overview', href: '/projects', icon: BarChart },\n    { id: 'active', name: 'Active Projects', href: '/projects/active', icon: FolderKanban },\n    { id: 'tasks', name: 'Tasks', href: '/projects/tasks', icon: ListTodo },\n    { id: 'resources', name: 'Resources', href: '/projects/resources', icon: Users },\n    { id: 'calendar', name: 'Calendar', href: '/projects/calendar', icon: Calendar },\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 sm:px-6 lg:px-8\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8 overflow-x-auto\">\n              {tabs.map((tab) => (\n                <Link\n                  key={tab.id}\n                  to={tab.href}\n                  className={`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-primary-500 text-primary-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  } flex items-center`}\n                  onClick={() => setActiveTab(tab.id)}\n                >\n                  <tab.icon className=\"mr-2 h-5 w-5\" />\n                  {tab.name}\n                </Link>\n              ))}\n            </nav>\n          </div>\n        </div>\n      </div>\n\n      <Route path=\"/projects\" component={ProjectOverview} />\n      <Route path=\"/projects/active\" component={ActiveProjects} />\n      <Route path=\"/projects/tasks\" component={ProjectTasks} />\n      <Route path=\"/projects/resources\" component={ProjectResources} />\n      <Route path=\"/projects/calendar\" component={ProjectCalendar} />\n    </div>\n  );\n}","size_bytes":2715},"client/src/pages/Settings.tsx":{"content":"import { useState } from 'react';\nimport { Route, Link, useLocation } from 'wouter';\nimport { Settings as SettingsIcon, User, Shield, Bell, Database, Globe, Palette, HelpCircle } from 'lucide-react';\nimport { GeneralSettings } from '../components/settings/GeneralSettings';\nimport { ProfileSettings } from '../components/settings/ProfileSettings';\nimport { SecuritySettings } from '../components/settings/SecuritySettings';\nimport { NotificationSettings } from '../components/settings/NotificationSettings';\nimport { IntegrationSettings } from '../components/settings/IntegrationSettings';\n\nexport function Settings() {\n  const [location] = useLocation();\n  const activeTab = \n    location === '/settings' || location.startsWith('/settings/general') ? 'general' :\n    location.includes('/profile') ? 'profile' :\n    location.includes('/security') ? 'security' :\n    location.includes('/notifications') ? 'notifications' :\n    location.includes('/integrations') ? 'integrations' :\n    'general';\n\n  const tabs = [\n    { id: 'general', name: 'General', href: '/settings', icon: SettingsIcon },\n    { id: 'profile', name: 'Profile', href: '/settings/profile', icon: User },\n    { id: 'security', name: 'Security', href: '/settings/security', icon: Shield },\n    { id: 'notifications', name: 'Notifications', href: '/settings/notifications', icon: Bell },\n    { id: 'integrations', name: 'Integrations', href: '/settings/integrations', icon: Database },\n  ];\n\n  // Render the appropriate settings component based on the active tab\n  const renderActiveComponent = () => {\n    switch (activeTab) {\n      case 'profile':\n        return <ProfileSettings />;\n      case 'security':\n        return <SecuritySettings />;\n      case 'notifications':\n        return <NotificationSettings />;\n      case 'integrations':\n        return <IntegrationSettings />;\n      case 'general':\n      default:\n        return <GeneralSettings />;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 sm:px-6 lg:px-8\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8 overflow-x-auto\">\n              {tabs.map((tab) => (\n                <Link\n                  key={tab.id}\n                  to={tab.href}\n                  className={`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-primary-500 text-primary-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  } flex items-center`}\n                >\n                  <tab.icon className=\"mr-2 h-5 w-5\" />\n                  {tab.name}\n                </Link>\n              ))}\n            </nav>\n          </div>\n        </div>\n      </div>\n\n      {renderActiveComponent()}\n    </div>\n  );\n}","size_bytes":2908},"client/src/pages/SupplyChain.tsx":{"content":"import { useState } from 'react';\nimport { Route, Link, useLocation } from 'wouter';\nimport { ShoppingCart, Package, Truck, Users, BarChart } from 'lucide-react';\nimport { SupplyChainOverview } from '../components/supply-chain/SupplyChainOverview/index';\nimport { Procurement } from '../components/supply-chain/Procurement/index';\nimport { Inventory } from '../components/supply-chain/Inventory/index';\nimport { Vendors } from '../components/supply-chain/Vendors/index';\nimport { Logistics } from '../components/supply-chain/Logistics/index';\n\nexport function SupplyChain() {\n  const [location] = useLocation();\n  const [activeTab, setActiveTab] = useState(\n    location === '/supply-chain' ? 'overview' :\n    location.includes('/procurement') ? 'procurement' :\n    location.includes('/inventory') ? 'inventory' :\n    location.includes('/vendors') ? 'vendors' :\n    location.includes('/logistics') ? 'logistics' :\n    'overview'\n  );\n\n  const tabs = [\n    { id: 'overview', name: 'Overview', href: '/supply-chain', icon: BarChart },\n    { id: 'procurement', name: 'Procurement', href: '/supply-chain/procurement', icon: ShoppingCart },\n    { id: 'inventory', name: 'Inventory', href: '/supply-chain/inventory', icon: Package },\n    { id: 'vendors', name: 'Vendors', href: '/supply-chain/vendors', icon: Users },\n    { id: 'logistics', name: 'Logistics', href: '/supply-chain/logistics', icon: Truck },\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 sm:px-6 lg:px-8\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8 overflow-x-auto\">\n              {tabs.map((tab) => (\n                <Link\n                  key={tab.id}\n                  to={tab.href}\n                  className={`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-primary-500 text-primary-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  } flex items-center`}\n                  onClick={() => setActiveTab(tab.id)}\n                >\n                  <tab.icon className=\"mr-2 h-5 w-5\" />\n                  {tab.name}\n                </Link>\n              ))}\n            </nav>\n          </div>\n        </div>\n      </div>\n\n      <Route path=\"/supply-chain\" component={SupplyChainOverview} />\n      <Route path=\"/supply-chain/procurement\" component={Procurement} />\n      <Route path=\"/supply-chain/inventory\" component={Inventory} />\n      <Route path=\"/supply-chain/vendors\" component={Vendors} />\n      <Route path=\"/supply-chain/logistics\" component={Logistics} />\n    </div>\n  );\n}","size_bytes":2753},"client/src/stores/authStore.ts":{"content":"import { create } from 'zustand';\n\n// Define user roles\ntype UserRole = 'Administrator' | 'Manager' | 'Finance' | 'HR' | 'Sales' | 'Operations' | 'Employee';\n\n// User type\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  role: UserRole;\n  permissions: string[];\n}\n\n// Auth store state\ninterface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n  checkAuth: () => Promise<void>;\n  updateUser: (updatedUser: User) => void;\n}\n\n// Mock users for demo\nconst mockUsers: Record<string, User> = {\n  'admin@example.com': {\n    id: '1',\n    name: 'Admin User',\n    email: 'admin@example.com',\n    role: 'Administrator',\n    permissions: ['all']\n  },\n  'manager@example.com': {\n    id: '2',\n    name: 'Manager User',\n    email: 'manager@example.com',\n    role: 'Manager',\n    permissions: ['view:all', 'edit:all']\n  },\n  'finance@example.com': {\n    id: '3',\n    name: 'Finance User',\n    email: 'finance@example.com',\n    role: 'Finance',\n    permissions: ['view:finance', 'edit:finance']\n  }\n};\n\n// Create the auth store\nexport const useAuthStore = create<AuthState>((set) => ({\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n  \n  // Login function\n  login: async (email: string, password: string) => {\n    set({ isLoading: true, error: null });\n    \n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Check if user exists in mock data\n      if (mockUsers[email] && password === 'password') {\n        const user = mockUsers[email];\n        \n        // Store user in localStorage for persistence\n        localStorage.setItem('erp_user', JSON.stringify(user));\n        \n        set({ user, isAuthenticated: true, isLoading: false });\n      } else {\n        throw new Error('Invalid email or password');\n      }\n    } catch (error) {\n      set({ \n        isLoading: false, \n        error: error instanceof Error ? error.message : 'An error occurred' \n      });\n    }\n  },\n  \n  // Logout function\n  logout: () => {\n    localStorage.removeItem('erp_user');\n    set({ user: null, isAuthenticated: false });\n  },\n  \n  // Check if user is authenticated (e.g., on page refresh)\n  checkAuth: async () => {\n    set({ isLoading: true });\n    \n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Check localStorage for user data\n      const storedUser = localStorage.getItem('erp_user');\n      \n      if (storedUser) {\n        const user = JSON.parse(storedUser) as User;\n        set({ user, isAuthenticated: true });\n      }\n    } catch (error) {\n      // If there's an error, log the user out\n      localStorage.removeItem('erp_user');\n    } finally {\n      set({ isLoading: false });\n    }\n  },\n\n  // Update user profile\n  updateUser: (updatedUser: User) => {\n    set({ user: updatedUser });\n    localStorage.setItem('erp_user', JSON.stringify(updatedUser));\n  }\n}));","size_bytes":3074},"client/src/components/crm/Marketing.tsx":{"content":"import { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\nimport { Megaphone, Target, Users, TrendingUp, Mail, Share2 } from 'lucide-react';\nimport { DashboardCard } from '../dashboard/DashboardCard';\n\nconst campaignData = [\n  { month: 'Jan', leads: 120, conversions: 45 },\n  { month: 'Feb', leads: 140, conversions: 55 },\n  { month: 'Mar', leads: 160, conversions: 65 },\n  { month: 'Apr', leads: 180, conversions: 75 },\n  { month: 'May', leads: 200, conversions: 85 },\n  { month: 'Jun', leads: 220, conversions: 95 },\n];\n\nconst channelPerformance = [\n  { name: 'Email', value: 35 },\n  { name: 'Social', value: 25 },\n  { name: 'Search', value: 20 },\n  { name: 'Direct', value: 15 },\n  { name: 'Other', value: 5 },\n];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nconst activeCampaigns = [\n  {\n    id: 1,\n    name: 'Summer Sale 2025',\n    status: 'Active',\n    reach: '50K+',\n    engagement: '12%',\n    conversion: '3.5%'\n  },\n  {\n    id: 2,\n    name: 'Product Launch',\n    status: 'Active',\n    reach: '75K+',\n    engagement: '15%',\n    conversion: '4.2%'\n  },\n  {\n    id: 3,\n    name: 'Brand Awareness',\n    status: 'Scheduled',\n    reach: '100K+',\n    engagement: '-',\n    conversion: '-'\n  }\n];\n\nexport function Marketing() {\n  const [period, setPeriod] = useState('month');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <Megaphone className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Active Campaigns</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">12</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <Target className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Total Reach</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">250K+</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <Users className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Engagement Rate</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">13.5%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <TrendingUp className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Conversion Rate</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">3.8%</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Campaign Performance\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={campaignData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"leads\"\n                  name=\"Leads\"\n                  stroke=\"#0088FE\"\n                  strokeWidth={2}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"conversions\"\n                  name=\"Conversions\"\n                  stroke=\"#00C49F\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Channel Distribution\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={channelPerformance}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                  label={({ name, value }) => `${name}: ${value}%`}\n                >\n                  {channelPerformance.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Active Campaigns */}\n      <DashboardCard title=\"Active Campaigns\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Campaign Name\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Reach\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Engagement\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Conversion\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {activeCampaigns.map((campaign) => (\n                <tr key={campaign.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {campaign.name}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      campaign.status === 'Active'\n                        ? 'bg-green-100 text-green-800'\n                        : 'bg-yellow-100 text-yellow-800'\n                    }`}>\n                      {campaign.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {campaign.reach}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {campaign.engagement}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {campaign.conversion}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Marketing Insights */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <DashboardCard title=\"Email Campaigns\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Mail className=\"h-5 w-5 text-gray-400\" />\n                <span className=\"ml-2 text-sm font-medium text-gray-900\">Open Rate</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">24.8%</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Mail className=\"h-5 w-5 text-gray-400\" />\n                <span className=\"ml-2 text-sm font-medium text-gray-900\">Click Rate</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">12.5%</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Mail className=\"h-5 w-5 text-gray-400\" />\n                <span className=\"ml-2 text-sm font-medium text-gray-900\">Unsubscribe Rate</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">0.8%</span>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Social Media\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Share2 className=\"h-5 w-5 text-gray-400\" />\n                <span className=\"ml-2 text-sm font-medium text-gray-900\">Followers</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">125K</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Share2 className=\"h-5 w-5 text-gray-400\" />\n                <span className=\"ml-2 text-sm font-medium text-gray-900\">Engagement</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">4.2%</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Share2 className=\"h-5 w-5 text-gray-400\" />\n                <span className=\"ml-2 text-sm font-medium text-gray-900\">Reach</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">450K</span>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Campaign Insights\">\n          <div className=\"space-y-4\">\n            <div className=\"border-l-4 border-primary-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Best Performing</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Summer Sale campaign leads with 4.2% conversion\n              </p>\n            </div>\n            <div className=\"border-l-4 border-warning-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Opportunity</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Email campaigns show 15% growth potential\n              </p>\n            </div>\n            <div className=\"border-l-4 border-success-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Trend</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Social media engagement up 25% this month\n              </p>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n    </div>\n  );\n}","size_bytes":11844},"client/src/components/crm/Sales.tsx":{"content":"import { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport { DollarSign, TrendingUp, Users, Target, ShoppingCart } from 'lucide-react';\nimport { DashboardCard } from '../dashboard/DashboardCard';\n\nconst salesData = [\n  { month: 'Jan', sales: 65000, target: 60000 },\n  { month: 'Feb', sales: 59000, target: 60000 },\n  { month: 'Mar', sales: 80000, target: 60000 },\n  { month: 'Apr', sales: 81000, target: 70000 },\n  { month: 'May', sales: 76000, target: 70000 },\n  { month: 'Jun', sales: 85000, target: 70000 },\n];\n\nconst salesByProduct = [\n  { name: 'Product A', value: 35000 },\n  { name: 'Product B', value: 25000 },\n  { name: 'Product C', value: 20000 },\n  { name: 'Product D', value: 15000 },\n  { name: 'Others', value: 5000 },\n];\n\nconst recentSales = [\n  {\n    id: 1,\n    customer: 'Acme Corp',\n    product: 'Enterprise Plan',\n    amount: 12000,\n    status: 'Completed',\n    date: '2025-03-15'\n  },\n  {\n    id: 2,\n    customer: 'Global Industries',\n    product: 'Professional Plan',\n    amount: 8000,\n    status: 'Pending',\n    date: '2025-03-14'\n  },\n  {\n    id: 3,\n    customer: 'Tech Solutions',\n    product: 'Basic Plan',\n    amount: 4000,\n    status: 'Completed',\n    date: '2025-03-13'\n  }\n];\n\nexport function Sales() {\n  const [period, setPeriod] = useState('month');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <DollarSign className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Total Sales</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">$446,000</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <TrendingUp className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Growth</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">+15.3%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <Users className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">New Customers</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">64</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Target className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Target Progress</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">89%</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Sales Performance\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={salesData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip formatter={(value) => `$${value.toLocaleString()}`} />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"sales\"\n                  name=\"Sales\"\n                  stroke=\"#0088FE\"\n                  strokeWidth={2}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"target\"\n                  name=\"Target\"\n                  stroke=\"#00C49F\"\n                  strokeWidth={2}\n                  strokeDasharray=\"5 5\"\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Sales by Product\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={salesByProduct}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip formatter={(value) => `$${value.toLocaleString()}`} />\n                <Legend />\n                <Bar dataKey=\"value\" name=\"Sales\" fill=\"#8884d8\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Recent Sales */}\n      <DashboardCard title=\"Recent Sales\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Customer\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Product\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Amount\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Date\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {recentSales.map((sale) => (\n                <tr key={sale.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {sale.customer}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {sale.product}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    ${sale.amount.toLocaleString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      sale.status === 'Completed'\n                        ? 'bg-green-100 text-green-800'\n                        : 'bg-yellow-100 text-yellow-800'\n                    }`}>\n                      {sale.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {sale.date}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Sales Insights */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <DashboardCard title=\"Top Products\">\n          <div className=\"space-y-4\">\n            {salesByProduct.slice(0, 3).map((product, index) => (\n              <div key={product.name} className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <div className=\"h-8 w-8 rounded-full bg-gray-100 flex items-center justify-center\">\n                    <ShoppingCart className=\"h-4 w-4 text-gray-600\" />\n                  </div>\n                  <div className=\"ml-3\">\n                    <p className=\"text-sm font-medium text-gray-900\">{product.name}</p>\n                    <p className=\"text-xs text-gray-500\">${product.value.toLocaleString()} in sales</p>\n                  </div>\n                </div>\n                <span className=\"text-sm font-medium text-gray-900\">#{index + 1}</span>\n              </div>\n            ))}\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Sales Targets\">\n          <div className=\"space-y-4\">\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Monthly Goal</span>\n                <span className=\"text-sm font-medium text-gray-900\">89%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-primary-500 h-2 rounded-full\" style={{ width: '89%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Quarterly Goal</span>\n                <span className=\"text-sm font-medium text-gray-900\">76%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-secondary-500 h-2 rounded-full\" style={{ width: '76%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Annual Goal</span>\n                <span className=\"text-sm font-medium text-gray-900\">65%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-accent-500 h-2 rounded-full\" style={{ width: '65%' }}></div>\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Sales Insights\">\n          <div className=\"space-y-4\">\n            <div className=\"border-l-4 border-primary-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Top Performer</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Product A leads with 35% of total sales\n              </p>\n            </div>\n            <div className=\"border-l-4 border-warning-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Growth Opportunity</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Product C shows 25% growth potential\n              </p>\n            </div>\n            <div className=\"border-l-4 border-success-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Customer Retention</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                85% customer retention rate achieved\n              </p>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n    </div>\n  );\n}","size_bytes":11506},"client/src/components/crm/Support.tsx":{"content":"import { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport { MessageSquare, Clock, CheckCircle, AlertTriangle, Users } from 'lucide-react';\nimport { DashboardCard } from '../dashboard/DashboardCard';\n\nconst ticketData = [\n  { month: 'Jan', opened: 120, resolved: 110 },\n  { month: 'Feb', opened: 140, resolved: 130 },\n  { month: 'Mar', opened: 160, resolved: 150 },\n  { month: 'Apr', opened: 180, resolved: 170 },\n  { month: 'May', opened: 200, resolved: 190 },\n  { month: 'Jun', opened: 220, resolved: 210 },\n];\n\nconst responseTimeData = [\n  { day: 'Mon', time: 2.5 },\n  { day: 'Tue', time: 2.8 },\n  { day: 'Wed', time: 2.2 },\n  { day: 'Thu', time: 2.7 },\n  { day: 'Fri', time: 2.4 },\n  { day: 'Sat', time: 1.8 },\n  { day: 'Sun', time: 1.5 },\n];\n\nconst activeTickets = [\n  {\n    id: 1,\n    customer: 'John Smith',\n    subject: 'Login Issue',\n    priority: 'High',\n    status: 'Open',\n    assignedTo: 'Sarah Wilson',\n    created: '2025-03-15'\n  },\n  {\n    id: 2,\n    customer: 'Jane Doe',\n    subject: 'Payment Failed',\n    priority: 'Medium',\n    status: 'In Progress',\n    assignedTo: 'Mike Johnson',\n    created: '2025-03-14'\n  },\n  {\n    id: 3,\n    customer: 'Bob Wilson',\n    subject: 'Feature Request',\n    priority: 'Low',\n    status: 'Open',\n    assignedTo: 'Emily Davis',\n    created: '2025-03-13'\n  }\n];\n\nexport function Support() {\n  const [period, setPeriod] = useState('week');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <MessageSquare className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Open Tickets</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">48</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <Clock className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Avg Response Time</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">2.5h</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <CheckCircle className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Resolution Rate</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">94%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Users className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Customer Satisfaction</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">4.8/5</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Ticket Volume\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={ticketData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"opened\"\n                  name=\"Opened Tickets\"\n                  stroke=\"#0088FE\"\n                  strokeWidth={2}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"resolved\"\n                  name=\"Resolved Tickets\"\n                  stroke=\"#00C49F\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Response Time Trend\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={responseTimeData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"day\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"time\" name=\"Response Time (hours)\" fill=\"#8884d8\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Active Tickets */}\n      <DashboardCard title=\"Active Tickets\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Customer\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Subject\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Priority\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Assigned To\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Created\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {activeTickets.map((ticket) => (\n                <tr key={ticket.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {ticket.customer}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {ticket.subject}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      ticket.priority === 'High'\n                        ? 'bg-red-100 text-red-800'\n                        : ticket.priority === 'Medium'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-green-100 text-green-800'\n                    }`}>\n                      {ticket.priority}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      ticket.status === 'Open'\n                        ? 'bg-blue-100 text-blue-800'\n                        : ticket.status === 'In Progress'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-green-100 text-green-800'\n                    }`}>\n                      {ticket.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {ticket.assignedTo}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {ticket.created}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Support Insights */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <DashboardCard title=\"Ticket Categories\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm font-medium text-gray-900\">Technical Issues</span>\n              <span className=\"text-sm font-medium text-gray-900\">45%</span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div className=\"bg-primary-500 h-2 rounded-full\" style={{ width: '45%' }}></div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm font-medium text-gray-900\">Billing Questions</span>\n              <span className=\"text-sm font-medium text-gray-900\">30%</span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div className=\"bg-secondary-500 h-2 rounded-full\" style={{ width: '30%' }}></div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm font-medium text-gray-900\">Feature Requests</span>\n              <span className=\"text-sm font-medium text-gray-900\">25%</span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div className=\"bg-accent-500 h-2 rounded-full\" style={{ width: '25%' }}></div>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Team Performance\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <div className=\"h-8 w-8 rounded-full bg-gray-100 flex items-center justify-center\">\n                  <Users className=\"h-4 w-4 text-gray-600\" />\n                </div>\n                <span className=\"ml-2 text-sm font-medium text-gray-900\">Sarah Wilson</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">98%</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <div className=\"h-8 w-8 rounded-full bg-gray-100 flex items-center justify-center\">\n                  <Users className=\"h-4 w-4 text-gray-600\" />\n                </div>\n                <span className=\"ml-2 text-sm font-medium text-gray-900\">Mike Johnson</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">95%</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <div className=\"h-8 w-8 rounded-full bg-gray-100 flex items-center justify-center\">\n                  <Users className=\"h-4 w-4 text-gray-600\" />\n                </div>\n                <span className=\"ml-2 text-sm font-medium text-gray-900\">Emily Davis</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">92%</span>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Support Insights\">\n          <div className=\"space-y-4\">\n            <div className=\"border-l-4 border-primary-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Peak Hours</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Highest ticket volume between 9AM-11AM\n              </p>\n            </div>\n            <div className=\"border-l-4 border-warning-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Common Issues</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Login problems account for 25% of tickets\n              </p>\n            </div>\n            <div className=\"border-l-4 border-success-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Customer Feedback</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                95% satisfaction with response time\n              </p>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n    </div>\n  );\n}","size_bytes":12938},"client/src/components/dashboard/DashboardCard.tsx":{"content":"import { ReactNode } from 'react';\n\ninterface DashboardCardProps {\n  title: string;\n  children: ReactNode;\n}\n\nexport function DashboardCard({ title, children }: DashboardCardProps) {\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\n      <div className=\"px-6 py-5 border-b border-gray-200\">\n        <h3 className=\"text-lg font-medium text-gray-900\">{title}</h3>\n      </div>\n      <div className=\"px-6 py-5\">\n        {children}\n      </div>\n    </div>\n  );\n}","size_bytes":488},"client/src/components/dashboard/DashboardMetric.tsx":{"content":"import { ReactNode } from 'react';\nimport { TrendingUp, TrendingDown, Minus } from 'lucide-react';\n\ninterface DashboardMetricProps {\n  title: string;\n  value: string;\n  change: number;\n  changeType: 'increase' | 'decrease' | 'neutral';\n  icon?: ReactNode;\n}\n\nexport function DashboardMetric({ title, value, change, changeType, icon }: DashboardMetricProps) {\n  const getChangeColor = () => {\n    switch (changeType) {\n      case 'increase':\n        return 'text-success-600';\n      case 'decrease':\n        return 'text-error-600';\n      case 'neutral':\n        return 'text-gray-500';\n      default:\n        return 'text-gray-500';\n    }\n  };\n\n  const getChangeIcon = () => {\n    switch (changeType) {\n      case 'increase':\n        return <TrendingUp className=\"h-4 w-4\" />;\n      case 'decrease':\n        return <TrendingDown className=\"h-4 w-4\" />;\n      case 'neutral':\n        return <Minus className=\"h-4 w-4\" />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm p-6 transition-all duration-200 hover:shadow-md\">\n      <div className=\"flex items-center\">\n        {icon && <div className=\"mr-4\">{icon}</div>}\n        <div>\n          <p className=\"text-sm font-medium text-gray-500\">{title}</p>\n          <div className=\"flex items-baseline\">\n            <p className=\"text-2xl font-semibold text-gray-900\">{value}</p>\n            {change !== 0 && (\n              <p className={`ml-2 flex items-center text-sm ${getChangeColor()}`}>\n                {getChangeIcon()}\n                <span className=\"ml-1\">{Math.abs(change)}%</span>\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":1694},"client/src/components/dashboard/DashboardRecentActivity.tsx":{"content":"import { format, parseISO } from 'date-fns';\nimport { \n  ShoppingCart, \n  DollarSign, \n  Users, \n  FolderKanban, \n  HeartHandshake,\n  Clock,\n  CheckCircle,\n  AlertCircle\n} from 'lucide-react';\n\ninterface Activity {\n  id: string;\n  type: string;\n  description: string;\n  timestamp: string;\n  user: string;\n  module: string;\n  status?: string;\n}\n\ninterface DashboardRecentActivityProps {\n  activities: Activity[];\n}\n\nexport function DashboardRecentActivity({ activities }: DashboardRecentActivityProps) {\n  const getActivityIcon = (type: string) => {\n    switch (type) {\n      case 'purchase_order':\n        return <ShoppingCart className=\"h-5 w-5 text-primary-500\" />;\n      case 'invoice':\n        return <DollarSign className=\"h-5 w-5 text-success-500\" />;\n      case 'employee':\n        return <Users className=\"h-5 w-5 text-accent-500\" />;\n      case 'project':\n        return <FolderKanban className=\"h-5 w-5 text-warning-500\" />;\n      case 'customer':\n        return <HeartHandshake className=\"h-5 w-5 text-secondary-500\" />;\n      default:\n        return <Clock className=\"h-5 w-5 text-gray-400\" />;\n    }\n  };\n\n  const getStatusBadge = (status?: string) => {\n    if (!status) return null;\n    \n    switch (status) {\n      case 'completed':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-success-100 text-success-800\">\n            <CheckCircle className=\"mr-1 h-3 w-3\" />\n            Completed\n          </span>\n        );\n      case 'pending':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-warning-100 text-warning-800\">\n            <Clock className=\"mr-1 h-3 w-3\" />\n            Pending\n          </span>\n        );\n      case 'in_progress':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800\">\n            <AlertCircle className=\"mr-1 h-3 w-3\" />\n            In Progress\n          </span>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const formatTime = (timestamp: string) => {\n    try {\n      const date = parseISO(timestamp);\n      return format(date, 'MMM d, yyyy - h:mm a');\n    } catch (e) {\n      return timestamp;\n    }\n  };\n\n  return (\n    <ul className=\"divide-y divide-gray-200\">\n      {activities.map((activity) => (\n        <li key={activity.id} className=\"py-4\">\n          <div className=\"flex items-start\">\n            <div className=\"flex-shrink-0 h-10 w-10 rounded-md bg-gray-100 flex items-center justify-center\">\n              {getActivityIcon(activity.type)}\n            </div>\n            <div className=\"ml-4 flex-1\">\n              <div className=\"flex items-center justify-between\">\n                <p className=\"text-sm font-medium text-gray-900\">{activity.description}</p>\n                {getStatusBadge(activity.status)}\n              </div>\n              <div className=\"mt-1 flex items-center text-sm text-gray-500\">\n                <p className=\"mr-4\">{activity.user}</p>\n                <p>{formatTime(activity.timestamp)}</p>\n              </div>\n              <p className=\"mt-1 text-xs text-gray-400\">{activity.module}</p>\n            </div>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}","size_bytes":3300},"client/src/components/finance/Accounting.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { DollarSign, FileText, TrendingUp, Plus, X, Calendar, Building, CreditCard, Receipt, Users } from 'lucide-react';\nimport { DashboardCard } from '../dashboard/DashboardCard';\n\ninterface AccountingEntry {\n  id: string;\n  date: string;\n  accountName: string;\n  accountCode: string;\n  description: string;\n  debitAmount: number;\n  creditAmount: number;\n  referenceNumber: string;\n  category: string;\n}\n\ninterface Invoice {\n  id: string;\n  vendor: string;\n  amount: number;\n  dueDate: string;\n  status: 'Pending' | 'Overdue' | 'Paid';\n  invoiceNumber: string;\n  dateCreated: string;\n}\n\ninterface ReceivableInvoice {\n  id: string;\n  customer: string;\n  amount: number;\n  dueDate: string;\n  status: 'Outstanding' | 'Partial' | 'Paid';\n  invoiceNumber: string;\n  dateCreated: string;\n}\n\nexport function Accounting() {\n  const [activeTab, setActiveTab] = useState('general');\n  const [showNewEntryModal, setShowNewEntryModal] = useState(false);\n  const [showInvoiceModal, setShowInvoiceModal] = useState(false);\n  const [showReceivableModal, setShowReceivableModal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  // Initialize data arrays first\n  const [generalLedger, setGeneralLedger] = useState<AccountingEntry[]>([]);\n  const [accountsPayable, setAccountsPayable] = useState<Invoice[]>([]);\n  const [accountsReceivable, setAccountsReceivable] = useState<ReceivableInvoice[]>([]);\n\n  // Form states\n  const [entryForm, setEntryForm] = useState({\n    date: new Date().toISOString().split('T')[0],\n    accountName: '',\n    accountCode: '',\n    description: '',\n    debitAmount: '',\n    creditAmount: '',\n    referenceNumber: '',\n    category: 'Assets'\n  });\n\n  const [invoiceForm, setInvoiceForm] = useState<{\n    vendor: string;\n    amount: string;\n    dueDate: string;\n    status: 'Pending' | 'Overdue' | 'Paid';\n  }>({\n    vendor: '',\n    amount: '',\n    dueDate: '',\n    status: 'Pending'\n  });\n\n  const [receivableForm, setReceivableForm] = useState<{\n    customer: string;\n    amount: string;\n    dueDate: string;\n    status: 'Outstanding' | 'Partial' | 'Paid';\n  }>({\n    customer: '',\n    amount: '',\n    dueDate: '',\n    status: 'Outstanding'\n  });\n\n  // Load data from localStorage on component mount\n  useEffect(() => {\n    const savedEntries = localStorage.getItem('accounting_entries');\n    const savedInvoices = localStorage.getItem('accounts_payable');\n    const savedReceivables = localStorage.getItem('accounts_receivable');\n\n    if (savedEntries) {\n      try {\n        setGeneralLedger(JSON.parse(savedEntries));\n      } catch (error) {\n        console.error('Error loading accounting entries:', error);\n      }\n    }\n\n    if (savedInvoices) {\n      try {\n        setAccountsPayable(JSON.parse(savedInvoices));\n      } catch (error) {\n        console.error('Error loading accounts payable:', error);\n      }\n    }\n\n    if (savedReceivables) {\n      try {\n        setAccountsReceivable(JSON.parse(savedReceivables));\n      } catch (error) {\n        console.error('Error loading accounts receivable:', error);\n      }\n    }\n  }, []);\n\n  // Predefined data\n  const vendors = [\n    'ABC Suppliers Ltd.',\n    'Global Materials Inc.',\n    'Tech Solutions Corp.',\n    'Office Supplies Co.',\n    'Equipment Rental LLC'\n  ];\n\n  const customers = [\n    'Acme Corporation',\n    'Global Industries',\n    'Tech Solutions Ltd.',\n    'Manufacturing Co.',\n    'Retail Partners Inc.'\n  ];\n\n  const categories = ['Assets', 'Liabilities', 'Equity', 'Revenue', 'Expenses'];\n\n  // Validation functions\n  const validateEntryForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!entryForm.date) newErrors.date = 'Date is required';\n    if (!entryForm.accountName) newErrors.accountName = 'Account name is required';\n    if (!entryForm.accountCode) newErrors.accountCode = 'Account code is required';\n    if (!entryForm.description) newErrors.description = 'Description is required';\n\n    const debit = parseFloat(entryForm.debitAmount) || 0;\n    const credit = parseFloat(entryForm.creditAmount) || 0;\n\n    if (debit === 0 && credit === 0) {\n      newErrors.amounts = 'Either debit or credit amount must be greater than 0';\n    }\n\n    if (debit > 0 && credit > 0) {\n      newErrors.amounts = 'Cannot have both debit and credit amounts';\n    }\n\n    if (entryForm.debitAmount && isNaN(parseFloat(entryForm.debitAmount))) {\n      newErrors.debitAmount = 'Invalid debit amount';\n    }\n\n    if (entryForm.creditAmount && isNaN(parseFloat(entryForm.creditAmount))) {\n      newErrors.creditAmount = 'Invalid credit amount';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const validateInvoiceForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!invoiceForm.vendor) newErrors.vendor = 'Vendor is required';\n    if (!invoiceForm.amount) newErrors.amount = 'Amount is required';\n    if (!invoiceForm.dueDate) newErrors.dueDate = 'Due date is required';\n\n    const amount = parseFloat(invoiceForm.amount);\n    if (isNaN(amount) || amount <= 0) {\n      newErrors.amount = 'Amount must be a positive number';\n    }\n\n    const today = new Date().toISOString().split('T')[0];\n    if (invoiceForm.status === 'Pending' && invoiceForm.dueDate < today) {\n      newErrors.dueDate = 'Due date cannot be in the past for pending invoices';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const validateReceivableForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!receivableForm.customer) newErrors.customer = 'Customer is required';\n    if (!receivableForm.amount) newErrors.amount = 'Amount is required';\n    if (!receivableForm.dueDate) newErrors.dueDate = 'Due date is required';\n\n    const amount = parseFloat(receivableForm.amount);\n    if (isNaN(amount) || amount <= 0) {\n      newErrors.amount = 'Amount must be a positive number';\n    }\n\n    const today = new Date().toISOString().split('T')[0];\n    if (receivableForm.status === 'Outstanding' && receivableForm.dueDate < today) {\n      newErrors.dueDate = 'Due date cannot be in the past for outstanding invoices';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Form submission handlers\n  const handleEntrySubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateEntryForm()) return;\n\n    setIsLoading(true);\n\n    try {\n      const newEntry: AccountingEntry = {\n        id: Date.now().toString(),\n        date: entryForm.date,\n        accountName: entryForm.accountName,\n        accountCode: entryForm.accountCode,\n        description: entryForm.description,\n        debitAmount: parseFloat(entryForm.debitAmount) || 0,\n        creditAmount: parseFloat(entryForm.creditAmount) || 0,\n        referenceNumber: entryForm.referenceNumber,\n        category: entryForm.category\n      };\n\n      const updatedEntries = [...generalLedger, newEntry];\n      setGeneralLedger(updatedEntries);\n      localStorage.setItem('accounting_entries', JSON.stringify(updatedEntries));\n\n      setSuccessMessage('Accounting entry added successfully!');\n      setEntryForm({\n        date: new Date().toISOString().split('T')[0],\n        accountName: '',\n        accountCode: '',\n        description: '',\n        debitAmount: '',\n        creditAmount: '',\n        referenceNumber: '',\n        category: 'Assets'\n      });\n      setShowNewEntryModal(false);\n\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (error) {\n      console.error('Error saving entry:', error);\n      setErrors({ submit: 'Failed to save entry. Please try again.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInvoiceSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateInvoiceForm()) return;\n\n    setIsLoading(true);\n\n    try {\n      const newInvoice: Invoice = {\n        id: Date.now().toString(),\n        vendor: invoiceForm.vendor,\n        amount: parseFloat(invoiceForm.amount),\n        dueDate: invoiceForm.dueDate,\n        status: invoiceForm.status,\n        invoiceNumber: `INV-${Date.now()}`,\n        dateCreated: new Date().toISOString().split('T')[0]\n      };\n\n      const updatedInvoices = [...accountsPayable, newInvoice];\n      setAccountsPayable(updatedInvoices);\n      localStorage.setItem('accounts_payable', JSON.stringify(updatedInvoices));\n\n      setSuccessMessage('Invoice added successfully!');\n      setInvoiceForm({\n        vendor: '',\n        amount: '',\n        dueDate: '',\n        status: 'Pending'\n      });\n      setShowInvoiceModal(false);\n\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (error) {\n      console.error('Error saving invoice:', error);\n      setErrors({ submit: 'Failed to save invoice. Please try again.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleReceivableSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateReceivableForm()) return;\n\n    setIsLoading(true);\n\n    try {\n      const newReceivable: ReceivableInvoice = {\n        id: Date.now().toString(),\n        customer: receivableForm.customer,\n        amount: parseFloat(receivableForm.amount),\n        dueDate: receivableForm.dueDate,\n        status: receivableForm.status,\n        invoiceNumber: `REC-${Date.now()}`,\n        dateCreated: new Date().toISOString().split('T')[0]\n      };\n\n      const updatedReceivables = [...accountsReceivable, newReceivable];\n      setAccountsReceivable(updatedReceivables);\n      localStorage.setItem('accounts_receivable', JSON.stringify(updatedReceivables));\n\n      setSuccessMessage('Receivable invoice added successfully!');\n      setReceivableForm({\n        customer: '',\n        amount: '',\n        dueDate: '',\n        status: 'Outstanding'\n      });\n      setShowReceivableModal(false);\n\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (error) {\n      console.error('Error saving receivable:', error);\n      setErrors({ submit: 'Failed to save receivable. Please try again.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const clearFieldError = (field: string) => {\n    if (errors[field]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'Paid':\n        return 'bg-green-100 text-green-800';\n      case 'Pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'Overdue':\n        return 'bg-red-100 text-red-800';\n      case 'Outstanding':\n        return 'bg-blue-100 text-blue-800';\n      case 'Partial':\n        return 'bg-orange-100 text-orange-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Success Message */}\n      {successMessage && (\n        <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded relative\">\n          <span className=\"block sm:inline\">{successMessage}</span>\n        </div>\n      )}\n\n      {/* Accounting Tabs */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8 px-6\" aria-label=\"Tabs\">\n            {[\n              { id: 'general', name: 'General Ledger', icon: FileText },\n              { id: 'payable', name: 'Payable', icon: CreditCard },\n              { id: 'receivable', name: 'Receivable', icon: DollarSign }\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`\n                  whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm flex items-center\n                  ${activeTab === tab.id\n                    ? 'border-primary-500 text-primary-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\n                `}\n              >\n                <tab.icon className=\"mr-2 h-5 w-5\" />\n                {tab.name}\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        <div className=\"p-6\">\n          {/* General Ledger Tab */}\n          {activeTab === 'general' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex justify-between items-center\">\n                <h3 className=\"text-lg font-medium text-gray-900\">General Ledger</h3>\n                <button \n                  className=\"inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-indigo-700 text-white font-semibold rounded-lg hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 shadow-lg hover:shadow-xl\"\n                  onClick={() => setShowNewEntryModal(true)}\n                >\n                  <Plus className=\"h-5 w-5 mr-2\" />\n                  New Entry\n                </button>\n              </div>\n\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Date\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Account\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Description\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Debit\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Credit\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Reference\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {generalLedger.map((entry) => (\n                      <tr key={entry.id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {entry.date}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm font-medium text-gray-900\">{entry.accountName}</div>\n                          <div className=\"text-sm text-gray-500\">{entry.accountCode}</div>\n                        </td>\n                        <td className=\"px-6 py-4 text-sm text-gray-500\">\n                          {entry.description}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                          {entry.debitAmount > 0 ? formatCurrency(entry.debitAmount) : '-'}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                          {entry.creditAmount > 0 ? formatCurrency(entry.creditAmount) : '-'}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {entry.referenceNumber}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n\n          {/* Accounts Payable Tab */}\n          {activeTab === 'payable' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex justify-between items-center\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Accounts Payable</h3>\n                <button \n                  className=\"inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-indigo-700 text-white font-semibold rounded-lg hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 shadow-lg hover:shadow-xl\"\n                  onClick={() => setShowInvoiceModal(true)}\n                >\n                  <Plus className=\"h-5 w-5 mr-2\" />\n                  Add Invoice\n                </button>\n              </div>\n\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Invoice #\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Vendor\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Amount\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Due Date\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Status\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Date Created\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {accountsPayable.map((invoice) => (\n                      <tr key={invoice.id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                          {invoice.invoiceNumber}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {invoice.vendor}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                          {formatCurrency(invoice.amount)}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {invoice.dueDate}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(invoice.status)}`}>\n                            {invoice.status}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {invoice.dateCreated}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n\n          {/* Accounts Receivable Tab */}\n          {activeTab === 'receivable' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex justify-between items-center\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Accounts Receivable</h3>\n                <button \n                  className=\"inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-indigo-700 text-white font-semibold rounded-lg hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 shadow-lg hover:shadow-xl\"\n                  onClick={() => setShowReceivableModal(true)}\n                >\n                  <Plus className=\"h-5 w-5 mr-2\" />\n                  New Invoice\n                </button>\n              </div>\n\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Invoice #\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Customer\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Amount\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Due Date\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Status\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Date Created\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {accountsReceivable.map((invoice) => (\n                      <tr key={invoice.id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                          {invoice.invoiceNumber}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {invoice.customer}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                          {formatCurrency(invoice.amount)}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {invoice.dueDate}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(invoice.status)}`}>\n                            {invoice.status}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {invoice.dateCreated}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* New Entry Modal */}\n      {showNewEntryModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm overflow-y-auto h-full w-full z-50 flex items-start justify-center p-2 sm:p-4\">\n          <div className=\"relative mx-auto w-full max-w-3xl my-4 sm:my-8 bg-white rounded-xl shadow-2xl border border-gray-100 overflow-hidden\">\n            {/* Header with gradient background */}\n            <div className=\"bg-gradient-to-r from-blue-600 to-indigo-700 px-4 sm:px-6 py-3 sm:py-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2 sm:space-x-3\">\n                  <div className=\"bg-white bg-opacity-20 rounded-lg p-1.5 sm:p-2\">\n                    <FileText className=\"h-4 w-4 sm:h-5 sm:w-5 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg sm:text-xl font-bold text-white\">New Accounting Entry</h3>\n                    <p className=\"text-blue-100 text-xs sm:text-sm hidden sm:block\">Create a new journal entry for the general ledger</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setShowNewEntryModal(false)}\n                  className=\"text-white hover:text-gray-200 bg-white bg-opacity-20 hover:bg-opacity-30 rounded-lg p-1.5 transition-all duration-200\"\n                >\n                  <X className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                </button>\n              </div>\n            </div>\n\n            {/* Form content */}\n            <div className=\"px-4 sm:px-6 py-4 max-h-[calc(100vh-8rem)] overflow-y-auto\">\n              <form onSubmit={handleEntrySubmit} className=\"space-y-4 sm:space-y-5\">\n                {/* Transaction Details Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Calendar className=\"h-4 w-4 mr-2 text-blue-600\" />\n                    Transaction Details\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Transaction Date <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"date\"\n                        value={entryForm.date}\n                        onChange={(e) => {\n                          setEntryForm(prev => ({ ...prev, date: e.target.value }));\n                          clearFieldError('date');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.date ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      />\n                      {errors.date && <p className=\"mt-1 text-xs text-red-600\">{errors.date}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Account Category <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        value={entryForm.category}\n                        onChange={(e) => setEntryForm(prev => ({ ...prev, category: e.target.value }))}\n                        className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm\"\n                      >\n                        {categories.map(category => (\n                          <option key={category} value={category}>{category}</option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Account Information Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Building className=\"h-4 w-4 mr-2 text-green-600\" />\n                    Account Information\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Account Name <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={entryForm.accountName}\n                        onChange={(e) => {\n                          setEntryForm(prev => ({ ...prev, accountName: e.target.value }));\n                          clearFieldError('accountName');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.accountName ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"e.g., Cash, Accounts Receivable\"\n                      />\n                      {errors.accountName && <p className=\"mt-1 text-xs text-red-600\">{errors.accountName}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Account Code <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        value={entryForm.accountCode}\n                        onChange={(e) => {\n                          setEntryForm(prev => ({ ...prev, accountCode: e.target.value }));\n                          clearFieldError('accountCode');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.accountCode ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"e.g., 1000, 1200\"\n                      />\n                      {errors.accountCode && <p className=\"mt-1 text-xs text-red-600\">{errors.accountCode}</p>}\n                    </div>\n                  </div>\n\n                  <div className=\"mt-3 sm:mt-4\">\n                    <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                      Transaction Description <span className=\"text-red-500\">*</span>\n                    </label>\n                    <textarea\n                      rows={2}\n                      value={entryForm.description}\n                      onChange={(e) => {\n                        setEntryForm(prev => ({ ...prev, description: e.target.value }));\n                        clearFieldError('description');\n                      }}\n                      className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white resize-none text-sm ${\n                        errors.description ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                      }`}\n                      placeholder=\"Transaction description...\"\n                    />\n                    {errors.description && <p className=\"mt-1 text-xs text-red-600\">{errors.description}</p>}\n                  </div>\n                </div>\n\n                {/* Amount Details Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <DollarSign className=\"h-4 w-4 mr-2 text-emerald-600\" />\n                    Amount Details\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Debit Amount\n                      </label>\n                      <div className=\"relative\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                          <span className=\"text-gray-500 text-sm\">$</span>\n                        </div>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          min=\"0\"\n                          value={entryForm.debitAmount}\n                          onChange={(e) => {\n                            setEntryForm(prev => ({ ...prev, debitAmount: e.target.value, creditAmount: '' }));\n                            clearFieldError('debitAmount');\n                            clearFieldError('amounts');\n                          }}\n                          className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm ${\n                            errors.debitAmount || errors.amounts ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                          }`}\n                          placeholder=\"0.00\"\n                        />\n                      </div>\n                      {errors.debitAmount && <p className=\"mt-1 text-xs text-red-600\">{errors.debitAmount}</p>}\n                    </div>\n\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Credit Amount\n                      </label>\n                      <div className=\"relative\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                          <span className=\"text-gray-500 text-sm\">$</span>\n                        </div>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          min=\"0\"\n                          value={entryForm.creditAmount}\n                          onChange={(e) => {\n                            setEntryForm(prev => ({ ...prev, creditAmount: e.target.value, debitAmount: '' }));\n                            clearFieldError('creditAmount');\n                            clearFieldError('amounts');\n                          }}\n                          className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm ${\n                            errors.creditAmount || errors.amounts ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                          }`}\n                          placeholder=\"0.00\"\n                        />\n                      </div>\n                      {errors.creditAmount && <p className=\"mt-1 text-xs text-red-600\">{errors.creditAmount}</p>}\n                    </div>\n                  </div>\n\n                  {errors.amounts && (\n                    <div className=\"mt-3 bg-red-50 border border-red-200 rounded-md p-2\">\n                      <p className=\"text-xs text-red-600 font-medium\">{errors.amounts}</p>\n                    </div>\n                  )}\n\n                  <div className=\"mt-3 sm:mt-4\">\n                    <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                      Reference Number\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={entryForm.referenceNumber}\n                      onChange={(e) => setEntryForm(prev => ({ ...prev, referenceNumber: e.target.value }))}\n                      className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm\"\n                      placeholder=\"Optional reference number\"\n                    />\n                  </div>\n                </div>\n\n                {errors.submit && (\n                  <div className=\"bg-red-50 border border-red-200 text-red-700 px-3 py-2 rounded-md\">\n                    <span className=\"text-sm font-medium\">{errors.submit}</span>\n                  </div>\n                )}\n\n                {/* Action buttons */}\n                <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowNewEntryModal(false)}\n                    className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-all duration-200 font-medium text-sm\"\n                    disabled={isLoading}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-6 py-2 bg-gradient-to-r from-blue-600 to-indigo-700 text-white rounded-md hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 font-semibold shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n                    disabled={isLoading}\n                  >\n                    {isLoading ? (\n                      <>\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2 inline-block\"></div>\n                        Processing...\n                      </>\n                    ) : (\n                      <>\n                        <Plus className=\"h-4 w-4 mr-2 inline-block\" />\n                        Create Entry\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Add Invoice Modal */}\n      {showInvoiceModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm overflow-y-auto h-full w-full z-50 flex items-start justify-center p-2 sm:p-4\">\n          <div className=\"relative mx-auto w-full max-w-2xl my-4 sm:my-8 bg-white rounded-xl shadow-2xl border border-gray-100 overflow-hidden\">\n            {/* Header with gradient background */}\n            <div className=\"bg-gradient-to-r from-blue-600 to-indigo-700 px-4 sm:px-6 py-3 sm:py-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2 sm:space-x-3\">\n                  <div className=\"bg-white bg-opacity-20 rounded-lg p-1.5 sm:p-2\">\n                    <CreditCard className=\"h-4 w-4 sm:h-5 sm:w-5 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg sm:text-xl font-bold text-white\">Add New Invoice</h3>\n                    <p className=\"text-blue-100 text-xs sm:text-sm hidden sm:block\">Add a new vendor invoice to accounts payable</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setShowInvoiceModal(false)}\n                  className=\"text-white hover:text-gray-200 bg-white bg-opacity-20 hover:bg-opacity-30 rounded-lg p-1.5 transition-all duration-200\"\n                >\n                  <X className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                </button>\n              </div>\n            </div>\n\n            {/* Form content */}\n            <div className=\"px-4 sm:px-6 py-4 max-h-[calc(100vh-8rem)] overflow-y-auto\">\n              <form onSubmit={handleInvoiceSubmit} className=\"space-y-4 sm:space-y-5\">\n                {/* Vendor Information Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Building className=\"h-4 w-4 mr-2 text-blue-600\" />\n                    Vendor Information\n                  </h4>\n                  <div>\n                    <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                      Vendor Name <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                      value={invoiceForm.vendor}\n                      onChange={(e) => {\n                        setInvoiceForm(prev => ({ ...prev, vendor: e.target.value }));\n                        clearFieldError('vendor');\n                      }}\n                      className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                        errors.vendor ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                      }`}\n                    >\n                      <option value=\"\">Select a vendor</option>\n                      {vendors.map(vendor => (\n                        <option key={vendor} value={vendor}>{vendor}</option>\n                      ))}\n                    </select>\n                    {errors.vendor && <p className=\"mt-1 text-xs text-red-600\">{errors.vendor}</p>}\n                  </div>\n                </div>\n\n                {/* Invoice Details Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <DollarSign className=\"h-4 w-4 mr-2 text-green-600\" />\n                    Invoice Details\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Invoice Amount <span className=\"text-red-500\">*</span>\n                      </label>\n                      <div className=\"relative\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                          <span className=\"text-gray-500 text-sm\">$</span>\n                        </div>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          min=\"0\"\n                          value={invoiceForm.amount}\n                          onChange={(e) => {\n                            setInvoiceForm(prev => ({ ...prev, amount: e.target.value }));\n                            clearFieldError('amount');\n                          }}\n                          className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm font-medium ${\n                            errors.amount ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                          }`}\n                          placeholder=\"0.00\"\n                        />\n                      </div>\n                      {errors.amount && <p className=\"mt-1 text-xs text-red-600\">{errors.amount}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Due Date <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"date\"\n                        value={invoiceForm.dueDate}\n                        onChange={(e) => {\n                          setInvoiceForm(prev => ({ ...prev, dueDate: e.target.value }));\n                          clearFieldError('dueDate');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.dueDate ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      />\n                      {errors.dueDate && <p className=\"mt-1 text-xs text-red-600\">{errors.dueDate}</p>}\n                    </div>\n                  </div>\n\n                  <div className=\"mt-3 sm:mt-4\">\n                    <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                      Payment Status <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                      value={invoiceForm.status}\n                      onChange={(e) => setInvoiceForm(prev => ({ ...prev, status: e.target.value as 'Pending' | 'Overdue' | 'Paid' }))}\n                      className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm\"\n                    >\n                      <option value=\"Pending\">Pending Payment</option>\n                      <option value=\"Overdue\">Overdue</option>\n                      <option value=\"Paid\">Paid</option>\n                    </select>\n                  </div>\n                </div>\n\n                {errors.submit && (\n                  <div className=\"bg-red-50 border border-red-200 text-red-700 px-3 py-2 rounded-md\">\n                    <span className=\"text-sm font-medium\">{errors.submit}</span>\n                  </div>\n                )}\n\n                {/* Action buttons */}\n                <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowInvoiceModal(false)}\n                    className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-all duration-200 font-medium text-sm\"\n                    disabled={isLoading}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-6 py-2 bg-gradient-to-r from-blue-600 to-indigo-700 text-white rounded-md hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 font-semibold shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n                    disabled={isLoading}\n                  >\n                    {isLoading ? (\n                      <>\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2 inline-block\"></div>\n                        Processing...\n                      </>\n                    ) : (\n                      <>\n                        <Plus className=\"h-4 w-4 mr-2 inline-block\" />\n                        Save Invoice\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* New Receivable Invoice Modal */}\n      {showReceivableModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm overflow-y-auto h-full w-full z-50 flex items-start justify-center p-2 sm:p-4\">\n          <div className=\"relative mx-auto w-full max-w-2xl my-4 sm:my-8 bg-white rounded-xl shadow-2xl border border-gray-100 overflow-hidden\">\n            {/* Header with gradient background */}\n            <div className=\"bg-gradient-to-r from-blue-600 to-indigo-700 px-4 sm:px-6 py-3 sm:py-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2 sm:space-x-3\">\n                  <div className=\"bg-white bg-opacity-20 rounded-lg p-1.5 sm:p-2\">\n                    <Receipt className=\"h-4 w-4 sm:h-5 sm:w-5 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg sm:text-xl font-bold text-white\">New Receivable Invoice</h3>\n                    <p className=\"text-blue-100 text-xs sm:text-sm hidden sm:block\">Create a new customer invoice for accounts receivable</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setShowReceivableModal(false)}\n                  className=\"text-white hover:text-gray-200 bg-white bg-opacity-20 hover:bg-opacity-30 rounded-lg p-1.5 transition-all duration-200\"\n                >\n                  <X className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                </button>\n              </div>\n            </div>\n\n            {/* Form content */}\n            <div className=\"px-4 sm:px-6 py-4 max-h-[calc(100vh-8rem)] overflow-y-auto\">\n              <form onSubmit={handleReceivableSubmit} className=\"space-y-4 sm:space-y-5\">\n                {/* Customer Information Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Users className=\"h-4 w-4 mr-2 text-blue-600\" />\n                    Customer Information\n                  </h4>\n                  <div>\n                    <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                      Customer Name <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                      value={receivableForm.customer}\n                      onChange={(e) => {\n                        setReceivableForm(prev => ({ ...prev, customer: e.target.value }));\n                        clearFieldError('customer');\n                      }}\n                      className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                        errors.customer ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                      }`}\n                    >\n                      <option value=\"\">Select a customer</option>\n                      {customers.map(customer => (\n                        <option key={customer} value={customer}>{customer}</option>\n                      ))}\n                    </select>\n                    {errors.customer && <p className=\"mt-1 text-xs text-red-600\">{errors.customer}</p>}\n                  </div>\n                </div>\n\n                {/* Invoice Details Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <DollarSign className=\"h-4 w-4 mr-2 text-blue-600\" />\n                    Invoice Details\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Invoice Amount <span className=\"text-red-500\">*</span>\n                      </label>\n                      <div className=\"relative\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                          <span className=\"text-gray-500 text-sm\">$</span>\n                        </div>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          min=\"0\"\n                          value={receivableForm.amount}\n                          onChange={(e) => {\n                            setReceivableForm(prev => ({ ...prev, amount: e.target.value }));\n                            clearFieldError('amount');\n                          }}\n                          className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm font-medium ${\n                            errors.amount ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                          }`}\n                          placeholder=\"0.00\"\n                        />\n                      </div>\n                      {errors.amount && <p className=\"mt-1 text-xs text-red-600\">{errors.amount}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Due Date <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"date\"\n                        value={receivableForm.dueDate}\n                        onChange={(e) => {\n                          setReceivableForm(prev => ({ ...prev, dueDate: e.target.value }));\n                          clearFieldError('dueDate');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.dueDate ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      />\n                      {errors.dueDate && <p className=\"mt-1 text-xs text-red-600\">{errors.dueDate}</p>}\n                    </div>\n                  </div>\n\n                  <div className=\"mt-3 sm:mt-4\">\n                    <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                      Payment Status <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                      value={receivableForm.status}\n                      onChange={(e) => setReceivableForm(prev => ({ ...prev, status: e.target.value as 'Outstanding' | 'Partial' | 'Paid' }))}\n                      className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm\"\n                    >\n                      <option value=\"Outstanding\">Outstanding</option>\n                      <option value=\"Partial\">Partial Payment</option>\n                      <option value=\"Paid\">Paid in Full</option>\n                    </select>\n                  </div>\n                </div>\n\n                {errors.submit && (\n                  <div className=\"bg-red-50 border border-red-200 text-red-700 px-3 py-2 rounded-md\">\n                    <span className=\"text-sm font-medium\">{errors.submit}</span>\n                  </div>\n                )}\n\n                {/* Action buttons */}\n                <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowReceivableModal(false)}\n                    className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-all duration-200 font-medium text-sm\"\n                    disabled={isLoading}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-6 py-2 bg-gradient-to-r from-blue-600 to-indigo-700 text-white rounded-md hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 font-semibold shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n                    disabled={isLoading}\n                  >\n                    {isLoading ? (\n                      <>\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2 inline-block\"></div>\n                        Processing...\n                      </>\n                    ) : (\n                      <>\n                        <Plus className=\"h-4 w-4 mr-2 inline-block\" />\n                        Create Invoice\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":57394},"client/src/components/finance/Budgeting.tsx":{"content":"import { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\nimport { DashboardCard } from '../dashboard/DashboardCard';\nimport { AlertCircle, TrendingUp, TrendingDown, DollarSign } from 'lucide-react';\n\nconst departments = [\n  { id: 1, name: 'Sales & Marketing', budget: 250000, spent: 180000, remaining: 70000 },\n  { id: 2, name: 'Research & Development', budget: 350000, spent: 200000, remaining: 150000 },\n  { id: 3, name: 'Operations', budget: 200000, spent: 150000, remaining: 50000 },\n  { id: 4, name: 'Human Resources', budget: 150000, spent: 100000, remaining: 50000 },\n  { id: 5, name: 'IT Infrastructure', budget: 180000, spent: 160000, remaining: 20000 },\n];\n\nconst monthlyExpenses = [\n  { month: 'Jan', planned: 80000, actual: 75000 },\n  { month: 'Feb', planned: 85000, actual: 82000 },\n  { month: 'Mar', planned: 90000, actual: 88000 },\n  { month: 'Apr', planned: 88000, actual: 85000 },\n  { month: 'May', planned: 85000, actual: 89000 },\n  { month: 'Jun', planned: 92000, actual: 95000 },\n];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nexport function Budgeting() {\n  const [selectedYear, setSelectedYear] = useState('2025');\n  const [selectedQuarter, setSelectedQuarter] = useState('Q1');\n\n  const totalBudget = departments.reduce((sum, dept) => sum + dept.budget, 0);\n  const totalSpent = departments.reduce((sum, dept) => sum + dept.spent, 0);\n  const totalRemaining = departments.reduce((sum, dept) => sum + dept.remaining, 0);\n  const spentPercentage = ((totalSpent / totalBudget) * 100).toFixed(1);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Period Selection */}\n      <div className=\"bg-white rounded-lg shadow-sm p-6\">\n        <div className=\"flex flex-wrap gap-4 items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div>\n              <label htmlFor=\"year\" className=\"block text-sm font-medium text-gray-700\">\n                Fiscal Year\n              </label>\n              <select\n                id=\"year\"\n                value={selectedYear}\n                onChange={(e) => setSelectedYear(e.target.value)}\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option>2024</option>\n                <option>2025</option>\n                <option>2026</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"quarter\" className=\"block text-sm font-medium text-gray-700\">\n                Quarter\n              </label>\n              <select\n                id=\"quarter\"\n                value={selectedQuarter}\n                onChange={(e) => setSelectedQuarter(e.target.value)}\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option>Q1</option>\n                <option>Q2</option>\n                <option>Q3</option>\n                <option>Q4</option>\n              </select>\n            </div>\n          </div>\n          <button className=\"btn btn-primary\">\n            <DollarSign className=\"h-4 w-4 mr-2\" />\n            Adjust Budget\n          </button>\n        </div>\n      </div>\n\n      {/* Budget Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-500\">Total Budget</p>\n              <p className=\"text-2xl font-semibold mt-1\">${(totalBudget / 1000).toFixed(1)}k</p>\n            </div>\n            <div className=\"h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <DollarSign className=\"h-6 w-6 text-primary-600\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-500\">Spent</p>\n              <p className=\"text-2xl font-semibold mt-1\">${(totalSpent / 1000).toFixed(1)}k</p>\n              <p className=\"text-sm text-gray-500 mt-1\">{spentPercentage}% of budget</p>\n            </div>\n            <div className=\"h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <TrendingUp className=\"h-6 w-6 text-warning-600\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-500\">Remaining</p>\n              <p className=\"text-2xl font-semibold mt-1\">${(totalRemaining / 1000).toFixed(1)}k</p>\n            </div>\n            <div className=\"h-12 w-12 bg-success-100 rounded-full flex items-center justify-center\">\n              <TrendingDown className=\"h-6 w-6 text-success-600\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Charts and Tables */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Budget vs. Actual Expenses\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={monthlyExpenses}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip formatter={(value) => `$${value.toLocaleString()}`} />\n                <Legend />\n                <Bar dataKey=\"planned\" name=\"Planned\" fill=\"#8884d8\" />\n                <Bar dataKey=\"actual\" name=\"Actual\" fill=\"#82ca9d\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Department Budget Allocation\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={departments}\n                  dataKey=\"budget\"\n                  nameKey=\"name\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={80}\n                  label={({ name, value }) => `${name}: $${(value / 1000).toFixed(0)}k`}\n                >\n                  {departments.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip formatter={(value) => `$${value.toLocaleString()}`} />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Department Budgets Table */}\n      <DashboardCard title=\"Department Budget Details\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Department\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Budget\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Spent\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Remaining\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {departments.map((dept) => {\n                const spentPercentage = (dept.spent / dept.budget) * 100;\n                let status;\n                if (spentPercentage >= 90) {\n                  status = { text: 'Critical', class: 'bg-red-100 text-red-800' };\n                } else if (spentPercentage >= 75) {\n                  status = { text: 'Warning', class: 'bg-yellow-100 text-yellow-800' };\n                } else {\n                  status = { text: 'Good', class: 'bg-green-100 text-green-800' };\n                }\n\n                return (\n                  <tr key={dept.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                      {dept.name}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                      ${dept.budget.toLocaleString()}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                      ${dept.spent.toLocaleString()}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                      ${dept.remaining.toLocaleString()}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${status.class}`}>\n                        {status.text}\n                      </span>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Budget Alerts */}\n      <DashboardCard title=\"Budget Alerts\">\n        <div className=\"space-y-4\">\n          <div className=\"flex items-start space-x-3 p-4 bg-red-50 rounded-lg\">\n            <AlertCircle className=\"h-5 w-5 text-red-500 mt-0.5\" />\n            <div>\n              <h4 className=\"text-sm font-medium text-red-800\">IT Infrastructure over budget</h4>\n              <p className=\"mt-1 text-sm text-red-700\">\n                Department has exceeded 90% of allocated budget for Q1 2025\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-start space-x-3 p-4 bg-yellow-50 rounded-lg\">\n            <AlertCircle className=\"h-5 w-5 text-yellow-500 mt-0.5\" />\n            <div>\n              <h4 className=\"text-sm font-medium text-yellow-800\">Sales & Marketing approaching limit</h4>\n              <p className=\"mt-1 text-sm text-yellow-700\">\n                Department has used 75% of quarterly budget with 2 months remaining\n              </p>\n            </div>\n          </div>\n        </div>\n      </DashboardCard>\n    </div>\n  );\n}","size_bytes":11032},"client/src/components/finance/FinanceOverview.tsx":{"content":"import { useState, useEffect } from 'react';\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  CartesianGrid,\n} from 'recharts';\nimport { ArrowUpRight, ArrowDownRight, TrendingUp } from 'lucide-react';\nimport { DashboardCard } from '../dashboard/DashboardCard';\n\ninterface FinanceData {\n  overview: {\n    totalRevenue: { current: number; previous: number; changePercent: number };\n    totalExpenses: { current: number; previous: number; changePercent: number };\n    netProfit: { current: number; previous: number; changePercent: number };\n  };\n  monthlyData: Array<{ month: string; revenue: number; expenses: number }>;\n  departmentExpenses: Array<{ department: string; amount: number }>;\n}\n\nexport function FinanceOverview() {\n  const [financeData, setFinanceData] = useState<FinanceData | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  console.log('FinanceOverview component mounted'); // Debug log\n\n  useEffect(() => {\n    const fetchFinanceData = async () => {\n      try {\n        console.log('Fetching finance data...'); // Debug log\n        const response = await fetch('/api/finance-data');\n        console.log('Response status:', response.status); // Debug log\n        const data = await response.json();\n        console.log('Finance data loaded:', data); // Debug log\n        setFinanceData(data);\n      } catch (error) {\n        console.error('Error fetching finance data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFinanceData();\n  }, []);\n\n  if (loading) {\n    console.log('FinanceOverview showing loading state'); // Debug log\n    return (\n      <div className=\"space-y-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Finance Overview - Loading...</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {[1, 2, 3].map((i) => (\n            <div key={i} className=\"bg-white rounded-lg shadow-sm p-6 animate-pulse\">\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-3\"></div>\n              <div className=\"h-8 bg-gray-200 rounded w-1/2 mb-4\"></div>\n              <div className=\"h-4 bg-gray-200 rounded w-1/3\"></div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (!financeData) {\n    console.log('FinanceOverview showing error state'); // Debug log\n    return (\n      <div className=\"text-center py-12\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Finance Overview - Error</h2>\n        <p className=\"text-gray-500\">Unable to load finance data</p>\n      </div>\n    );\n  }\n\n  const { overview, monthlyData, departmentExpenses } = financeData;\n\n  console.log('FinanceOverview rendering main content'); // Debug log\n\n  return (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Finance Overview</h2>\n      {/* Financial summary cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-500 text-sm font-medium\">Total Revenue (YTD)</p>\n              <p className=\"text-2xl font-semibold mt-1\">${overview.totalRevenue.current.toLocaleString()}</p>\n            </div>\n            <div className=\"h-12 w-12 bg-green-100 rounded-full flex items-center justify-center\">\n              <ArrowUpRight className=\"h-6 w-6 text-green-600\" />\n            </div>\n          </div>\n          <div className=\"mt-4 flex items-center\">\n            <span className=\"text-green-600 text-sm font-medium\">+{overview.totalRevenue.changePercent}%</span>\n            <span className=\"text-gray-500 text-sm ml-2\">vs last year</span>\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-500 text-sm font-medium\">Total Expenses (YTD)</p>\n              <p className=\"text-2xl font-semibold mt-1\">${overview.totalExpenses.current.toLocaleString()}</p>\n            </div>\n            <div className=\"h-12 w-12 bg-red-100 rounded-full flex items-center justify-center\">\n              <ArrowDownRight className=\"h-6 w-6 text-red-600\" />\n            </div>\n          </div>\n          <div className=\"mt-4 flex items-center\">\n            <span className=\"text-red-600 text-sm font-medium\">+{overview.totalExpenses.changePercent}%</span>\n            <span className=\"text-gray-500 text-sm ml-2\">vs last year</span>\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-500 text-sm font-medium\">Net Profit (YTD)</p>\n              <p className=\"text-2xl font-semibold mt-1\">${overview.netProfit.current.toLocaleString()}</p>\n            </div>\n            <div className=\"h-12 w-12 bg-blue-100 rounded-full flex items-center justify-center\">\n              <TrendingUp className=\"h-6 w-6 text-blue-600\" />\n            </div>\n          </div>\n          <div className=\"mt-4 flex items-center\">\n            <span className=\"text-green-600 text-sm font-medium\">+{overview.netProfit.changePercent}%</span>\n            <span className=\"text-gray-500 text-sm ml-2\">vs last year</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Financial charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Revenue vs Expenses\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart\n                data={monthlyData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip formatter={(value) => [`$${value.toLocaleString()}`, '']} />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"revenue\"\n                  name=\"Revenue\"\n                  stroke=\"#0052ff\"\n                  strokeWidth={2}\n                  activeDot={{ r: 8 }}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"expenses\"\n                  name=\"Expenses\"\n                  stroke=\"#ff4d4f\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Department Expenses\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart\n                data={departmentExpenses.map(item => ({ name: item.department, value: item.amount }))}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip formatter={(value) => [`$${value.toLocaleString()}`, 'Expenses']} />\n                <Bar dataKey=\"value\" name=\"Expenses\" fill=\"#8884d8\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Financial insights and recent transactions */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <div className=\"lg:col-span-2\">\n          <DashboardCard title=\"Recent Transactions\">\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Transaction\n                    </th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Date\n                    </th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Amount\n                    </th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Status\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {[\n                    { id: 1, name: 'Invoice #1089', date: 'Mar 14, 2025', amount: '$8,750.00', status: 'Paid' },\n                    { id: 2, name: 'Supplier Payment', date: 'Mar 13, 2025', amount: '$12,650.00', status: 'Processing' },\n                    { id: 3, name: 'Payroll', date: 'Mar 10, 2025', amount: '$45,250.00', status: 'Completed' },\n                    { id: 4, name: 'Office Supplies', date: 'Mar 8, 2025', amount: '$1,250.00', status: 'Completed' },\n                    { id: 5, name: 'Invoice #1088', date: 'Mar 5, 2025', amount: '$7,325.00', status: 'Paid' },\n                  ].map((transaction) => (\n                    <tr key={transaction.id}>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm font-medium text-gray-900\">{transaction.name}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-500\">{transaction.date}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">{transaction.amount}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                          transaction.status === 'Paid' ? 'bg-green-100 text-green-800' :\n                          transaction.status === 'Processing' ? 'bg-yellow-100 text-yellow-800' :\n                          'bg-blue-100 text-blue-800'\n                        }`}>\n                          {transaction.status}\n                        </span>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"mt-4\">\n              <a\n                href=\"#\"\n                className=\"text-sm font-medium text-primary-600 hover:text-primary-700\"\n              >\n                View all transactions\n              </a>\n            </div>\n          </DashboardCard>\n        </div>\n\n        <div>\n          <DashboardCard title=\"Financial Insights\">\n            <div className=\"space-y-4\">\n              <div className=\"border-l-4 border-green-500 pl-4 py-2\">\n                <p className=\"text-sm font-medium text-gray-900\">Cash Flow Positive</p>\n                <p className=\"mt-1 text-sm text-gray-500\">\n                  Cash flow remains positive for the 8th consecutive month.\n                </p>\n              </div>\n              <div className=\"border-l-4 border-yellow-500 pl-4 py-2\">\n                <p className=\"text-sm font-medium text-gray-900\">Budget Alert</p>\n                <p className=\"mt-1 text-sm text-gray-500\">\n                  Marketing department is at 92% of allocated quarterly budget.\n                </p>\n              </div>\n              <div className=\"border-l-4 border-blue-500 pl-4 py-2\">\n                <p className=\"text-sm font-medium text-gray-900\">Revenue Growth</p>\n                <p className=\"mt-1 text-sm text-gray-500\">\n                  Q1 revenue exceeded projections by 7.3%.\n                </p>\n              </div>\n              <div className=\"border-l-4 border-purple-500 pl-4 py-2\">\n                <p className=\"text-sm font-medium text-gray-900\">Investment Return</p>\n                <p className=\"mt-1 text-sm text-gray-500\">\n                  R&D investments showing 15% ROI, exceeding 12% target.\n                </p>\n              </div>\n            </div>\n            <div className=\"mt-6 border-t border-gray-200 pt-4\">\n              <button className=\"w-full btn btn-primary\">\n                Generate Financial Report\n              </button>\n            </div>\n          </DashboardCard>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":12582},"client/src/components/finance/FinanceReports.tsx":{"content":"import { useState } from 'react';\nimport {\n  LineChart,\n  Line,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\nimport { DashboardCard } from '../dashboard/DashboardCard';\nimport { Download, Filter, FileText, Calendar, RefreshCw, Plus, ChevronDown } from 'lucide-react';\n\nconst revenueData = [\n  { month: 'Jan', revenue: 150000, expenses: 120000, profit: 30000 },\n  { month: 'Feb', revenue: 160000, expenses: 125000, profit: 35000 },\n  { month: 'Mar', revenue: 170000, expenses: 130000, profit: 40000 },\n  { month: 'Apr', revenue: 180000, expenses: 135000, profit: 45000 },\n  { month: 'May', revenue: 190000, expenses: 140000, profit: 50000 },\n  { month: 'Jun', revenue: 200000, expenses: 145000, profit: 55000 },\n];\n\nconst departmentExpenses = [\n  { name: 'Sales', value: 45000 },\n  { name: 'Marketing', value: 32000 },\n  { name: 'Operations', value: 51000 },\n  { name: 'R&D', value: 29000 },\n  { name: 'HR', value: 19000 },\n];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nconst reportTemplates = [\n  {\n    id: 1,\n    name: 'Monthly Financial Statement',\n    description: 'Comprehensive monthly financial report including P&L, balance sheet, and cash flow',\n    type: 'Financial',\n    frequency: 'Monthly'\n  },\n  {\n    id: 2,\n    name: 'Quarterly Tax Report',\n    description: 'Detailed tax obligations and payments summary for the quarter',\n    type: 'Tax',\n    frequency: 'Quarterly'\n  },\n  {\n    id: 3,\n    name: 'Annual Budget Analysis',\n    description: 'Year-end budget analysis with variances and forecasting',\n    type: 'Budget',\n    frequency: 'Annually'\n  },\n  {\n    id: 4,\n    name: 'Department Expense Report',\n    description: 'Breakdown of expenses by department with trend analysis',\n    type: 'Expense',\n    frequency: 'Monthly'\n  }\n];\n\nconst scheduledReports = [\n  {\n    id: 1,\n    name: 'Monthly P&L Statement',\n    nextRun: '2025-04-01',\n    frequency: 'Monthly',\n    format: 'PDF',\n    recipients: ['finance@example.com', 'ceo@example.com']\n  },\n  {\n    id: 2,\n    name: 'Weekly Cash Flow Report',\n    nextRun: '2025-03-25',\n    frequency: 'Weekly',\n    format: 'Excel',\n    recipients: ['treasury@example.com']\n  },\n  {\n    id: 3,\n    name: 'Quarterly Financial Review',\n    nextRun: '2025-06-30',\n    frequency: 'Quarterly',\n    format: 'PDF',\n    recipients: ['board@example.com', 'investors@example.com']\n  }\n];\n\nexport function FinanceReports() {\n  const [dateRange, setDateRange] = useState('monthly');\n  const [reportType, setReportType] = useState('all');\n  const [showNewReportModal, setShowNewReportModal] = useState(false);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Report Controls */}\n      <div className=\"bg-white rounded-lg shadow-sm p-6\">\n        <div className=\"flex flex-wrap gap-4 items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div>\n              <label htmlFor=\"dateRange\" className=\"block text-sm font-medium text-gray-700\">\n                Date Range\n              </label>\n              <select\n                id=\"dateRange\"\n                value={dateRange}\n                onChange={(e) => setDateRange(e.target.value)}\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option value=\"weekly\">Weekly</option>\n                <option value=\"monthly\">Monthly</option>\n                <option value=\"quarterly\">Quarterly</option>\n                <option value=\"yearly\">Yearly</option>\n                <option value=\"custom\">Custom Range</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"reportType\" className=\"block text-sm font-medium text-gray-700\">\n                Report Type\n              </label>\n              <select\n                id=\"reportType\"\n                value={reportType}\n                onChange={(e) => setReportType(e.target.value)}\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option value=\"all\">All Reports</option>\n                <option value=\"financial\">Financial Statements</option>\n                <option value=\"tax\">Tax Reports</option>\n                <option value=\"budget\">Budget Reports</option>\n                <option value=\"audit\">Audit Reports</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"flex space-x-4\">\n            <button className=\"btn btn-outline\">\n              <Filter className=\"h-4 w-4 mr-2\" />\n              Advanced Filters\n            </button>\n            <button className=\"btn btn-primary\" onClick={() => setShowNewReportModal(true)}>\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Generate Report\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Report Templates */}\n      <DashboardCard title=\"Report Templates\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {reportTemplates.map((template) => (\n            <div key={template.id} className=\"bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow duration-200\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <FileText className=\"h-6 w-6 text-primary-500\" />\n                <span className=\"text-xs font-medium text-gray-500\">{template.frequency}</span>\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">{template.name}</h3>\n              <p className=\"text-sm text-gray-500 mb-4\">{template.description}</p>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-xs font-medium text-gray-500\">{template.type}</span>\n                <button className=\"text-primary-600 hover:text-primary-700 text-sm font-medium\">\n                  Use Template\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </DashboardCard>\n\n      {/* Financial Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Revenue vs Expenses\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={revenueData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip formatter={(value) => `$${value.toLocaleString()}`} />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"revenue\"\n                  name=\"Revenue\"\n                  stroke=\"#0088FE\"\n                  strokeWidth={2}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"expenses\"\n                  name=\"Expenses\"\n                  stroke=\"#FF8042\"\n                  strokeWidth={2}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"profit\"\n                  name=\"Profit\"\n                  stroke=\"#00C49F\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Department Expenses\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={departmentExpenses}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                  label={({ name, value }) => `${name}: $${value.toLocaleString()}`}\n                >\n                  {departmentExpenses.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip formatter={(value) => `$${value.toLocaleString()}`} />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Scheduled Reports */}\n      <DashboardCard \n        title={\n          <div className=\"flex items-center justify-between\">\n            <span>Scheduled Reports</span>\n            <button className=\"btn btn-outline btn-sm\">\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Schedule New Report\n            </button>\n          </div>\n        }\n      >\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Report Name\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Next Run\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Frequency\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Format\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Recipients\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {scheduledReports.map((report) => (\n                <tr key={report.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {report.name}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {report.nextRun}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {report.frequency}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {report.format}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {report.recipients.join(', ')}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    <button className=\"text-primary-600 hover:text-primary-900 mr-4\">\n                      <RefreshCw className=\"h-4 w-4\" />\n                    </button>\n                    <button className=\"text-primary-600 hover:text-primary-900\">\n                      <ChevronDown className=\"h-4 w-4\" />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Quick Actions */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <DashboardCard title=\"Export Options\">\n          <div className=\"space-y-4\">\n            <button className=\"w-full text-left px-4 py-3 rounded-lg border border-gray-200 hover:bg-gray-50 flex items-center\">\n              <Download className=\"h-5 w-5 text-gray-400 mr-3\" />\n              <div>\n                <span className=\"block font-medium\">Export as PDF</span>\n                <span className=\"text-sm text-gray-500\">High-quality print format</span>\n              </div>\n            </button>\n            <button className=\"w-full text-left px-4 py-3 rounded-lg border border-gray-200 hover:bg-gray-50 flex items-center\">\n              <Download className=\"h-5 w-5 text-gray-400 mr-3\" />\n              <div>\n                <span className=\"block font-medium\">Export as Excel</span>\n                <span className=\"text-sm text-gray-500\">Editable spreadsheet format</span>\n              </div>\n            </button>\n            <button className=\"w-full text-left px-4 py-3 rounded-lg border border-gray-200 hover:bg-gray-50 flex items-center\">\n              <Download className=\"h-5 w-5 text-gray-400 mr-3\" />\n              <div>\n                <span className=\"block font-medium\">Export as CSV</span>\n                <span className=\"text-sm text-gray-500\">Raw data format</span>\n              </div>\n            </button>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Report Settings\">\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Default Format</label>\n              <select className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\">\n                <option>PDF</option>\n                <option>Excel</option>\n                <option>CSV</option>\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Auto-Schedule</label>\n              <select className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\">\n                <option>Weekly</option>\n                <option>Monthly</option>\n                <option>Quarterly</option>\n              </select>\n            </div>\n            <div>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                />\n                <span className=\"ml-2 text-sm text-gray-600\">\n                  Email reports automatically\n                </span>\n              </label>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Recent Activity\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-start\">\n              <div className=\"h-8 w-8 rounded-full bg-blue-100 flex items-center justify-center\">\n                <FileText className=\"h-4 w-4 text-blue-600\" />\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-900\">Monthly Report Generated</p>\n                <p className=\"text-xs text-gray-500\">March 15, 2025</p>\n              </div>\n            </div>\n            <div className=\"flex items-start\">\n              <div className=\"h-8 w-8 rounded-full bg-green-100 flex items-center justify-center\">\n                <Calendar className=\"h-4 w-4 text-green-600\" />\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-900\">Schedule Updated</p>\n                <p className=\"text-xs text-gray-500\">March 14, 2025</p>\n              </div>\n            </div>\n            <div className=\"flex items-start\">\n              <div className=\"h-8 w-8 rounded-full bg-purple-100 flex items-center justify-center\">\n                <Download className=\"h-4 w-4 text-purple-600\" />\n              </div>\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-900\">Report Downloaded</p>\n                <p className=\"text-xs text-gray-500\">March 13, 2025</p>\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n    </div>\n  );\n}","size_bytes":16066},"client/src/components/finance/Payroll.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { DollarSign, Users, Clock, Calendar, Download, Filter, Plus, X, UserPlus, Mail, Briefcase } from 'lucide-react';\nimport { DashboardCard } from '../dashboard/DashboardCard';\n\ninterface Employee {\n  id: number;\n  name: string;\n  email?: string;\n  position: string;\n  department: string;\n  salary: number;\n  status: 'Full-time' | 'Part-time' | 'Contract';\n  lastPayment: string;\n}\n\nconst initialEmployees: Employee[] = [\n  { \n    id: 1, \n    name: 'John Doe',\n    email: 'john.doe@example.com',\n    position: 'Senior Developer',\n    department: 'Engineering',\n    salary: 95000,\n    status: 'Full-time',\n    lastPayment: '2025-03-01'\n  },\n  { \n    id: 2, \n    name: 'Jane Smith',\n    email: 'jane.smith@example.com',\n    position: 'Marketing Manager',\n    department: 'Marketing',\n    salary: 85000,\n    status: 'Full-time',\n    lastPayment: '2025-03-01'\n  },\n  { \n    id: 3, \n    name: 'Mike Johnson',\n    email: 'mike.johnson@example.com',\n    position: 'Sales Representative',\n    department: 'Sales',\n    salary: 65000,\n    status: 'Full-time',\n    lastPayment: '2025-03-01'\n  },\n  { \n    id: 4, \n    name: 'Sarah Williams',\n    email: 'sarah.williams@example.com',\n    position: 'HR Specialist',\n    department: 'Human Resources',\n    salary: 70000,\n    status: 'Part-time',\n    lastPayment: '2025-03-01'\n  },\n  { \n    id: 5, \n    name: 'David Brown',\n    email: 'david.brown@example.com',\n    position: 'Financial Analyst',\n    department: 'Finance',\n    salary: 80000,\n    status: 'Full-time',\n    lastPayment: '2025-03-01'\n  }\n];\n\nconst payrollHistory = [\n  {\n    id: 1,\n    period: 'March 2025',\n    totalAmount: 395000,\n    employeeCount: 5,\n    status: 'Completed',\n    date: '2025-03-01'\n  },\n  {\n    id: 2,\n    period: 'February 2025',\n    totalAmount: 392000,\n    employeeCount: 5,\n    status: 'Completed',\n    date: '2025-02-01'\n  },\n  {\n    id: 3,\n    period: 'January 2025',\n    totalAmount: 390000,\n    employeeCount: 5,\n    status: 'Completed',\n    date: '2025-01-01'\n  }\n];\n\nexport function Payroll() {\n  const [employees, setEmployees] = useState<Employee[]>([]);\n  const [selectedDepartment, setSelectedDepartment] = useState('All');\n  const [selectedStatus, setSelectedStatus] = useState('All');\n  const [showAddEmployeeModal, setShowAddEmployeeModal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  // Form state\n  const [employeeForm, setEmployeeForm] = useState({\n    name: '',\n    email: '',\n    position: '',\n    department: '',\n    salary: '',\n    status: 'Full-time' as const,\n    lastPayment: new Date().toISOString().split('T')[0]\n  });\n\n  // Load employees from localStorage on component mount\n  useEffect(() => {\n    const savedEmployees = localStorage.getItem('payroll_employees');\n    if (savedEmployees) {\n      try {\n        setEmployees(JSON.parse(savedEmployees));\n      } catch (error) {\n        console.error('Error loading employees:', error);\n        setEmployees(initialEmployees);\n      }\n    } else {\n      setEmployees(initialEmployees);\n      localStorage.setItem('payroll_employees', JSON.stringify(initialEmployees));\n    }\n  }, []);\n\n  // Predefined options\n  const departments = [\n    'Engineering',\n    'Marketing', \n    'Sales',\n    'Human Resources',\n    'Finance',\n    'Operations',\n    'Customer Support',\n    'Legal'\n  ];\n\n  const positions = [\n    'Senior Developer',\n    'Junior Developer',\n    'Marketing Manager',\n    'Sales Representative',\n    'HR Specialist',\n    'Financial Analyst',\n    'Operations Manager',\n    'Customer Support Specialist',\n    'Legal Counsel',\n    'Project Manager',\n    'Designer',\n    'QA Engineer'\n  ];\n\n  const filteredEmployees = employees.filter(employee => {\n    if (selectedDepartment !== 'All' && employee.department !== selectedDepartment) return false;\n    if (selectedStatus !== 'All' && employee.status !== selectedStatus) return false;\n    return true;\n  });\n\n  const totalPayroll = filteredEmployees.reduce((sum, emp) => sum + emp.salary, 0);\n  const averageSalary = totalPayroll / filteredEmployees.length;\n\n  // Form validation\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!employeeForm.name.trim()) newErrors.name = 'Full name is required';\n    if (!employeeForm.email.trim()) newErrors.email = 'Email is required';\n    if (!employeeForm.position.trim()) newErrors.position = 'Position is required';\n    if (!employeeForm.department.trim()) newErrors.department = 'Department is required';\n    if (!employeeForm.salary) newErrors.salary = 'Salary is required';\n    if (!employeeForm.lastPayment) newErrors.lastPayment = 'Last payment date is required';\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (employeeForm.email && !emailRegex.test(employeeForm.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // Salary validation\n    const salary = parseFloat(employeeForm.salary);\n    if (employeeForm.salary && (isNaN(salary) || salary <= 0)) {\n      newErrors.salary = 'Salary must be a positive number';\n    }\n\n    // Check for duplicate email\n    if (employeeForm.email && employees.some(emp => emp.email?.toLowerCase() === employeeForm.email.toLowerCase())) {\n      newErrors.email = 'An employee with this email already exists';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Form submission handler\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setIsLoading(true);\n\n    try {\n      const newEmployee: Employee = {\n        id: Math.max(...employees.map(emp => emp.id), 0) + 1,\n        name: employeeForm.name.trim(),\n        email: employeeForm.email.trim(),\n        position: employeeForm.position.trim(),\n        department: employeeForm.department.trim(),\n        salary: parseFloat(employeeForm.salary),\n        status: employeeForm.status,\n        lastPayment: employeeForm.lastPayment\n      };\n\n      const updatedEmployees = [...employees, newEmployee];\n      setEmployees(updatedEmployees);\n      localStorage.setItem('payroll_employees', JSON.stringify(updatedEmployees));\n\n      setSuccessMessage('Employee added successfully!');\n      setEmployeeForm({\n        name: '',\n        email: '',\n        position: '',\n        department: '',\n        salary: '',\n        status: 'Full-time',\n        lastPayment: new Date().toISOString().split('T')[0]\n      });\n      setShowAddEmployeeModal(false);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (error) {\n      console.error('Error saving employee:', error);\n      setErrors({ submit: 'Failed to save employee. Please try again.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Clear field error when user starts typing\n  const clearFieldError = (field: string) => {\n    if (errors[field]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  // Handle form input changes\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setEmployeeForm(prev => ({ ...prev, [name]: value }));\n    clearFieldError(name);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Success Message */}\n      {successMessage && (\n        <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded relative\">\n          <span className=\"block sm:inline\">{successMessage}</span>\n        </div>\n      )}\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <DollarSign className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Total Payroll</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">${totalPayroll.toLocaleString()}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <Users className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Employees</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">{filteredEmployees.length}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <Clock className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Avg. Salary</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">${Math.round(averageSalary).toLocaleString()}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Calendar className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Next Payroll</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">Mar 31</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters and Actions */}\n      <div className=\"bg-white rounded-lg shadow-sm p-6\">\n        <div className=\"flex flex-wrap gap-4 items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div>\n              <label htmlFor=\"department\" className=\"block text-sm font-medium text-gray-700\">\n                Department\n              </label>\n              <select\n                id=\"department\"\n                value={selectedDepartment}\n                onChange={(e) => setSelectedDepartment(e.target.value)}\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option>All</option>\n                <option>Engineering</option>\n                <option>Marketing</option>\n                <option>Sales</option>\n                <option>Human Resources</option>\n                <option>Finance</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"status\" className=\"block text-sm font-medium text-gray-700\">\n                Status\n              </label>\n              <select\n                id=\"status\"\n                value={selectedStatus}\n                onChange={(e) => setSelectedStatus(e.target.value)}\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option>All</option>\n                <option>Full-time</option>\n                <option>Part-time</option>\n                <option>Contract</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"flex space-x-4\">\n            <button className=\"btn btn-outline\">\n              <Filter className=\"h-4 w-4 mr-2\" />\n              More Filters\n            </button>\n            \n            <button \n              className=\"inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-indigo-700 text-white font-semibold rounded-lg hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 shadow-lg hover:shadow-xl\"\n              onClick={() => setShowAddEmployeeModal(true)}\n            >\n              <Plus className=\"h-5 w-5 mr-2\" />\n              Add Employee\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Employee List */}\n      <DashboardCard title=\"Employee Payroll\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Employee\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Position\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Department\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Salary\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Last Payment\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {filteredEmployees.map((employee) => (\n                <tr key={employee.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {employee.name}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {employee.position}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {employee.department}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    ${employee.salary.toLocaleString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\n                      ${employee.status === 'Full-time' ? 'bg-green-100 text-green-800' :\n                        employee.status === 'Part-time' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-gray-100 text-gray-800'}`}>\n                      {employee.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {employee.lastPayment}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Payroll History */}\n      <DashboardCard title=\"Payroll History\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Period\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Total Amount\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Employees\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {payrollHistory.map((record) => (\n                <tr key={record.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {record.period}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    ${record.totalAmount.toLocaleString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center\">\n                    {record.employeeCount}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                      {record.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {record.date}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    <button className=\"text-primary-600 hover:text-primary-900\">\n                      <Download className=\"h-4 w-4\" />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Add Employee Modal */}\n      {showAddEmployeeModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm overflow-y-auto h-full w-full z-50 flex items-start justify-center p-2 sm:p-4\">\n          <div className=\"relative mx-auto w-full max-w-3xl my-4 sm:my-8 bg-white rounded-xl shadow-2xl border border-gray-100 overflow-hidden\">\n            {/* Header with gradient background */}\n            <div className=\"bg-gradient-to-r from-blue-600 to-indigo-700 px-4 sm:px-6 py-3 sm:py-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2 sm:space-x-3\">\n                  <div className=\"bg-white bg-opacity-20 rounded-lg p-1.5 sm:p-2\">\n                    <UserPlus className=\"h-4 w-4 sm:h-5 sm:w-5 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg sm:text-xl font-bold text-white\">Add New Employee</h3>\n                    <p className=\"text-blue-100 text-xs sm:text-sm hidden sm:block\">Add a new employee to the payroll system</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setShowAddEmployeeModal(false)}\n                  className=\"text-white hover:text-gray-200 bg-white bg-opacity-20 hover:bg-opacity-30 rounded-lg p-1.5 transition-all duration-200\"\n                >\n                  <X className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                </button>\n              </div>\n            </div>\n\n            {/* Form content */}\n            <div className=\"px-4 sm:px-6 py-4 max-h-[calc(100vh-8rem)] overflow-y-auto\">\n              <form onSubmit={handleSubmit} className=\"space-y-4 sm:space-y-5\">\n                {/* Personal Information Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Users className=\"h-4 w-4 mr-2 text-blue-600\" />\n                    Personal Information\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div>\n                      <label htmlFor=\"name\" className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Full Name <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        id=\"name\"\n                        name=\"name\"\n                        value={employeeForm.name}\n                        onChange={handleInputChange}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.name ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter full name\"\n                      />\n                      {errors.name && <p className=\"mt-1 text-xs text-red-600\">{errors.name}</p>}\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"email\" className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        <Mail className=\"h-3 w-3 inline mr-1\" />\n                        Email Address <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        value={employeeForm.email}\n                        onChange={handleInputChange}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.email ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter email address\"\n                      />\n                      {errors.email && <p className=\"mt-1 text-xs text-red-600\">{errors.email}</p>}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Job Information Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Briefcase className=\"h-4 w-4 mr-2 text-blue-600\" />\n                    Job Information\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div>\n                      <label htmlFor=\"position\" className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Position <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        id=\"position\"\n                        name=\"position\"\n                        value={employeeForm.position}\n                        onChange={handleInputChange}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.position ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      >\n                        <option value=\"\">Select a position</option>\n                        {positions.map(position => (\n                          <option key={position} value={position}>{position}</option>\n                        ))}\n                      </select>\n                      {errors.position && <p className=\"mt-1 text-xs text-red-600\">{errors.position}</p>}\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"department\" className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Department <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        id=\"department\"\n                        name=\"department\"\n                        value={employeeForm.department}\n                        onChange={handleInputChange}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.department ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      >\n                        <option value=\"\">Select a department</option>\n                        {departments.map(department => (\n                          <option key={department} value={department}>{department}</option>\n                        ))}\n                      </select>\n                      {errors.department && <p className=\"mt-1 text-xs text-red-600\">{errors.department}</p>}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Compensation Details Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <DollarSign className=\"h-4 w-4 mr-2 text-green-600\" />\n                    Compensation Details\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label htmlFor=\"salary\" className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Annual Salary <span className=\"text-red-500\">*</span>\n                      </label>\n                      <div className=\"relative\">\n                        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                          <span className=\"text-gray-500 text-sm\">$</span>\n                        </div>\n                        <input\n                          type=\"number\"\n                          id=\"salary\"\n                          name=\"salary\"\n                          value={employeeForm.salary}\n                          onChange={handleInputChange}\n                          className={`block w-full pl-8 pr-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm font-medium ${\n                            errors.salary ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                          }`}\n                          placeholder=\"0\"\n                          min=\"0\"\n                          step=\"1000\"\n                        />\n                      </div>\n                      {errors.salary && <p className=\"mt-1 text-xs text-red-600\">{errors.salary}</p>}\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"status\" className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Employment Status <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        id=\"status\"\n                        name=\"status\"\n                        value={employeeForm.status}\n                        onChange={handleInputChange}\n                        className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm\"\n                      >\n                        <option value=\"Full-time\">Full-time</option>\n                        <option value=\"Part-time\">Part-time</option>\n                        <option value=\"Contract\">Contract</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-3 sm:mt-4\">\n                    <label htmlFor=\"lastPayment\" className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                      <Calendar className=\"h-3 w-3 inline mr-1\" />\n                      Last Payment Date <span className=\"text-red-500\">*</span>\n                    </label>\n                    <input\n                      type=\"date\"\n                      id=\"lastPayment\"\n                      name=\"lastPayment\"\n                      value={employeeForm.lastPayment}\n                      onChange={handleInputChange}\n                      className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                        errors.lastPayment ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                      }`}\n                    />\n                    {errors.lastPayment && <p className=\"mt-1 text-xs text-red-600\">{errors.lastPayment}</p>}\n                  </div>\n                </div>\n\n                {errors.submit && (\n                  <div className=\"bg-red-50 border border-red-200 text-red-700 px-3 py-2 rounded-md\">\n                    <span className=\"text-sm font-medium\">{errors.submit}</span>\n                  </div>\n                )}\n\n                {/* Action buttons */}\n                <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowAddEmployeeModal(false);\n                      setEmployeeForm({\n                        name: '',\n                        email: '',\n                        position: '',\n                        department: '',\n                        salary: '',\n                        status: 'Full-time',\n                        lastPayment: new Date().toISOString().split('T')[0]\n                      });\n                      setErrors({});\n                    }}\n                    className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-all duration-200 font-medium text-sm\"\n                    disabled={isLoading}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-6 py-2 bg-gradient-to-r from-blue-600 to-indigo-700 text-white rounded-md hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 font-semibold shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n                    disabled={isLoading}\n                  >\n                    {isLoading ? (\n                      <>\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2 inline-block\"></div>\n                        Processing...\n                      </>\n                    ) : (\n                      <>\n                        <UserPlus className=\"h-4 w-4 mr-2 inline-block\" />\n                        Save Employee\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":32130},"client/src/components/hr/Employees.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Users, Search, Filter, Plus, Download, Edit, Trash2, X, AlertTriangle, UserPlus, Briefcase, Calendar, Building } from 'lucide-react';\nimport { DashboardCard } from '../dashboard/DashboardCard';\n\ninterface Employee {\n  id: number;\n  name: string;\n  email: string;\n  department: string;\n  position: string;\n  status: 'Active' | 'Inactive' | 'On Leave' | 'Terminated';\n  startDate: string;\n  manager: string;\n}\n\nconst initialEmployees: Employee[] = [\n  {\n    id: 1,\n    name: 'John Doe',\n    email: 'john.doe@example.com',\n    department: 'Engineering',\n    position: 'Senior Developer',\n    status: 'Active',\n    startDate: '2024-01-15',\n    manager: 'Sarah Wilson'\n  },\n  {\n    id: 2,\n    name: 'Jane Smith',\n    email: 'jane.smith@example.com',\n    department: 'Marketing',\n    position: 'Marketing Manager',\n    status: 'Active',\n    startDate: '2023-08-01',\n    manager: 'Michael Brown'\n  },\n  {\n    id: 3,\n    name: 'Mike Johnson',\n    email: 'mike.johnson@example.com',\n    department: 'Sales',\n    position: 'Sales Representative',\n    status: 'Active',\n    startDate: '2024-03-10',\n    manager: 'Jennifer Davis'\n  },\n  {\n    id: 4,\n    name: 'Sarah Williams',\n    email: 'sarah.williams@example.com',\n    department: 'Human Resources',\n    position: 'HR Specialist',\n    status: 'On Leave',\n    startDate: '2023-11-20',\n    manager: 'Robert Taylor'\n  }\n];\n\nexport function Employees() {\n  const [employees, setEmployees] = useState<Employee[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('All');\n  const [selectedStatus, setSelectedStatus] = useState('All');\n  const [showAddEmployeeModal, setShowAddEmployeeModal] = useState(false);\n  const [showEditEmployeeModal, setShowEditEmployeeModal] = useState(false);\n  const [showDeleteConfirmModal, setShowDeleteConfirmModal] = useState(false);\n  const [editingEmployee, setEditingEmployee] = useState<Employee | null>(null);\n  const [deletingEmployee, setDeletingEmployee] = useState<Employee | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  // Form state\n  const [employeeForm, setEmployeeForm] = useState({\n    name: '',\n    email: '',\n    department: '',\n    position: '',\n    status: 'Active' as const,\n    startDate: '',\n    manager: ''\n  });\n\n  // Edit form state\n  const [editForm, setEditForm] = useState({\n    name: '',\n    email: '',\n    department: '',\n    position: '',\n    status: 'Active' as 'Active' | 'Inactive' | 'On Leave' | 'Terminated',\n    startDate: '',\n    manager: ''\n  });\n\n  // Load employees from localStorage on component mount\n  useEffect(() => {\n    const savedEmployees = localStorage.getItem('hr_employees');\n    if (savedEmployees) {\n      try {\n        setEmployees(JSON.parse(savedEmployees));\n      } catch (error) {\n        console.error('Error loading employees:', error);\n        setEmployees(initialEmployees);\n      }\n    } else {\n      setEmployees(initialEmployees);\n      localStorage.setItem('hr_employees', JSON.stringify(initialEmployees));\n    }\n  }, []);\n\n  // Predefined options\n  const departments = [\n    'Engineering',\n    'Marketing',\n    'Sales',\n    'Human Resources',\n    'Finance',\n    'Operations',\n    'Customer Support',\n    'Legal',\n    'Design',\n    'Product Management'\n  ];\n\n  const managers = [\n    'Sarah Wilson',\n    'Michael Brown',\n    'Jennifer Davis',\n    'Robert Taylor',\n    'Lisa Anderson',\n    'David Miller',\n    'Emily Johnson',\n    'James Wilson'\n  ];\n\n  // Initialize edit form when editing employee changes\n  useEffect(() => {\n    if (editingEmployee) {\n      setEditForm({\n        name: editingEmployee.name,\n        email: editingEmployee.email,\n        department: editingEmployee.department,\n        position: editingEmployee.position,\n        status: editingEmployee.status,\n        startDate: editingEmployee.startDate,\n        manager: editingEmployee.manager\n      });\n    }\n  }, [editingEmployee]);\n\n  const filteredEmployees = employees.filter(employee => {\n    const matchesSearch = employee.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         employee.email.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesDepartment = selectedDepartment === 'All' || employee.department === selectedDepartment;\n    const matchesStatus = selectedStatus === 'All' || employee.status === selectedStatus;\n    \n    return matchesSearch && matchesDepartment && matchesStatus;\n  });\n\n  // Form validation\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!employeeForm.name.trim()) newErrors.name = 'Employee name is required';\n    if (!employeeForm.email.trim()) newErrors.email = 'Email is required';\n    if (!employeeForm.department) newErrors.department = 'Department is required';\n    if (!employeeForm.position.trim()) newErrors.position = 'Position is required';\n    if (!employeeForm.startDate) newErrors.startDate = 'Start date is required';\n    if (!employeeForm.manager) newErrors.manager = 'Manager is required';\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (employeeForm.email && !emailRegex.test(employeeForm.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // Check for duplicate email\n    if (employeeForm.email && employees.some(emp => emp.email.toLowerCase() === employeeForm.email.toLowerCase())) {\n      newErrors.email = 'An employee with this email already exists';\n    }\n\n    // Start date validation (cannot be in the future)\n    if (employeeForm.startDate) {\n      const startDate = new Date(employeeForm.startDate);\n      const today = new Date();\n      today.setHours(23, 59, 59, 999); // End of today\n      \n      if (startDate > today) {\n        newErrors.startDate = 'Start date cannot be in the future';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Edit form validation\n  const validateEditForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!editForm.name.trim()) newErrors.name = 'Employee name is required';\n    if (!editForm.email.trim()) newErrors.email = 'Email is required';\n    if (!editForm.department) newErrors.department = 'Department is required';\n    if (!editForm.position.trim()) newErrors.position = 'Position is required';\n    if (!editForm.startDate) newErrors.startDate = 'Start date is required';\n    if (!editForm.manager) newErrors.manager = 'Manager is required';\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (editForm.email && !emailRegex.test(editForm.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // Check for duplicate email (excluding current employee)\n    if (editForm.email && employees.some(emp => \n      emp.email.toLowerCase() === editForm.email.toLowerCase() && \n      emp.id !== editingEmployee?.id\n    )) {\n      newErrors.email = 'An employee with this email already exists';\n    }\n\n    // Start date validation (cannot be in the future)\n    if (editForm.startDate) {\n      const startDate = new Date(editForm.startDate);\n      const today = new Date();\n      today.setHours(23, 59, 59, 999); // End of today\n      \n      if (startDate > today) {\n        newErrors.startDate = 'Start date cannot be in the future';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Form submission handler\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setIsLoading(true);\n\n    try {\n      const newEmployee: Employee = {\n        id: Math.max(...employees.map(emp => emp.id), 0) + 1,\n        name: employeeForm.name.trim(),\n        email: employeeForm.email.trim().toLowerCase(),\n        department: employeeForm.department,\n        position: employeeForm.position.trim(),\n        status: employeeForm.status,\n        startDate: employeeForm.startDate,\n        manager: employeeForm.manager\n      };\n\n      const updatedEmployees = [...employees, newEmployee];\n      setEmployees(updatedEmployees);\n      localStorage.setItem('hr_employees', JSON.stringify(updatedEmployees));\n\n      setSuccessMessage('Employee added successfully!');\n      setEmployeeForm({\n        name: '',\n        email: '',\n        department: '',\n        position: '',\n        status: 'Active',\n        startDate: '',\n        manager: ''\n      });\n      setShowAddEmployeeModal(false);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (error) {\n      console.error('Error saving employee:', error);\n      setErrors({ submit: 'Failed to save employee. Please try again.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Edit form submission handler\n  const handleEditSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateEditForm() || !editingEmployee) return;\n\n    setIsLoading(true);\n\n    try {\n      const updatedEmployee: Employee = {\n        ...editingEmployee,\n        name: editForm.name.trim(),\n        email: editForm.email.trim().toLowerCase(),\n        department: editForm.department,\n        position: editForm.position.trim(),\n        status: editForm.status,\n        startDate: editForm.startDate,\n        manager: editForm.manager\n      };\n\n      const updatedEmployees = employees.map(emp => \n        emp.id === editingEmployee.id ? updatedEmployee : emp\n      );\n      \n      setEmployees(updatedEmployees);\n      localStorage.setItem('hr_employees', JSON.stringify(updatedEmployees));\n\n      setSuccessMessage('Employee updated successfully!');\n      setShowEditEmployeeModal(false);\n      setEditingEmployee(null);\n      setErrors({});\n\n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (error) {\n      console.error('Error updating employee:', error);\n      setErrors({ submit: 'Failed to update employee. Please try again.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Delete employee handler\n  const handleDeleteEmployee = async () => {\n    if (!deletingEmployee) return;\n\n    setIsLoading(true);\n\n    try {\n      const updatedEmployees = employees.filter(emp => emp.id !== deletingEmployee.id);\n      setEmployees(updatedEmployees);\n      localStorage.setItem('hr_employees', JSON.stringify(updatedEmployees));\n\n      setSuccessMessage(`Employee ${deletingEmployee.name} deleted successfully!`);\n      setShowDeleteConfirmModal(false);\n      setDeletingEmployee(null);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n      setErrors({ submit: 'Failed to delete employee. Please try again.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle edit button click\n  const handleEditClick = (employee: Employee) => {\n    setEditingEmployee(employee);\n    setShowEditEmployeeModal(true);\n    setErrors({});\n  };\n\n  // Handle delete button click\n  const handleDeleteClick = (employee: Employee) => {\n    setDeletingEmployee(employee);\n    setShowDeleteConfirmModal(true);\n  };\n\n  // Clear field error when user starts typing\n  const clearFieldError = (field: string) => {\n    if (errors[field]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  // Handle form input changes\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setEmployeeForm(prev => ({ ...prev, [name]: value }));\n    clearFieldError(name);\n  };\n\n  // Handle edit form input changes\n  const handleEditInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setEditForm(prev => ({ ...prev, [name]: value }));\n    clearFieldError(name);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Success Message */}\n      {successMessage && (\n        <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded relative\">\n          <span className=\"block sm:inline\">{successMessage}</span>\n        </div>\n      )}\n\n      {/* Header with actions */}\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <Search className=\"h-5 w-5 text-gray-400\" />\n              </div>\n              <input\n                type=\"text\"\n                className=\"focus:ring-primary-500 focus:border-primary-500 block w-full pl-10 sm:text-sm border-gray-300 rounded-md\"\n                placeholder=\"Search employees...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n          </div>\n          \n          <div className=\"flex flex-wrap items-center gap-4\">\n            <select\n              value={selectedDepartment}\n              onChange={(e) => setSelectedDepartment(e.target.value)}\n              className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n            >\n              <option>All Departments</option>\n              <option>Engineering</option>\n              <option>Marketing</option>\n              <option>Sales</option>\n              <option>HR</option>\n              <option>Finance</option>\n            </select>\n            \n            <select\n              value={selectedStatus}\n              onChange={(e) => setSelectedStatus(e.target.value)}\n              className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n            >\n              <option>All Status</option>\n              <option>Active</option>\n              <option>On Leave</option>\n              <option>Terminated</option>\n            </select>\n            \n            <button className=\"btn btn-outline\">\n              <Filter className=\"h-4 w-4 mr-2\" />\n              More Filters\n            </button>\n            \n            <button \n              className=\"px-4 py-2 bg-gradient-to-r from-blue-600 to-indigo-700 text-white rounded-md hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 font-semibold shadow-lg hover:shadow-xl text-sm flex items-center\"\n              onClick={() => setShowAddEmployeeModal(true)}\n              data-testid=\"button-add-employee\"\n            >\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Add Employee\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Employee List */}\n      <DashboardCard title=\"Employee Directory\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Employee\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Department\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Position\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Start Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Manager\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {filteredEmployees.map((employee) => (\n                <tr key={employee.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                      <div className=\"h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center\">\n                        <span className=\"text-sm font-medium text-gray-600\">\n                          {employee.name.split(' ').map(n => n[0]).join('')}\n                        </span>\n                      </div>\n                      <div className=\"ml-4\">\n                        <div className=\"text-sm font-medium text-gray-900\">{employee.name}</div>\n                        <div className=\"text-sm text-gray-500\">{employee.email}</div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {employee.department}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {employee.position}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\n                      ${employee.status === 'Active' ? 'bg-green-100 text-green-800' :\n                        employee.status === 'On Leave' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-red-100 text-red-800'}`}>\n                      {employee.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {employee.startDate}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {employee.manager}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    <button \n                      className=\"text-primary-600 hover:text-primary-900 mr-3\"\n                      onClick={() => handleEditClick(employee)}\n                      title=\"Edit employee\"\n                    >\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button \n                      className=\"text-red-600 hover:text-red-900\"\n                      onClick={() => handleDeleteClick(employee)}\n                      title=\"Delete employee\"\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Add Employee Modal */}\n      {showAddEmployeeModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm overflow-y-auto h-full w-full z-50 flex items-start justify-center p-2 sm:p-4\">\n          <div className=\"relative mx-auto w-full max-w-2xl my-4 sm:my-8 bg-white rounded-xl shadow-2xl border border-gray-100 overflow-hidden\">\n            {/* Header with gradient background */}\n            <div className=\"bg-gradient-to-r from-blue-600 to-indigo-700 px-4 sm:px-6 py-3 sm:py-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2 sm:space-x-3\">\n                  <div className=\"bg-white bg-opacity-20 rounded-lg p-1.5 sm:p-2\">\n                    <UserPlus className=\"h-4 w-4 sm:h-5 sm:w-5 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg sm:text-xl font-bold text-white\">Add New Employee</h3>\n                    <p className=\"text-blue-100 text-xs sm:text-sm hidden sm:block\">Create a new employee record in the system</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => {\n                    setShowAddEmployeeModal(false);\n                    setEmployeeForm({\n                      name: '',\n                      email: '',\n                      department: '',\n                      position: '',\n                      status: 'Active',\n                      startDate: '',\n                      manager: ''\n                    });\n                    setErrors({});\n                  }}\n                  className=\"text-white hover:text-gray-200 bg-white bg-opacity-20 hover:bg-opacity-30 rounded-lg p-1.5 transition-all duration-200\"\n                >\n                  <X className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                </button>\n              </div>\n            </div>\n\n            {/* Form content */}\n            <div className=\"px-4 sm:px-6 py-4 max-h-[calc(100vh-8rem)] overflow-y-auto\">\n              <form onSubmit={handleSubmit} className=\"space-y-4 sm:space-y-5\">\n                {/* Personal Information Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Users className=\"h-4 w-4 mr-2 text-blue-600\" />\n                    Personal Information\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Full Name <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={employeeForm.name}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('name');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm font-medium ${\n                          errors.name ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter employee's full name\"\n                      />\n                      {errors.name && <p className=\"mt-1 text-xs text-red-600\">{errors.name}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Email Address <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={employeeForm.email}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('email');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.email ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter email address\"\n                      />\n                      {errors.email && <p className=\"mt-1 text-xs text-red-600\">{errors.email}</p>}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Employment Information Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Briefcase className=\"h-4 w-4 mr-2 text-green-600\" />\n                    Employment Details\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Department <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        name=\"department\"\n                        value={employeeForm.department}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('department');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.department ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      >\n                        <option value=\"\">Select a department</option>\n                        {departments.map(department => (\n                          <option key={department} value={department}>{department}</option>\n                        ))}\n                      </select>\n                      {errors.department && <p className=\"mt-1 text-xs text-red-600\">{errors.department}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Position Title <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"position\"\n                        value={employeeForm.position}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('position');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.position ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter job position\"\n                      />\n                      {errors.position && <p className=\"mt-1 text-xs text-red-600\">{errors.position}</p>}\n                    </div>\n                  </div>\n\n                  <div className=\"mt-3 sm:mt-4\">\n                    <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                      Reporting Manager <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                      name=\"manager\"\n                      value={employeeForm.manager}\n                      onChange={(e) => {\n                        handleInputChange(e);\n                        clearFieldError('manager');\n                      }}\n                      className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                        errors.manager ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                      }`}\n                    >\n                      <option value=\"\">Select a manager</option>\n                      {managers.map(manager => (\n                        <option key={manager} value={manager}>{manager}</option>\n                      ))}\n                    </select>\n                    {errors.manager && <p className=\"mt-1 text-xs text-red-600\">{errors.manager}</p>}\n                  </div>\n                </div>\n\n                {/* Status and Start Date Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Calendar className=\"h-4 w-4 mr-2 text-purple-600\" />\n                    Employment Status\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Employee Status <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        name=\"status\"\n                        value={employeeForm.status}\n                        onChange={handleInputChange}\n                        className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm\"\n                      >\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                        <option value=\"On Leave\">On Leave</option>\n                        <option value=\"Terminated\">Terminated</option>\n                      </select>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Start Date <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"date\"\n                        name=\"startDate\"\n                        value={employeeForm.startDate}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('startDate');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.startDate ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      />\n                      {errors.startDate && <p className=\"mt-1 text-xs text-red-600\">{errors.startDate}</p>}\n                    </div>\n                  </div>\n                </div>\n\n                {errors.submit && (\n                  <div className=\"bg-red-50 border border-red-200 text-red-700 px-3 py-2 rounded-md\">\n                    <span className=\"text-sm font-medium\">{errors.submit}</span>\n                  </div>\n                )}\n\n                {/* Action buttons */}\n                <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowAddEmployeeModal(false);\n                      setEmployeeForm({\n                        name: '',\n                        email: '',\n                        department: '',\n                        position: '',\n                        status: 'Active',\n                        startDate: '',\n                        manager: ''\n                      });\n                      setErrors({});\n                    }}\n                    className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-all duration-200 font-medium text-sm\"\n                    disabled={isLoading}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-6 py-2 bg-gradient-to-r from-blue-600 to-indigo-700 text-white rounded-md hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 font-semibold shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n                    disabled={isLoading}\n                  >\n                    {isLoading ? (\n                      <>\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2 inline-block\"></div>\n                        Processing...\n                      </>\n                    ) : (\n                      <>\n                        <UserPlus className=\"h-4 w-4 mr-2 inline-block\" />\n                        Save Employee\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Employee Modal */}\n      {showEditEmployeeModal && editingEmployee && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm overflow-y-auto h-full w-full z-50 flex items-start justify-center p-2 sm:p-4\">\n          <div className=\"relative mx-auto w-full max-w-2xl my-4 sm:my-8 bg-white rounded-xl shadow-2xl border border-gray-100 overflow-hidden\">\n            {/* Header with gradient background */}\n            <div className=\"bg-gradient-to-r from-indigo-600 to-purple-700 px-4 sm:px-6 py-3 sm:py-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2 sm:space-x-3\">\n                  <div className=\"bg-white bg-opacity-20 rounded-lg p-1.5 sm:p-2\">\n                    <Edit className=\"h-4 w-4 sm:h-5 sm:w-5 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg sm:text-xl font-bold text-white\">Edit Employee</h3>\n                    <p className=\"text-indigo-100 text-xs sm:text-sm hidden sm:block\">Update employee information and details</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => {\n                    setShowEditEmployeeModal(false);\n                    setEditingEmployee(null);\n                    setErrors({});\n                  }}\n                  className=\"text-white hover:text-gray-200 bg-white bg-opacity-20 hover:bg-opacity-30 rounded-lg p-1.5 transition-all duration-200\"\n                >\n                  <X className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                </button>\n              </div>\n            </div>\n\n            {/* Form content */}\n            <div className=\"px-4 sm:px-6 py-4 max-h-[calc(100vh-8rem)] overflow-y-auto\">\n              <form onSubmit={handleEditSubmit} className=\"space-y-4 sm:space-y-5\">\n                {/* Personal Information Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Users className=\"h-4 w-4 mr-2 text-indigo-600\" />\n                    Personal Information\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Full Name <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={editForm.name}\n                        onChange={(e) => {\n                          handleEditInputChange(e);\n                          clearFieldError('name');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 text-sm font-medium ${\n                          errors.name ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter employee's full name\"\n                      />\n                      {errors.name && <p className=\"mt-1 text-xs text-red-600\">{errors.name}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Email Address <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={editForm.email}\n                        onChange={(e) => {\n                          handleEditInputChange(e);\n                          clearFieldError('email');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 bg-white text-sm ${\n                          errors.email ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter email address\"\n                      />\n                      {errors.email && <p className=\"mt-1 text-xs text-red-600\">{errors.email}</p>}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Employment Information Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Briefcase className=\"h-4 w-4 mr-2 text-green-600\" />\n                    Employment Details\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Department <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        name=\"department\"\n                        value={editForm.department}\n                        onChange={(e) => {\n                          handleEditInputChange(e);\n                          clearFieldError('department');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 bg-white text-sm ${\n                          errors.department ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      >\n                        <option value=\"\">Select a department</option>\n                        {departments.map(department => (\n                          <option key={department} value={department}>{department}</option>\n                        ))}\n                      </select>\n                      {errors.department && <p className=\"mt-1 text-xs text-red-600\">{errors.department}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Position Title <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"position\"\n                        value={editForm.position}\n                        onChange={(e) => {\n                          handleEditInputChange(e);\n                          clearFieldError('position');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 bg-white text-sm ${\n                          errors.position ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter job position\"\n                      />\n                      {errors.position && <p className=\"mt-1 text-xs text-red-600\">{errors.position}</p>}\n                    </div>\n                  </div>\n\n                  <div className=\"mt-3 sm:mt-4\">\n                    <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                      Reporting Manager <span className=\"text-red-500\">*</span>\n                    </label>\n                    <select\n                      name=\"manager\"\n                      value={editForm.manager}\n                      onChange={(e) => {\n                        handleEditInputChange(e);\n                        clearFieldError('manager');\n                      }}\n                      className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 bg-white text-sm ${\n                        errors.manager ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                      }`}\n                    >\n                      <option value=\"\">Select a manager</option>\n                      {managers.map(manager => (\n                        <option key={manager} value={manager}>{manager}</option>\n                      ))}\n                    </select>\n                    {errors.manager && <p className=\"mt-1 text-xs text-red-600\">{errors.manager}</p>}\n                  </div>\n                </div>\n\n                {/* Status and Start Date Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Calendar className=\"h-4 w-4 mr-2 text-purple-600\" />\n                    Employment Status\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Employee Status <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        name=\"status\"\n                        value={editForm.status}\n                        onChange={handleEditInputChange}\n                        className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 bg-white text-sm\"\n                      >\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Inactive\">Inactive</option>\n                        <option value=\"On Leave\">On Leave</option>\n                        <option value=\"Terminated\">Terminated</option>\n                      </select>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Start Date <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"date\"\n                        name=\"startDate\"\n                        value={editForm.startDate}\n                        onChange={(e) => {\n                          handleEditInputChange(e);\n                          clearFieldError('startDate');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 bg-white text-sm ${\n                          errors.startDate ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      />\n                      {errors.startDate && <p className=\"mt-1 text-xs text-red-600\">{errors.startDate}</p>}\n                    </div>\n                  </div>\n                </div>\n\n                {errors.submit && (\n                  <div className=\"bg-red-50 border border-red-200 text-red-700 px-3 py-2 rounded-md\">\n                    <span className=\"text-sm font-medium\">{errors.submit}</span>\n                  </div>\n                )}\n\n                {/* Action buttons */}\n                <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowEditEmployeeModal(false);\n                      setEditingEmployee(null);\n                      setErrors({});\n                    }}\n                    className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-all duration-200 font-medium text-sm\"\n                    disabled={isLoading}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-6 py-2 bg-gradient-to-r from-indigo-600 to-purple-700 text-white rounded-md hover:from-indigo-700 hover:to-purple-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-all duration-200 font-semibold shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n                    disabled={isLoading}\n                  >\n                    {isLoading ? (\n                      <>\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2 inline-block\"></div>\n                        Processing...\n                      </>\n                    ) : (\n                      <>\n                        <Edit className=\"h-4 w-4 mr-2 inline-block\" />\n                        Update Employee\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Delete Confirmation Modal */}\n      {showDeleteConfirmModal && deletingEmployee && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-11/12 md:w-96 shadow-lg rounded-md bg-white\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-shrink-0 h-10 w-10 rounded-full bg-red-100 flex items-center justify-center\">\n                  <AlertTriangle className=\"h-6 w-6 text-red-600\" />\n                </div>\n                <h3 className=\"ml-3 text-lg font-medium text-gray-900\">Delete Employee</h3>\n              </div>\n              <button\n                onClick={() => {\n                  setShowDeleteConfirmModal(false);\n                  setDeletingEmployee(null);\n                }}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <X className=\"h-6 w-6\" />\n              </button>\n            </div>\n\n            <div className=\"mb-6\">\n              <p className=\"text-sm text-gray-500\">\n                Are you sure you want to delete <strong>{deletingEmployee.name}</strong>? \n                This action cannot be undone and will permanently remove the employee from the system.\n              </p>\n              \n              <div className=\"mt-4 bg-gray-50 rounded-lg p-4\">\n                <div className=\"text-sm\">\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <span className=\"text-gray-500\">Name:</span>\n                    <span className=\"font-medium\">{deletingEmployee.name}</span>\n                    <span className=\"text-gray-500\">Department:</span>\n                    <span className=\"font-medium\">{deletingEmployee.department}</span>\n                    <span className=\"text-gray-500\">Position:</span>\n                    <span className=\"font-medium\">{deletingEmployee.position}</span>\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"font-medium\">{deletingEmployee.status}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {errors.submit && (\n              <div className=\"mb-4 bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\">\n                {errors.submit}\n              </div>\n            )}\n\n            <div className=\"flex justify-end space-x-4\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setShowDeleteConfirmModal(false);\n                  setDeletingEmployee(null);\n                }}\n                className=\"btn btn-outline\"\n                disabled={isLoading}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleDeleteEmployee}\n                className=\"btn btn-error\"\n                disabled={isLoading}\n              >\n                {isLoading ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Deleting...\n                  </>\n                ) : (\n                  <>\n                    <Trash2 className=\"h-4 w-4 mr-2\" />\n                    Delete Employee\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":50946},"client/src/components/hr/HROverview.tsx":{"content":"import { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n} from 'recharts';\nimport { Users, UserPlus, UserMinus, Award } from 'lucide-react';\nimport { DashboardCard } from '../dashboard/DashboardCard';\n\nconst departmentData = [\n  { name: 'Engineering', employees: 45 },\n  { name: 'Sales', employees: 30 },\n  { name: 'Marketing', employees: 25 },\n  { name: 'Operations', employees: 20 },\n  { name: 'HR', employees: 15 },\n  { name: 'Finance', employees: 15 },\n];\n\nconst employeeTrends = [\n  { month: 'Jan', hires: 5, departures: 2 },\n  { month: 'Feb', hires: 4, departures: 1 },\n  { month: 'Mar', hires: 6, departures: 3 },\n  { month: 'Apr', hires: 3, departures: 2 },\n  { month: 'May', hires: 5, departures: 2 },\n  { month: 'Jun', hires: 4, departures: 1 },\n];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D'];\n\nexport function HROverview() {\n  const [period, setPeriod] = useState('month');\n  const totalEmployees = departmentData.reduce((sum, dept) => sum + dept.employees, 0);\n  const openPositions = 12;\n  const activeRecruitments = 8;\n\n  console.log('HROverview component is rendering');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <Users className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Total Employees</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">{totalEmployees}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <UserPlus className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Open Positions</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">{openPositions}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <UserMinus className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Active Recruitments</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">{activeRecruitments}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Award className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Training Programs</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">5</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Employee Distribution by Department\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={departmentData}\n                  dataKey=\"employees\"\n                  nameKey=\"name\"\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  outerRadius={80}\n                  label={({ name, value }) => `${name}: ${value}`}\n                >\n                  {departmentData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Employee Trends\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={employeeTrends}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"hires\" name=\"New Hires\" fill=\"#0088FE\" />\n                <Bar dataKey=\"departures\" name=\"Departures\" fill=\"#FF8042\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Recent Activities */}\n      <DashboardCard title=\"Recent HR Activities\">\n        <div className=\"flow-root\">\n          <ul className=\"divide-y divide-gray-200\">\n            {[\n              {\n                id: 1,\n                type: 'hire',\n                description: 'New employee John Doe joined Engineering team',\n                date: '2025-03-15',\n                department: 'Engineering'\n              },\n              {\n                id: 2,\n                type: 'training',\n                description: 'Leadership training program completed by 12 employees',\n                date: '2025-03-14',\n                department: 'Various'\n              },\n              {\n                id: 3,\n                type: 'recruitment',\n                description: 'Posted new position for Senior Product Designer',\n                date: '2025-03-13',\n                department: 'Design'\n              },\n              {\n                id: 4,\n                type: 'performance',\n                description: 'Quarterly performance reviews completed',\n                date: '2025-03-12',\n                department: 'All'\n              },\n              {\n                id: 5,\n                type: 'policy',\n                description: 'Updated remote work policy distributed',\n                date: '2025-03-11',\n                department: 'HR'\n              }\n            ].map((activity) => (\n              <li key={activity.id} className=\"py-4\">\n                <div className=\"flex space-x-3\">\n                  <div className=\"flex-1 space-y-1\">\n                    <div className=\"flex items-center justify-between\">\n                      <h3 className=\"text-sm font-medium\">{activity.description}</h3>\n                      <p className=\"text-sm text-gray-500\">{activity.date}</p>\n                    </div>\n                    <p className=\"text-sm text-gray-500\">\n                      Department: {activity.department}\n                    </p>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </DashboardCard>\n\n      {/* Quick Actions */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <DashboardCard title=\"Upcoming Reviews\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Sarah Johnson</p>\n                <p className=\"text-xs text-gray-500\">Annual Review</p>\n              </div>\n              <span className=\"text-sm text-gray-500\">Mar 20</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Mike Thompson</p>\n                <p className=\"text-xs text-gray-500\">Quarterly Review</p>\n              </div>\n              <span className=\"text-sm text-gray-500\">Mar 22</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Emily Davis</p>\n                <p className=\"text-xs text-gray-500\">Performance Review</p>\n              </div>\n              <span className=\"text-sm text-gray-500\">Mar 25</span>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Training Programs\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Leadership Development</p>\n                <p className=\"text-xs text-gray-500\">15 Participants</p>\n              </div>\n              <span className=\"badge badge-success\">Active</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Technical Skills</p>\n                <p className=\"text-xs text-gray-500\">28 Participants</p>\n              </div>\n              <span className=\"badge badge-success\">Active</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">New Hire Orientation</p>\n                <p className=\"text-xs text-gray-500\">8 Participants</p>\n              </div>\n              <span className=\"badge badge-warning\">Upcoming</span>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Department Updates\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Engineering</p>\n                <p className=\"text-xs text-gray-500\">2 Open Positions</p>\n              </div>\n              <span className=\"badge badge-primary\">Hiring</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Sales</p>\n                <p className=\"text-xs text-gray-500\">Team Restructuring</p>\n              </div>\n              <span className=\"badge badge-warning\">In Progress</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Marketing</p>\n                <p className=\"text-xs text-gray-500\">Budget Review</p>\n              </div>\n              <span className=\"badge badge-accent\">Scheduled</span>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n    </div>\n  );\n}","size_bytes":10818},"client/src/components/hr/Performance.tsx":{"content":"import { useState } from 'react';\nimport {\n  LineChart,\n  Line,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport { LineChart as LineChartIcon, Target, TrendingUp, Award } from 'lucide-react';\nimport { DashboardCard } from '../dashboard/DashboardCard';\n\nconst performanceData = [\n  { month: 'Jan', score: 85 },\n  { month: 'Feb', score: 88 },\n  { month: 'Mar', score: 87 },\n  { month: 'Apr', score: 90 },\n  { month: 'May', score: 89 },\n  { month: 'Jun', score: 92 },\n];\n\nconst departmentScores = [\n  { department: 'Engineering', score: 88 },\n  { department: 'Sales', score: 85 },\n  { department: 'Marketing', score: 82 },\n  { department: 'Operations', score: 87 },\n  { department: 'HR', score: 90 },\n  { department: 'Finance', score: 86 },\n];\n\nconst reviews = [\n  {\n    id: 1,\n    employee: 'John Doe',\n    position: 'Senior Developer',\n    department: 'Engineering',\n    reviewDate: '2025-03-15',\n    score: 92,\n    status: 'Completed'\n  },\n  {\n    id: 2,\n    employee: 'Jane Smith',\n    position: 'Marketing Manager',\n    department: 'Marketing',\n    reviewDate: '2025-03-14',\n    score: 88,\n    status: 'Completed'\n  },\n  // Add more reviews...\n];\n\nexport function Performance() {\n  const [period, setPeriod] = useState('quarter');\n  const averageScore = performanceData.reduce((acc, curr) => acc + curr.score, 0) / performanceData.length;\n  const topPerformer = reviews.reduce((max, review) => review.score > max.score ? review : max, reviews[0]);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <LineChartIcon className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Average Score</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">{averageScore.toFixed(1)}</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <Target className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Reviews Completed</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">45</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <TrendingUp className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Improvement Rate</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">+8.5%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Award className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Top Performer</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">{topPerformer.score}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Performance Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Performance Trend\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={performanceData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis domain={[0, 100]} />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"score\"\n                  name=\"Performance Score\"\n                  stroke=\"#0088FE\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Department Performance\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={departmentScores}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"department\" />\n                <YAxis domain={[0, 100]} />\n                <Tooltip />\n                <Legend />\n                <Bar\n                  dataKey=\"score\"\n                  name=\"Average Score\"\n                  fill=\"#8884d8\"\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Recent Reviews */}\n      <DashboardCard title=\"Recent Performance Reviews\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Employee\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Position\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Department\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Review Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Score\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {reviews.map((review) => (\n                <tr key={review.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {review.employee}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {review.position}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {review.department}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {review.reviewDate}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-center\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\n                      ${review.score >= 90 ? 'bg-green-100 text-green-800' :\n                        review.score >= 75 ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-red-100 text-red-800'}`}>\n                      {review.score}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\n                      ${review.status === 'Completed' ? 'bg-green-100 text-green-800' :\n                        'bg-yellow-100 text-yellow-800'}`}>\n                      {review.status}\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Performance Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <DashboardCard title=\"Key Performance Indicators\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Productivity</p>\n                <div className=\"mt-1 h-2 w-full bg-gray-200 rounded-full\">\n                  <div className=\"h-2 bg-green-500 rounded-full\" style={{ width: '85%' }}></div>\n                </div>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">85%</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Quality of Work</p>\n                <div className=\"mt-1 h-2 w-full bg-gray-200 rounded-full\">\n                  <div className=\"h-2 bg-blue-500 rounded-full\" style={{ width: '92%' }}></div>\n                </div>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">92%</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Initiative</p>\n                <div className=\"mt-1 h-2 w-full bg-gray-200 rounded-full\">\n                  <div className=\"h-2 bg-yellow-500 rounded-full\" style={{ width: '78%' }}></div>\n                </div>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">78%</span>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Upcoming Reviews\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Sarah Johnson</p>\n                <p className=\"text-xs text-gray-500\">Marketing Specialist</p>\n              </div>\n              <span className=\"text-sm text-gray-500\">Mar 25</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Michael Brown</p>\n                <p className=\"text-xs text-gray-500\">Software Engineer</p>\n              </div>\n              <span className=\"text-sm text-gray-500\">Mar 28</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Emily Davis</p>\n                <p className=\"text-xs text-gray-500\">Product Manager</p>\n              </div>\n              <span className=\"text-sm text-gray-500\">Mar 30</span>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Performance Insights\">\n          <div className=\"space-y-4\">\n            <div className=\"border-l-4 border-green-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">High Performer Alert</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Engineering team showing 15% improvement in Q1\n              </p>\n            </div>\n            <div className=\"border-l-4 border-yellow-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Training Recommendation</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Consider leadership training for high-potential employees\n              </p>\n            </div>\n            <div className=\"border-l-4 border-red-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Performance Gap</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Sales team productivity below target by 8%\n              </p>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n    </div>\n  );\n}","size_bytes":12314},"client/src/components/hr/Recruitment.tsx":{"content":"import { useState } from 'react';\nimport { UserPlus, Search, Filter, Plus, Users, Building, Calendar, X, Briefcase, MapPin, Clock } from 'lucide-react';\nimport { DashboardCard } from '../dashboard/DashboardCard';\n\ninterface JobOpening {\n  id: number;\n  title: string;\n  department: string;\n  location: string;\n  type: 'Full Time' | 'Part Time' | 'Contract' | 'Internship';\n  experience: string;\n  status: 'Active' | 'Not Active';\n  applicants: number;\n  postedDate: string;\n}\n\nconst initialJobOpenings: JobOpening[] = [\n  {\n    id: 1,\n    title: 'Senior Software Engineer',\n    department: 'Engineering',\n    location: 'San Francisco, CA',\n    type: 'Full Time',\n    experience: '5+ years',\n    status: 'Active',\n    applicants: 45,\n    postedDate: '2025-03-01'\n  },\n  {\n    id: 2,\n    title: 'Product Marketing Manager',\n    department: 'Marketing',\n    location: 'New York, NY',\n    type: 'Full Time',\n    experience: '3-5 years',\n    status: 'Active',\n    applicants: 28,\n    postedDate: '2025-03-05'\n  },\n  {\n    id: 3,\n    title: 'UX Designer',\n    department: 'Design',\n    location: 'Remote',\n    type: 'Full Time',\n    experience: '2-4 years',\n    status: 'Active',\n    applicants: 32,\n    postedDate: '2025-03-08'\n  }\n];\n\nconst applications = [\n  {\n    id: 1,\n    candidate: 'John Smith',\n    position: 'Senior Software Engineer',\n    status: 'Interview Scheduled',\n    appliedDate: '2025-03-10',\n    email: 'john.smith@example.com',\n    experience: '6 years'\n  },\n  {\n    id: 2,\n    candidate: 'Sarah Johnson',\n    position: 'Product Marketing Manager',\n    status: 'Under Review',\n    appliedDate: '2025-03-12',\n    email: 'sarah.j@example.com',\n    experience: '4 years'\n  },\n  {\n    id: 3,\n    candidate: 'David Brown',\n    position: 'UX Designer',\n    status: 'Phone Screening',\n    appliedDate: '2025-03-15',\n    email: 'david.brown@example.com',\n    experience: '3 years'\n  }\n];\n\nexport function Recruitment() {\n  const [jobOpenings, setJobOpenings] = useState<JobOpening[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedDepartment, setSelectedDepartment] = useState('All');\n  const [showPostPositionModal, setShowPostPositionModal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  // Form state\n  const [positionForm, setPositionForm] = useState({\n    title: '',\n    department: '',\n    location: '',\n    type: 'Full Time' as const,\n    experience: '',\n    status: 'Active' as const,\n    applicants: 0,\n    postedDate: new Date().toISOString().split('T')[0]\n  });\n\n  // Load job openings from localStorage on component mount\n  useState(() => {\n    const savedOpenings = localStorage.getItem('hr_job_openings');\n    if (savedOpenings) {\n      try {\n        setJobOpenings(JSON.parse(savedOpenings));\n      } catch (error) {\n        console.error('Error loading job openings:', error);\n        setJobOpenings(initialJobOpenings);\n      }\n    } else {\n      setJobOpenings(initialJobOpenings);\n      localStorage.setItem('hr_job_openings', JSON.stringify(initialJobOpenings));\n    }\n  });\n\n  // Predefined options\n  const departments = [\n    'Engineering',\n    'Marketing',\n    'Sales',\n    'Human Resources',\n    'Finance',\n    'Operations',\n    'Customer Support',\n    'Legal',\n    'Design',\n    'Product Management'\n  ];\n\n  const employmentTypes = ['Full Time', 'Part Time', 'Contract', 'Internship'];\n  const statusOptions = ['Active', 'Not Active'];\n\n  const filteredOpenings = jobOpenings.filter(opening => {\n    const matchesSearch = opening.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         opening.department.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesDepartment = selectedDepartment === 'All' || opening.department === selectedDepartment;\n    \n    return matchesSearch && matchesDepartment;\n  });\n\n  // Form validation\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!positionForm.title.trim()) newErrors.title = 'Position title is required';\n    if (!positionForm.department) newErrors.department = 'Department is required';\n    if (!positionForm.location.trim()) newErrors.location = 'Location is required';\n    if (!positionForm.experience.trim()) newErrors.experience = 'Experience requirement is required';\n    if (!positionForm.postedDate) newErrors.postedDate = 'Posted date is required';\n\n    // Check for duplicate position title in same department\n    if (positionForm.title && positionForm.department) {\n      const duplicate = jobOpenings.some(opening => \n        opening.title.toLowerCase() === positionForm.title.toLowerCase() &&\n        opening.department === positionForm.department &&\n        opening.status === 'Active'\n      );\n      if (duplicate) {\n        newErrors.title = 'An active position with this title already exists in this department';\n      }\n    }\n\n    // Posted date validation (cannot be in the future)\n    if (positionForm.postedDate) {\n      const postedDate = new Date(positionForm.postedDate);\n      const today = new Date();\n      today.setHours(23, 59, 59, 999); // End of today\n      \n      if (postedDate > today) {\n        newErrors.postedDate = 'Posted date cannot be in the future';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Form submission handler\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setIsLoading(true);\n\n    try {\n      const newPosition: JobOpening = {\n        id: Math.max(...jobOpenings.map(opening => opening.id), 0) + 1,\n        title: positionForm.title.trim(),\n        department: positionForm.department,\n        location: positionForm.location.trim(),\n        type: positionForm.type,\n        experience: positionForm.experience.trim(),\n        status: positionForm.status,\n        applicants: positionForm.applicants,\n        postedDate: positionForm.postedDate\n      };\n\n      const updatedOpenings = [...jobOpenings, newPosition];\n      setJobOpenings(updatedOpenings);\n      localStorage.setItem('hr_job_openings', JSON.stringify(updatedOpenings));\n\n      setSuccessMessage('Job position posted successfully!');\n      setPositionForm({\n        title: '',\n        department: '',\n        location: '',\n        type: 'Full Time',\n        experience: '',\n        status: 'Active',\n        applicants: 0,\n        postedDate: new Date().toISOString().split('T')[0]\n      });\n      setShowPostPositionModal(false);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (error) {\n      console.error('Error saving position:', error);\n      setErrors({ submit: 'Failed to save position. Please try again.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Clear field error when user starts typing\n  const clearFieldError = (field: string) => {\n    if (errors[field]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  // Handle form input changes\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setPositionForm(prev => ({ ...prev, [name]: value }));\n    clearFieldError(name);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Success Message */}\n      {successMessage && (\n        <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded relative\">\n          <span className=\"block sm:inline\">{successMessage}</span>\n        </div>\n      )}\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <UserPlus className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Open Positions</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">12</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <Users className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Total Applicants</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">156</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <Calendar className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Interviews Scheduled</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">28</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Building className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Departments Hiring</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">5</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Job Openings */}\n      <DashboardCard title=\"Active Job Openings\">\n        <div className=\"mb-6 flex flex-wrap gap-4 items-center justify-between\">\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <Search className=\"h-5 w-5 text-gray-400\" />\n              </div>\n              <input\n                type=\"text\"\n                className=\"focus:ring-primary-500 focus:border-primary-500 block w-full pl-10 sm:text-sm border-gray-300 rounded-md\"\n                placeholder=\"Search positions...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n          </div>\n          \n          <div className=\"flex flex-wrap items-center gap-4\">\n            <select\n              value={selectedDepartment}\n              onChange={(e) => setSelectedDepartment(e.target.value)}\n              className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n            >\n              <option>All Departments</option>\n              <option>Engineering</option>\n              <option>Marketing</option>\n              <option>Sales</option>\n              <option>HR</option>\n              <option>Finance</option>\n            </select>\n            \n            <button \n              className=\"px-4 py-2 bg-gradient-to-r from-blue-600 to-indigo-700 text-white rounded-md hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 font-semibold shadow-lg hover:shadow-xl text-sm flex items-center\"\n              onClick={() => setShowPostPositionModal(true)}\n              data-testid=\"button-post-position\"\n            >\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Post New Position\n            </button>\n          </div>\n        </div>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Position\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Department\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Location\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Type\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Applicants\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Posted Date\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {filteredOpenings.map((job) => (\n                <tr key={job.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm font-medium text-gray-900\">{job.title}</div>\n                    <div className=\"text-sm text-gray-500\">{job.experience} experience</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {job.department}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {job.location}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {job.type}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-center\">\n                    <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-primary-100 text-primary-800\">\n                      {job.applicants}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\n                      ${job.status === 'Active' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n                      {job.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {job.postedDate}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Applications */}\n      <DashboardCard title=\"Recent Applications\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Candidate\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Position\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Applied Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Experience\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {applications.map((application) => (\n                <tr key={application.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm font-medium text-gray-900\">{application.candidate}</div>\n                    <div className=\"text-sm text-gray-500\">{application.email}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {application.position}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\n                      ${application.status === 'Interview Scheduled' ? 'bg-green-100 text-green-800' :\n                        application.status === 'Under Review' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-gray-100 text-gray-800'}`}>\n                      {application.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {application.appliedDate}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {application.experience}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Post New Position Modal */}\n      {showPostPositionModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm overflow-y-auto h-full w-full z-50 flex items-start justify-center p-2 sm:p-4\">\n          <div className=\"relative mx-auto w-full max-w-2xl my-4 sm:my-8 bg-white rounded-xl shadow-2xl border border-gray-100 overflow-hidden\">\n            {/* Header with gradient background */}\n            <div className=\"bg-gradient-to-r from-blue-600 to-indigo-700 px-4 sm:px-6 py-3 sm:py-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2 sm:space-x-3\">\n                  <div className=\"bg-white bg-opacity-20 rounded-lg p-1.5 sm:p-2\">\n                    <Plus className=\"h-4 w-4 sm:h-5 sm:w-5 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg sm:text-xl font-bold text-white\">Post New Position</h3>\n                    <p className=\"text-blue-100 text-xs sm:text-sm hidden sm:block\">Create and publish a new job opening</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => {\n                    setShowPostPositionModal(false);\n                    setPositionForm({\n                      title: '',\n                      department: '',\n                      location: '',\n                      type: 'Full Time',\n                      experience: '',\n                      status: 'Active',\n                      applicants: 0,\n                      postedDate: new Date().toISOString().split('T')[0]\n                    });\n                    setErrors({});\n                  }}\n                  className=\"text-white hover:text-gray-200 bg-white bg-opacity-20 hover:bg-opacity-30 rounded-lg p-1.5 transition-all duration-200\"\n                >\n                  <X className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                </button>\n              </div>\n            </div>\n\n            {/* Form content */}\n            <div className=\"px-4 sm:px-6 py-4 max-h-[calc(100vh-8rem)] overflow-y-auto\">\n              <form onSubmit={handleSubmit} className=\"space-y-4 sm:space-y-5\">\n                {/* Position Basic Info Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Briefcase className=\"h-4 w-4 mr-2 text-blue-600\" />\n                    Position Details\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Position Title <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"title\"\n                        value={positionForm.title}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('title');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm font-medium ${\n                          errors.title ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter position title\"\n                      />\n                      {errors.title && <p className=\"mt-1 text-xs text-red-600\">{errors.title}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Department <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        name=\"department\"\n                        value={positionForm.department}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('department');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.department ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      >\n                        <option value=\"\">Select a department</option>\n                        {departments.map(department => (\n                          <option key={department} value={department}>{department}</option>\n                        ))}\n                      </select>\n                      {errors.department && <p className=\"mt-1 text-xs text-red-600\">{errors.department}</p>}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Location and Employment Type Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <MapPin className=\"h-4 w-4 mr-2 text-green-600\" />\n                    Work Arrangement\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Location <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"location\"\n                        value={positionForm.location}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('location');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm ${\n                          errors.location ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"e.g., San Francisco, CA or Remote\"\n                      />\n                      {errors.location && <p className=\"mt-1 text-xs text-red-600\">{errors.location}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Employment Type <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        name=\"type\"\n                        value={positionForm.type}\n                        onChange={handleInputChange}\n                        className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm\"\n                      >\n                        {employmentTypes.map(type => (\n                          <option key={type} value={type}>{type}</option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Requirements and Status Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Clock className=\"h-4 w-4 mr-2 text-purple-600\" />\n                    Requirements & Status\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Experience Required <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"experience\"\n                        value={positionForm.experience}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('experience');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm ${\n                          errors.experience ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"e.g., 3-5 years, Entry level, 5+ years\"\n                      />\n                      {errors.experience && <p className=\"mt-1 text-xs text-red-600\">{errors.experience}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Position Status <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        name=\"status\"\n                        value={positionForm.status}\n                        onChange={handleInputChange}\n                        className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm\"\n                      >\n                        {statusOptions.map(status => (\n                          <option key={status} value={status}>{status}</option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4 mt-3 sm:mt-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Initial Applicant Count\n                      </label>\n                      <input\n                        type=\"number\"\n                        name=\"applicants\"\n                        value={positionForm.applicants}\n                        onChange={handleInputChange}\n                        className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm\"\n                        min=\"0\"\n                        placeholder=\"0\"\n                      />\n                      <p className=\"mt-1 text-xs text-gray-500\">Usually starts at 0 for new positions</p>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Posted Date <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"date\"\n                        name=\"postedDate\"\n                        value={positionForm.postedDate}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('postedDate');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.postedDate ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      />\n                      {errors.postedDate && <p className=\"mt-1 text-xs text-red-600\">{errors.postedDate}</p>}\n                    </div>\n                  </div>\n                </div>\n\n                {errors.submit && (\n                  <div className=\"bg-red-50 border border-red-200 text-red-700 px-3 py-2 rounded-md\">\n                    <span className=\"text-sm font-medium\">{errors.submit}</span>\n                  </div>\n                )}\n\n                {/* Action buttons */}\n                <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowPostPositionModal(false);\n                      setPositionForm({\n                        title: '',\n                        department: '',\n                        location: '',\n                        type: 'Full Time',\n                        experience: '',\n                        status: 'Active',\n                        applicants: 0,\n                        postedDate: new Date().toISOString().split('T')[0]\n                      });\n                      setErrors({});\n                    }}\n                    className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-all duration-200 font-medium text-sm\"\n                    disabled={isLoading}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-6 py-2 bg-gradient-to-r from-blue-600 to-indigo-700 text-white rounded-md hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 font-semibold shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n                    disabled={isLoading}\n                  >\n                    {isLoading ? (\n                      <>\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2 inline-block\"></div>\n                        Processing...\n                      </>\n                    ) : (\n                      <>\n                        <Plus className=\"h-4 w-4 mr-2 inline-block\" />\n                        Post Position\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":32858},"client/src/components/hr/Training.tsx":{"content":"import { useState } from 'react';\nimport { BookOpen, Users, Calendar, Award, Plus, Search, X, GraduationCap, Clock, User } from 'lucide-react';\nimport { DashboardCard } from '../dashboard/DashboardCard';\n\ninterface TrainingProgram {\n  id: number;\n  name: string;\n  type: string;\n  instructor: string;\n  startDate: string;\n  duration: string;\n  participants: number;\n  status: 'Upcoming' | 'In Progress' | 'Completed' | 'Cancelled';\n}\n\nconst initialTrainingPrograms: TrainingProgram[] = [\n  {\n    id: 1,\n    name: 'Leadership Development',\n    type: 'Professional Development',\n    instructor: 'Dr. Sarah Wilson',\n    startDate: '2025-04-01',\n    duration: '12 weeks',\n    participants: 15,\n    status: 'Upcoming'\n  },\n  {\n    id: 2,\n    name: 'Technical Skills Workshop',\n    type: 'Technical',\n    instructor: 'John Anderson',\n    startDate: '2025-03-15',\n    duration: '8 weeks',\n    participants: 25,\n    status: 'In Progress'\n  },\n  // More programs can be added here\n];\n\nconst completedTrainings = [\n  {\n    id: 1,\n    employee: 'Michael Brown',\n    program: 'Project Management Fundamentals',\n    completionDate: '2025-03-01',\n    score: 95,\n    certificate: true\n  },\n  {\n    id: 2,\n    employee: 'Emily Davis',\n    program: 'Communication Skills',\n    completionDate: '2025-02-28',\n    score: 88,\n    certificate: true\n  },\n  // More completed trainings can be added here\n];\n\nexport function Training() {\n  const [trainingPrograms, setTrainingPrograms] = useState<TrainingProgram[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedType, setSelectedType] = useState('All');\n  const [showCreateProgramModal, setShowCreateProgramModal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  // Form state\n  const [programForm, setProgramForm] = useState({\n    name: '',\n    type: '',\n    instructor: '',\n    startDate: '',\n    duration: '',\n    participants: '',\n    status: 'Upcoming' as const\n  });\n\n  // Load training programs from localStorage on component mount\n  useState(() => {\n    const savedPrograms = localStorage.getItem('hr_training_programs');\n    if (savedPrograms) {\n      try {\n        setTrainingPrograms(JSON.parse(savedPrograms));\n      } catch (error) {\n        console.error('Error loading training programs:', error);\n        setTrainingPrograms(initialTrainingPrograms);\n      }\n    } else {\n      setTrainingPrograms(initialTrainingPrograms);\n      localStorage.setItem('hr_training_programs', JSON.stringify(initialTrainingPrograms));\n    }\n  });\n\n  // Predefined options\n  const programTypes = [\n    'Technical',\n    'Professional Development',\n    'Soft Skills',\n    'Compliance',\n    'Leadership',\n    'Safety',\n    'Customer Service',\n    'Sales Training'\n  ];\n\n  const instructors = [\n    'Dr. Sarah Wilson',\n    'John Anderson',\n    'Emily Johnson',\n    'Michael Brown',\n    'Lisa Davis',\n    'Robert Taylor',\n    'Jennifer Wilson',\n    'David Miller'\n  ];\n\n  const statusOptions = ['Upcoming', 'In Progress', 'Completed', 'Cancelled'];\n\n  const filteredPrograms = trainingPrograms.filter(program => {\n    const matchesSearch = program.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         program.instructor.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesType = selectedType === 'All' || program.type === selectedType;\n    \n    return matchesSearch && matchesType;\n  });\n\n  // Form validation\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!programForm.name.trim()) newErrors.name = 'Program name is required';\n    if (!programForm.type) newErrors.type = 'Program type is required';\n    if (!programForm.instructor.trim()) newErrors.instructor = 'Instructor is required';\n    if (!programForm.startDate) newErrors.startDate = 'Start date is required';\n    if (!programForm.duration.trim()) newErrors.duration = 'Duration is required';\n    if (!programForm.participants) newErrors.participants = 'Number of participants is required';\n\n    // Check for duplicate program name\n    if (programForm.name && trainingPrograms.some(program => \n      program.name.toLowerCase() === programForm.name.toLowerCase()\n    )) {\n      newErrors.name = 'A training program with this name already exists';\n    }\n\n    // Start date validation (cannot be in the past for upcoming programs)\n    if (programForm.startDate && programForm.status === 'Upcoming') {\n      const startDate = new Date(programForm.startDate);\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // Start of today\n      \n      if (startDate < today) {\n        newErrors.startDate = 'Start date cannot be in the past for upcoming programs';\n      }\n    }\n\n    // Participants validation\n    const participantCount = parseInt(programForm.participants);\n    if (programForm.participants && (isNaN(participantCount) || participantCount <= 0)) {\n      newErrors.participants = 'Number of participants must be a positive number';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Form submission handler\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setIsLoading(true);\n\n    try {\n      const newProgram: TrainingProgram = {\n        id: Math.max(...trainingPrograms.map(program => program.id), 0) + 1,\n        name: programForm.name.trim(),\n        type: programForm.type,\n        instructor: programForm.instructor.trim(),\n        startDate: programForm.startDate,\n        duration: programForm.duration.trim(),\n        participants: parseInt(programForm.participants),\n        status: programForm.status\n      };\n\n      const updatedPrograms = [...trainingPrograms, newProgram];\n      setTrainingPrograms(updatedPrograms);\n      localStorage.setItem('hr_training_programs', JSON.stringify(updatedPrograms));\n\n      setSuccessMessage('Training program created successfully!');\n      setProgramForm({\n        name: '',\n        type: '',\n        instructor: '',\n        startDate: '',\n        duration: '',\n        participants: '',\n        status: 'Upcoming'\n      });\n      setShowCreateProgramModal(false);\n\n      // Clear success message after 3 seconds\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (error) {\n      console.error('Error saving training program:', error);\n      setErrors({ submit: 'Failed to save training program. Please try again.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Clear field error when user starts typing\n  const clearFieldError = (field: string) => {\n    if (errors[field]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  };\n\n  // Handle form input changes\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setProgramForm(prev => ({ ...prev, [name]: value }));\n    clearFieldError(name);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Success Message */}\n      {successMessage && (\n        <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded relative\">\n          <span className=\"block sm:inline\">{successMessage}</span>\n        </div>\n      )}\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <BookOpen className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Active Programs</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">8</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <Users className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Total Participants</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">156</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <Calendar className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Upcoming Sessions</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">12</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Award className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Certifications</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">45</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Training Programs */}\n      <DashboardCard title=\"Training Programs\">\n        <div className=\"mb-6 flex flex-wrap gap-4 items-center justify-between\">\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <Search className=\"h-5 w-5 text-gray-400\" />\n              </div>\n              <input\n                type=\"text\"\n                className=\"focus:ring-primary-500 focus:border-primary-500 block w-full pl-10 sm:text-sm border-gray-300 rounded-md\"\n                placeholder=\"Search programs...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n          </div>\n          \n          <div className=\"flex flex-wrap items-center gap-4\">\n            <select\n              value={selectedType}\n              onChange={(e) => setSelectedType(e.target.value)}\n              className=\"block w-40 pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n            >\n              <option>All Types</option>\n              <option>Technical</option>\n              <option>Professional Development</option>\n              <option>Soft Skills</option>\n              <option>Compliance</option>\n            </select>\n            \n            <button \n              className=\"px-4 py-2 bg-gradient-to-r from-blue-600 to-indigo-700 text-white rounded-md hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 font-semibold shadow-lg hover:shadow-xl text-sm flex items-center\"\n              onClick={() => setShowCreateProgramModal(true)}\n              data-testid=\"button-create-program\"\n            >\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Create Program\n            </button>\n          </div>\n        </div>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Program Name\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Type\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Instructor\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Start Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Duration\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Participants\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {filteredPrograms.map((program) => (\n                <tr key={program.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm font-medium text-gray-900\">{program.name}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {program.type}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {program.instructor}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {program.startDate}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {program.duration}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-center\">\n                    <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-primary-100 text-primary-800\">\n                      {program.participants}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\n                      ${program.status === 'In Progress' ? 'bg-green-100 text-green-800' :\n                        program.status === 'Upcoming' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-gray-100 text-gray-800'}`}>\n                      {program.status}\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Completed Trainings */}\n      <DashboardCard title=\"Recently Completed Trainings\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Employee\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Program\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Completion Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Score\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Certificate\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {completedTrainings.map((training) => (\n                <tr key={training.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {training.employee}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {training.program}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {training.completionDate}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-center\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full\n                      ${training.score >= 90 ? 'bg-green-100 text-green-800' :\n                        training.score >= 75 ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-red-100 text-red-800'}`}>\n                      {training.score}%\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-center\">\n                    {training.certificate ? (\n                      <Award className=\"h-5 w-5 text-green-500 mx-auto\" />\n                    ) : (\n                      <span>-</span>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Create Training Program Modal */}\n      {showCreateProgramModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm overflow-y-auto h-full w-full z-50 flex items-start justify-center p-2 sm:p-4\">\n          <div className=\"relative mx-auto w-full max-w-2xl my-4 sm:my-8 bg-white rounded-xl shadow-2xl border border-gray-100 overflow-hidden\">\n            {/* Header with gradient background */}\n            <div className=\"bg-gradient-to-r from-blue-600 to-indigo-700 px-4 sm:px-6 py-3 sm:py-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2 sm:space-x-3\">\n                  <div className=\"bg-white bg-opacity-20 rounded-lg p-1.5 sm:p-2\">\n                    <GraduationCap className=\"h-4 w-4 sm:h-5 sm:w-5 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg sm:text-xl font-bold text-white\">Create Training Program</h3>\n                    <p className=\"text-blue-100 text-xs sm:text-sm hidden sm:block\">Design and launch a new learning program</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => {\n                    setShowCreateProgramModal(false);\n                    setProgramForm({\n                      name: '',\n                      type: '',\n                      instructor: '',\n                      startDate: '',\n                      duration: '',\n                      participants: '',\n                      status: 'Upcoming'\n                    });\n                    setErrors({});\n                  }}\n                  className=\"text-white hover:text-gray-200 bg-white bg-opacity-20 hover:bg-opacity-30 rounded-lg p-1.5 transition-all duration-200\"\n                >\n                  <X className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                </button>\n              </div>\n            </div>\n\n            {/* Form content */}\n            <div className=\"px-4 sm:px-6 py-4 max-h-[calc(100vh-8rem)] overflow-y-auto\">\n              <form onSubmit={handleSubmit} className=\"space-y-4 sm:space-y-5\">\n                {/* Program Basic Info Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <BookOpen className=\"h-4 w-4 mr-2 text-blue-600\" />\n                    Program Information\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Program Name <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={programForm.name}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('name');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm font-medium ${\n                          errors.name ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Enter program name\"\n                      />\n                      {errors.name && <p className=\"mt-1 text-xs text-red-600\">{errors.name}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Program Type <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        name=\"type\"\n                        value={programForm.type}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('type');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.type ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      >\n                        <option value=\"\">Select a program type</option>\n                        {programTypes.map(type => (\n                          <option key={type} value={type}>{type}</option>\n                        ))}\n                      </select>\n                      {errors.type && <p className=\"mt-1 text-xs text-red-600\">{errors.type}</p>}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Instructor and Scheduling Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <User className=\"h-4 w-4 mr-2 text-green-600\" />\n                    Instructor & Schedule\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Instructor <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        name=\"instructor\"\n                        value={programForm.instructor}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('instructor');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.instructor ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      >\n                        <option value=\"\">Select an instructor</option>\n                        {instructors.map(instructor => (\n                          <option key={instructor} value={instructor}>{instructor}</option>\n                        ))}\n                      </select>\n                      {errors.instructor && <p className=\"mt-1 text-xs text-red-600\">{errors.instructor}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Start Date <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"date\"\n                        name=\"startDate\"\n                        value={programForm.startDate}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('startDate');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.startDate ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                      />\n                      {errors.startDate && <p className=\"mt-1 text-xs text-red-600\">{errors.startDate}</p>}\n                    </div>\n                  </div>\n                </div>\n\n                {/* Program Details Section */}\n                <div className=\"bg-gray-50 rounded-lg p-3 sm:p-4 border border-gray-200\">\n                  <h4 className=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center\">\n                    <Clock className=\"h-4 w-4 mr-2 text-purple-600\" />\n                    Program Details\n                  </h4>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-3 sm:gap-4\">\n                    <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Duration <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"duration\"\n                        value={programForm.duration}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('duration');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm ${\n                          errors.duration ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"e.g., 8 weeks, 3 months\"\n                      />\n                      {errors.duration && <p className=\"mt-1 text-xs text-red-600\">{errors.duration}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Participants <span className=\"text-red-500\">*</span>\n                      </label>\n                      <input\n                        type=\"number\"\n                        name=\"participants\"\n                        value={programForm.participants}\n                        onChange={(e) => {\n                          handleInputChange(e);\n                          clearFieldError('participants');\n                        }}\n                        className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm ${\n                          errors.participants ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                        }`}\n                        placeholder=\"Number of participants\"\n                        min=\"1\"\n                      />\n                      {errors.participants && <p className=\"mt-1 text-xs text-red-600\">{errors.participants}</p>}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                        Status <span className=\"text-red-500\">*</span>\n                      </label>\n                      <select\n                        name=\"status\"\n                        value={programForm.status}\n                        onChange={handleInputChange}\n                        className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 bg-white text-sm\"\n                      >\n                        {statusOptions.map(status => (\n                          <option key={status} value={status}>{status}</option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                {errors.submit && (\n                  <div className=\"bg-red-50 border border-red-200 text-red-700 px-3 py-2 rounded-md\">\n                    <span className=\"text-sm font-medium\">{errors.submit}</span>\n                  </div>\n                )}\n\n                {/* Action buttons */}\n                <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowCreateProgramModal(false);\n                      setProgramForm({\n                        name: '',\n                        type: '',\n                        instructor: '',\n                        startDate: '',\n                        duration: '',\n                        participants: '',\n                        status: 'Upcoming'\n                      });\n                      setErrors({});\n                    }}\n                    className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-all duration-200 font-medium text-sm\"\n                    disabled={isLoading}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"px-6 py-2 bg-gradient-to-r from-blue-600 to-indigo-700 text-white rounded-md hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 font-semibold shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n                    disabled={isLoading}\n                  >\n                    {isLoading ? (\n                      <>\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2 inline-block\"></div>\n                        Processing...\n                      </>\n                    ) : (\n                      <>\n                        <GraduationCap className=\"h-4 w-4 mr-2 inline-block\" />\n                        Create Program\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":31853},"client/src/components/layout/Header.tsx":{"content":"import { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'wouter';\nimport { Bell, Search, Menu, X, User, Settings, LogOut, HelpCircle } from 'lucide-react';\nimport { useAuthStore } from '../../stores/authStore';\n\ninterface HeaderProps {\n  onMenuButtonClick: () => void;\n}\n\nexport function Header({ onMenuButtonClick }: HeaderProps) {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const [userMenuOpen, setUserMenuOpen] = useState(false);\n  const [notificationsOpen, setNotificationsOpen] = useState(false);\n  const searchInputRef = useRef<HTMLInputElement>(null);\n  const userMenuRef = useRef<HTMLDivElement>(null);\n  const notificationsRef = useRef<HTMLDivElement>(null);\n  const { user, logout } = useAuthStore();\n  const [, setLocation] = useLocation();\n\n  // Close menus when clicking outside\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target as Node)) {\n        setUserMenuOpen(false);\n      }\n      if (notificationsRef.current && !notificationsRef.current.contains(event.target as Node)) {\n        setNotificationsOpen(false);\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Focus search input when opened\n  useEffect(() => {\n    if (searchOpen && searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  }, [searchOpen]);\n\n  return (\n    <header className=\"sticky top-0 z-10 flex h-16 flex-shrink-0 border-b border-gray-200 bg-white shadow-sm\">\n      <div className=\"flex flex-1 items-center justify-between px-4 md:px-6\">\n        {/* Left: Menu button (mobile) and logo */}\n        <div className=\"flex items-center\">\n          <button\n            type=\"button\"\n            className=\"lg:hidden -ml-2 mr-2 p-2 text-gray-500 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500\"\n            onClick={onMenuButtonClick}\n          >\n            <span className=\"sr-only\">Open sidebar</span>\n            <Menu className=\"h-6 w-6\" />\n          </button>\n          \n          <div className=\"flex-shrink-0 flex items-center\">\n            <h1 className=\"text-xl font-bold text-primary-600\">ERP System</h1>\n          </div>\n        </div>\n\n        {/* Center: Search bar */}\n        <div className=\"hidden md:flex flex-1 justify-center px-6\">\n          <div className=\"w-full max-w-lg\">\n            <label htmlFor=\"search\" className=\"sr-only\">Search</label>\n            <div className=\"relative\">\n              <div className=\"pointer-events-none absolute inset-y-0 left-0 pl-3 flex items-center\">\n                <Search className=\"h-5 w-5 text-gray-400\" />\n              </div>\n              <input\n                id=\"search\"\n                name=\"search\"\n                className=\"block w-full rounded-md border border-gray-300 bg-white py-2 pl-10 pr-3 leading-5 placeholder-gray-500 focus:border-primary-500 focus:placeholder-gray-400 focus:outline-none focus:ring-1 focus:ring-primary-500 sm:text-sm\"\n                placeholder=\"Search across all modules...\"\n                type=\"search\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Right: Mobile search, notifications, user menu */}\n        <div className=\"flex items-center space-x-4\">\n          {/* Mobile search button */}\n          <button \n            type=\"button\"\n            className=\"md:hidden p-2 text-gray-500 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500\"\n            onClick={() => setSearchOpen(!searchOpen)}\n          >\n            {searchOpen ? <X className=\"h-5 w-5\" /> : <Search className=\"h-5 w-5\" />}\n          </button>\n\n          {/* Notifications */}\n          <div className=\"relative\" ref={notificationsRef}>\n            <button\n              type=\"button\"\n              className=\"relative p-2 text-gray-500 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500\"\n              onClick={() => setNotificationsOpen(!notificationsOpen)}\n            >\n              <span className=\"sr-only\">View notifications</span>\n              <Bell className=\"h-5 w-5\" />\n              <span className=\"absolute top-0 right-0 h-2 w-2 rounded-full bg-error-500 ring-2 ring-white\"></span>\n            </button>\n\n            {notificationsOpen && (\n              <div className=\"absolute right-0 mt-2 w-80 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                <div className=\"px-4 py-2 border-b border-gray-200\">\n                  <h3 className=\"text-sm font-medium text-gray-900\">Notifications</h3>\n                </div>\n                <div className=\"max-h-96 overflow-y-auto py-2\">\n                  {[1, 2, 3].map((item) => (\n                    <a\n                      key={item}\n                      href=\"#\"\n                      className=\"block px-4 py-3 hover:bg-gray-50 transition-colors duration-150\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setNotificationsOpen(false);\n                      }}\n                    >\n                      <div className=\"flex items-start\">\n                        <div className=\"flex-shrink-0 pt-0.5\">\n                          <div className=\"h-10 w-10 rounded-full bg-primary-100 flex items-center justify-center text-primary-600\">\n                            <User className=\"h-5 w-5\" />\n                          </div>\n                        </div>\n                        <div className=\"ml-3 w-0 flex-1\">\n                          <p className=\"text-sm font-medium text-gray-900\">Notification title {item}</p>\n                          <p className=\"mt-1 text-sm text-gray-500\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                          <p className=\"mt-1 text-xs text-gray-400\">2 hours ago</p>\n                        </div>\n                      </div>\n                    </a>\n                  ))}\n                </div>\n                <div className=\"border-t border-gray-200 px-4 py-2\">\n                  <a href=\"#\" className=\"text-sm font-medium text-primary-600 hover:text-primary-500\">\n                    View all notifications\n                  </a>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* User menu */}\n          <div className=\"relative\" ref={userMenuRef}>\n            <button\n              type=\"button\"\n              className=\"flex items-center space-x-2 text-sm focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500\"\n              onClick={() => setUserMenuOpen(!userMenuOpen)}\n            >\n              <div className=\"h-8 w-8 rounded-full bg-gray-200 flex items-center justify-center\">\n                <span className=\"text-xs font-medium text-gray-700\">\n                  {user?.name.split(' ').map(n => n[0]).join('')}\n                </span>\n              </div>\n              <span className=\"hidden md:flex flex-col items-start\">\n                <span className=\"text-sm font-medium text-gray-900\">{user?.name}</span>\n                <span className=\"text-xs text-gray-500\">{user?.role}</span>\n              </span>\n            </button>\n\n            {userMenuOpen && (\n              <div className=\"absolute right-0 mt-2 w-56 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                <div className=\"border-b border-gray-200 px-4 py-2\">\n                  <p className=\"text-sm font-medium text-gray-900\">{user?.name}</p>\n                  <p className=\"text-sm text-gray-500\">{user?.email}</p>\n                </div>\n                <a\n                  href=\"#\"\n                  className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setLocation('/settings/profile');\n                    setUserMenuOpen(false);\n                  }}\n                >\n                  <User className=\"mr-3 h-5 w-5 text-gray-400\" />\n                  Your Profile\n                </a>\n                <a\n                  href=\"#\"\n                  className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setLocation('/settings');\n                    setUserMenuOpen(false);\n                  }}\n                >\n                  <Settings className=\"mr-3 h-5 w-5 text-gray-400\" />\n                  Settings\n                </a>\n                <a\n                  href=\"#\"\n                  className=\"flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    // Documentation or help section\n                    setUserMenuOpen(false);\n                  }}\n                >\n                  <HelpCircle className=\"mr-3 h-5 w-5 text-gray-400\" />\n                  Help & Documentation\n                </a>\n                <button\n                  type=\"button\"\n                  className=\"flex w-full items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                  onClick={() => {\n                    logout();\n                    setUserMenuOpen(false);\n                  }}\n                >\n                  <LogOut className=\"mr-3 h-5 w-5 text-gray-400\" />\n                  Sign out\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile search panel */}\n      {searchOpen && (\n        <div className=\"absolute inset-x-0 top-16 z-10 md:hidden\">\n          <div className=\"bg-white px-4 py-3 shadow-md\">\n            <div className=\"relative\">\n              <div className=\"pointer-events-none absolute inset-y-0 left-0 pl-3 flex items-center\">\n                <Search className=\"h-5 w-5 text-gray-400\" />\n              </div>\n              <input\n                ref={searchInputRef}\n                className=\"block w-full rounded-md border border-gray-300 bg-white py-2 pl-10 pr-3 leading-5 placeholder-gray-500 focus:border-primary-500 focus:placeholder-gray-400 focus:outline-none focus:ring-1 focus:ring-primary-500 sm:text-sm\"\n                placeholder=\"Search...\"\n                type=\"search\"\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </header>\n  );\n}","size_bytes":10640},"client/src/components/layout/Layout.tsx":{"content":"import { ReactNode, useState, useEffect } from 'react';\nimport { Sidebar } from './Sidebar';\nimport { Header } from './Header';\nimport { MobileMenu } from './MobileMenu';\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nexport function Layout({ children }: LayoutProps) {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  // Handle responsive behavior\n  useEffect(() => {\n    const checkSize = () => {\n      setIsMobile(window.innerWidth < 1024);\n    };\n    \n    // Initial check\n    checkSize();\n    \n    // Add resize listener\n    window.addEventListener('resize', checkSize);\n    \n    // Clean up\n    return () => {\n      window.removeEventListener('resize', checkSize);\n    };\n  }, []);\n\n  return (\n    <div className=\"flex h-screen overflow-hidden bg-gray-100\">\n      {/* Sidebar for desktop */}\n      <div className={`hidden lg:flex lg:flex-shrink-0`}>\n        <Sidebar />\n      </div>\n      \n      {/* Mobile menu */}\n      <MobileMenu isOpen={sidebarOpen} onClose={() => setSidebarOpen(false)} />\n      \n      {/* Main content */}\n      <div className=\"flex flex-1 flex-col overflow-hidden\">\n        <Header onMenuButtonClick={() => setSidebarOpen(true)} />\n        \n        <main className=\"flex-1 overflow-y-auto p-4 md:p-6\">\n          <div className=\"mx-auto max-w-7xl\">\n            {children}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}","size_bytes":1431},"client/src/components/layout/MobileMenu.tsx":{"content":"import { Dialog, Transition } from './Transition';\nimport { Fragment } from 'react';\nimport { X } from 'lucide-react';\nimport { Sidebar } from './Sidebar';\n\ninterface MobileMenuProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport function MobileMenu({ isOpen, onClose }: MobileMenuProps) {\n  return (\n    <Transition show={isOpen}>\n      <Dialog as=\"div\" className=\"relative z-50 lg:hidden\" onClose={onClose}>\n        <Transition.Child\n          enter=\"transition-opacity ease-in-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"transition-opacity ease-in-out duration-300\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-gray-600 bg-opacity-75\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 flex z-40\">\n          <Transition.Child\n            enter=\"transition ease-in-out duration-300 transform\"\n            enterFrom=\"-translate-x-full\"\n            enterTo=\"translate-x-0\"\n            leave=\"transition ease-in-out duration-300 transform\"\n            leaveFrom=\"translate-x-0\"\n            leaveTo=\"-translate-x-full\"\n          >\n            <Dialog.Panel className=\"relative flex-1 flex flex-col max-w-xs w-full bg-white\">\n              <Transition.Child\n                enter=\"ease-in-out duration-300\"\n                enterFrom=\"opacity-0\"\n                enterTo=\"opacity-100\"\n                leave=\"ease-in-out duration-300\"\n                leaveFrom=\"opacity-100\"\n                leaveTo=\"opacity-0\"\n              >\n                <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n                  <button\n                    type=\"button\"\n                    className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n                    onClick={onClose}\n                  >\n                    <span className=\"sr-only\">Close sidebar</span>\n                    <X className=\"h-6 w-6 text-white\" />\n                  </button>\n                </div>\n              </Transition.Child>\n              \n              {/* Sidebar content */}\n              <Sidebar />\n            </Dialog.Panel>\n          </Transition.Child>\n          \n          {/* Force sidebar to shrink to fit close icon */}\n          <div className=\"flex-shrink-0 w-14\" aria-hidden=\"true\"></div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n}","size_bytes":2464},"client/src/components/layout/Sidebar.tsx":{"content":"import { useState } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { \n  Home, \n  DollarSign, \n  Users, \n  ShoppingCart, \n  HeartHandshake, \n  Factory, \n  FolderKanban, \n  Settings,\n  ChevronDown,\n  ChevronRight\n} from 'lucide-react';\nimport { useAuthStore } from '../../stores/authStore';\n\n// Main navigation items\nconst navigation = [\n  { name: 'Dashboard', href: '/', icon: Home },\n  { \n    name: 'Finance', \n    href: '/finance', \n    icon: DollarSign,\n    children: [\n      { name: 'Overview', href: '/finance' },\n      { name: 'Accounting', href: '/finance/accounting' },\n      { name: 'Budgeting', href: '/finance/budgeting' },\n      { name: 'Payroll', href: '/finance/payroll' },\n      { name: 'Reporting', href: '/finance/reports' },\n    ]\n  },\n  { \n    name: 'Human Resources', \n    href: '/human-resources', \n    icon: Users,\n    children: [\n      { name: 'Overview', href: '/human-resources' },\n      { name: 'Employees', href: '/human-resources/employees' },\n      { name: 'Recruitment', href: '/human-resources/recruitment' },\n      { name: 'Training', href: '/human-resources/training' },\n      { name: 'Performance', href: '/human-resources/performance' },\n    ]\n  },\n  { \n    name: 'Supply Chain', \n    href: '/supply-chain', \n    icon: ShoppingCart,\n    children: [\n      { name: 'Overview', href: '/supply-chain' },\n      { name: 'Procurement', href: '/supply-chain/procurement' },\n      { name: 'Inventory', href: '/supply-chain/inventory' },\n      { name: 'Vendors', href: '/supply-chain/vendors' },\n      { name: 'Logistics', href: '/supply-chain/logistics' },\n    ]\n  },\n  { \n    name: 'CRM', \n    href: '/crm', \n    icon: HeartHandshake,\n    children: [\n      { name: 'Overview', href: '/crm' },\n      { name: 'Customers', href: '/crm/customers' },\n      { name: 'Sales', href: '/crm/sales' },\n      { name: 'Marketing', href: '/crm/marketing' },\n      { name: 'Support', href: '/crm/support' },\n    ]\n  },\n  { \n    name: 'Manufacturing', \n    href: '/manufacturing', \n    icon: Factory,\n    children: [\n      { name: 'Overview', href: '/manufacturing' },\n      { name: 'Production', href: '/manufacturing/production' },\n      { name: 'Quality Control', href: '/manufacturing/quality' },\n      { name: 'Maintenance', href: '/manufacturing/maintenance' },\n      { name: 'Planning', href: '/manufacturing/planning' },\n    ]\n  },\n  { \n    name: 'Projects', \n    href: '/projects', \n    icon: FolderKanban,\n    children: [\n      { name: 'Overview', href: '/projects' },\n      { name: 'Active Projects', href: '/projects/active' },\n      { name: 'Tasks', href: '/projects/tasks' },\n      { name: 'Resources', href: '/projects/resources' },\n      { name: 'Calendar', href: '/projects/calendar' },\n    ]\n  },\n  { name: 'Settings', href: '/settings', icon: Settings },\n];\n\nexport function Sidebar() {\n  const [location] = useLocation();\n  const [openMenus, setOpenMenus] = useState<Record<string, boolean>>({});\n  const { user } = useAuthStore();\n  \n  const toggleMenu = (name: string) => {\n    setOpenMenus(prev => ({\n      ...prev,\n      [name]: !prev[name]\n    }));\n  };\n\n  // Check if a menu should be open based on the current route\n  const isMenuOpen = (item: typeof navigation[0]) => {\n    if (openMenus[item.name] !== undefined) {\n      return openMenus[item.name];\n    }\n    \n    // Auto-open if a child route is active\n    if (item.children) {\n      return item.children.some(child => location.startsWith(child.href));\n    }\n    \n    return false;\n  };\n\n  return (\n    <aside className=\"w-64 bg-white border-r border-gray-200 flex flex-col h-full\">\n      {/* Sidebar header with logo and user info */}\n      <div className=\"px-6 py-6 border-b border-gray-200\">\n        <div className=\"flex items-center\">\n          <div className=\"h-10 w-10 rounded-md bg-primary-500 flex items-center justify-center\">\n            <span className=\"text-xl font-bold text-white\">E</span>\n          </div>\n          <h1 className=\"ml-3 text-xl font-bold text-gray-900\">ERP System</h1>\n        </div>\n        <div className=\"mt-4\">\n          <p className=\"text-sm font-medium text-gray-800\">{user?.name}</p>\n          <p className=\"text-xs text-gray-500\">{user?.role}</p>\n        </div>\n      </div>\n      \n      {/* Navigation */}\n      <nav className=\"flex-1 px-2 py-4 overflow-y-auto space-y-1\">\n        {navigation.map((item) => {\n          const isOpen = isMenuOpen(item);\n          const isChildActive = item.children?.some(\n            child => location === child.href\n          );\n          \n          return (\n            <div key={item.name}>\n              {!item.children ? (\n                <Link\n                  href={item.href}\n                  className={`flex items-center px-4 py-2 text-sm font-medium rounded-md transition-colors duration-150 ${\n                    location === item.href\n                      ? 'bg-primary-50 text-primary-600'\n                      : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                  }`}\n                >\n                  <item.icon className=\"mr-3 h-5 w-5 flex-shrink-0\" />\n                  {item.name}\n                </Link>\n              ) : (\n                <>\n                  <button\n                    type=\"button\"\n                    className={`w-full flex items-center justify-between px-4 py-2 text-sm font-medium rounded-md transition-colors duration-150 ${\n                      isChildActive\n                        ? 'bg-primary-50 text-primary-600'\n                        : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                    }`}\n                    onClick={() => toggleMenu(item.name)}\n                  >\n                    <div className=\"flex items-center\">\n                      <item.icon className=\"mr-3 h-5 w-5 flex-shrink-0\" />\n                      {item.name}\n                    </div>\n                    {isOpen ? (\n                      <ChevronDown className=\"h-4 w-4\" />\n                    ) : (\n                      <ChevronRight className=\"h-4 w-4\" />\n                    )}\n                  </button>\n                  \n                  {/* Submenu items */}\n                  {isOpen && (\n                    <div className=\"mt-1 ml-8 space-y-1\">\n                      {item.children.map((child) => (\n                        <Link\n                          key={child.name}\n                          href={child.href}\n                          className={`block py-2 pr-4 pl-3 text-sm transition-colors duration-150 ${\n                            location === child.href\n                              ? 'text-primary-600 font-medium'\n                              : 'text-gray-500 hover:text-gray-900'\n                          }`}\n                        >\n                          {child.name}\n                        </Link>\n                      ))}\n                    </div>\n                  )}\n                </>\n              )}\n            </div>\n          );\n        })}\n      </nav>\n      \n      {/* Footer with version info */}\n      <div className=\"px-6 py-4 border-t border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-xs text-gray-500\">v0.1.0</span>\n          <span className=\"text-xs text-gray-500\">© 2025 ERP Inc.</span>\n        </div>\n      </div>\n    </aside>\n  );\n}","size_bytes":7321},"client/src/components/layout/Transition.tsx":{"content":"import { createContext, useContext, useEffect, useRef, useState, ElementType, ReactNode, Fragment } from 'react';\n\ninterface TransitionContextType {\n  parent: {\n    show: boolean;\n    appear: boolean;\n    isInitialRender: boolean;\n  };\n}\n\nconst TransitionContext = createContext<TransitionContextType>({\n  parent: {\n    show: true,\n    appear: false,\n    isInitialRender: false,\n  },\n});\n\nfunction useIsInitialRender() {\n  const isInitialRender = useRef(true);\n  useEffect(() => {\n    isInitialRender.current = false;\n  }, []);\n  return isInitialRender.current;\n}\n\ninterface TransitionProps {\n  as?: ElementType;\n  show?: boolean;\n  appear?: boolean;\n  unmount?: boolean;\n  children: ReactNode;\n  [key: string]: any;\n}\n\nfunction filterProps(props: Record<string, any>, Component: ElementType) {\n  if (Component === Fragment) {\n    // Only allow 'key' and 'children' for Fragment\n    const { key, children, ...rest } = props;\n    const filtered: Record<string, any> = {};\n    if (key !== undefined) filtered.key = key;\n    return filtered;\n  }\n  \n  // Filter out Replit-specific metadata props\n  const { 'data-replit-metadata': _, ...filtered } = props;\n  return filtered;\n}\n\nexport function Transition({\n  as = 'div',\n  show = true,\n  appear = false,\n  unmount = true,\n  children,\n  ...props\n}: TransitionProps) {\n  const Component = as === 'div' ? 'div' : as;\n  const isInitialRender = useIsInitialRender();\n  const [state, setState] = useState(show ? 'enter' : 'exit');\n\n  useEffect(() => {\n    if (isInitialRender) return;\n    setState(show ? 'enter' : 'exit');\n  }, [show, isInitialRender]);\n\n  if (unmount && state === 'exit') return null;\n\n  const filteredProps = filterProps(props, Component);\n\n  if (Component === Fragment) {\n    return (\n      <TransitionContext.Provider\n        value={{\n          parent: {\n            show,\n            appear,\n            isInitialRender,\n          },\n        }}\n      >\n        <Fragment>{children}</Fragment>\n      </TransitionContext.Provider>\n    );\n  }\n\n  return (\n    <TransitionContext.Provider\n      value={{\n        parent: {\n          show,\n          appear,\n          isInitialRender,\n        },\n      }}\n    >\n      <Component {...filteredProps}>{children}</Component>\n    </TransitionContext.Provider>\n  );\n}\n\ninterface TransitionChildProps {\n  as?: ElementType;\n  children: ReactNode;\n  enter?: string;\n  enterFrom?: string;\n  enterTo?: string;\n  leave?: string;\n  leaveFrom?: string;\n  leaveTo?: string;\n  appear?: boolean;\n  unmount?: boolean;\n  [key: string]: any;\n}\n\nTransition.Child = function TransitionChild({\n  as = 'div',\n  children,\n  enter = '',\n  enterFrom = '',\n  enterTo = '',\n  leave = '',\n  leaveFrom = '',\n  leaveTo = '',\n  appear = false,\n  unmount = true,\n  ...props\n}: TransitionChildProps) {\n  const Component = as;\n  const { parent } = useContext(TransitionContext);\n  const [state, setState] = useState(parent.show ? 'enter' : 'exit');\n  const [displayState, setDisplayState] = useState(state);\n  const [styles, setStyles] = useState<string>('');\n\n  const initialRef = useRef(false);\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (initialRef.current) return;\n    initialRef.current = true;\n    \n    if (!parent.show) return;\n    \n    setDisplayState('enter');\n    setStyles(`${enter} ${enterFrom}`);\n    \n    const timer = setTimeout(() => {\n      setStyles(`${enter} ${enterTo}`);\n    }, 10);\n    \n    return () => clearTimeout(timer);\n  }, [enter, enterFrom, enterTo, parent.show]);\n\n  useEffect(() => {\n    if (parent.isInitialRender) return;\n    \n    if (state === 'enter' && parent.show) {\n      setDisplayState('enter');\n      setStyles(`${enter} ${enterFrom}`);\n      \n      const timer = setTimeout(() => {\n        setStyles(`${enter} ${enterTo}`);\n      }, 10);\n      \n      return () => clearTimeout(timer);\n    }\n    \n    if (state === 'exit' || !parent.show) {\n      setDisplayState('exit');\n      setStyles(`${leave} ${leaveFrom}`);\n      \n      const timer = setTimeout(() => {\n        setStyles(`${leave} ${leaveTo}`);\n        \n        const nextTimer = setTimeout(() => {\n          setStyles('');\n        }, 300); // Match your transition duration\n        \n        return () => clearTimeout(nextTimer);\n      }, 10);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [state, parent.show, parent.isInitialRender, enter, enterFrom, enterTo, leave, leaveFrom, leaveTo]);\n\n  useEffect(() => {\n    if (parent.isInitialRender) return;\n    setState(parent.show ? 'enter' : 'exit');\n  }, [parent.show, parent.isInitialRender]);\n\n  if (unmount && displayState === 'exit' && !styles.includes(leave)) return null;\n\n  const filteredProps = filterProps(props, Component);\n\n  if (Component === Fragment) {\n    return (\n      <Fragment>\n        {typeof children === 'function' ? children({ state: displayState }) : children}\n      </Fragment>\n    );\n  }\n\n  return (\n    <Component \n      ref={transitionRef} \n      className={styles} \n      {...filteredProps}\n    >\n      {typeof children === 'function' ? children({ state: displayState }) : children}\n    </Component>\n  );\n};\n\ninterface DialogProps {\n  as?: ElementType;\n  open?: boolean;\n  onClose: () => void;\n  children?: ReactNode;\n  [key: string]: any;\n}\n\nexport function Dialog({\n  as = 'div',\n  open = true,\n  onClose,\n  children,\n  ...props\n}: DialogProps) {\n  const Component = as;\n  \n  useEffect(() => {\n    if (open) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = '';\n    }\n    \n    return () => {\n      document.body.style.overflow = '';\n    };\n  }, [open]);\n\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    if (open) {\n      document.addEventListener('keydown', handleEscape);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n    };\n  }, [open, onClose]);\n\n  const filteredProps = filterProps(props, Component);\n\n  if (Component === Fragment) {\n    return <Fragment>{children}</Fragment>;\n  }\n\n  return (\n    <Component {...filteredProps} onClick={(e: React.MouseEvent) => {\n      if (e.target === e.currentTarget) {\n        onClose();\n      }\n    }}>\n      {children}\n    </Component>\n  );\n}\n\nDialog.Panel = function DialogPanel({ \n  as = 'div', \n  children, \n  ...props \n}: { \n  as?: ElementType; \n  children: ReactNode; \n  [key: string]: any; \n}) {\n  const Component = as;\n  const filteredProps = filterProps(props, Component);\n  \n  if (Component === Fragment) {\n    return <Fragment>{children}</Fragment>;\n  }\n  \n  return <Component {...filteredProps}>{children}</Component>;\n};","size_bytes":6656},"client/src/components/construction/ClientPortal/index.tsx":{"content":"import { useState } from 'react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\nimport { FileText, Download, MessageSquare, Calendar, Clock, AlertTriangle } from 'lucide-react';\n\ninterface ProjectMilestone {\n  id: string;\n  title: string;\n  dueDate: string;\n  status: 'Completed' | 'In Progress' | 'Pending' | 'Delayed';\n  progress: number;\n}\n\ninterface Document {\n  id: string;\n  name: string;\n  type: string;\n  date: string;\n  size: string;\n  status: 'Approved' | 'Pending' | 'Rejected';\n}\n\ninterface DPRSummary {\n  id: string;\n  date: string;\n  weather: string;\n  progress: number;\n  activities: string[];\n  laborCount: number;\n  issues?: string;\n}\n\nexport function ClientPortal() {\n  const [activeTab, setActiveTab] = useState('overview');\n\n  const milestones: ProjectMilestone[] = [\n    {\n      id: '1',\n      title: 'Foundation Work',\n      dueDate: '2025-04-15',\n      status: 'Completed',\n      progress: 100\n    },\n    {\n      id: '2',\n      title: 'Structural Work',\n      dueDate: '2025-06-30',\n      status: 'In Progress',\n      progress: 45\n    },\n    {\n      id: '3',\n      title: 'MEP Installation',\n      dueDate: '2025-08-15',\n      status: 'Pending',\n      progress: 0\n    }\n  ];\n\n  const documents: Document[] = [\n    {\n      id: '1',\n      name: 'Construction Drawings R2',\n      type: 'PDF',\n      date: '2025-03-15',\n      size: '25 MB',\n      status: 'Approved'\n    },\n    {\n      id: '2',\n      name: 'Material Specifications',\n      type: 'PDF',\n      date: '2025-03-10',\n      size: '12 MB',\n      status: 'Approved'\n    }\n  ];\n\n  const dprSummaries: DPRSummary[] = [\n    {\n      id: '1',\n      date: '2025-03-20',\n      weather: 'Sunny',\n      progress: 85,\n      activities: [\n        'Column reinforcement work',\n        'Slab shuttering',\n        'Material testing'\n      ],\n      laborCount: 45\n    },\n    {\n      id: '2',\n      date: '2025-03-19',\n      weather: 'Cloudy',\n      progress: 75,\n      activities: [\n        'Foundation waterproofing',\n        'Backfilling work'\n      ],\n      laborCount: 38,\n      issues: 'Minor delay due to material delivery'\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <Calendar className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Project Progress</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">45%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <Clock className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Time Elapsed</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">120 Days</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-success-100 rounded-full flex items-center justify-center\">\n              <FileText className=\"h-6 w-6 text-success-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Approved Docs</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">24</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <AlertTriangle className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Open Issues</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">3</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8 px-6\" aria-label=\"Tabs\">\n            {['overview', 'documents', 'progress', 'issues'].map((tab) => (\n              <button\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n                className={`\n                  whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\n                  ${activeTab === tab\n                    ? 'border-primary-500 text-primary-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\n                `}\n              >\n                {tab.charAt(0).toUpperCase() + tab.slice(1)}\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        <div className=\"p-6\">\n          {activeTab === 'overview' && (\n            <div className=\"space-y-6\">\n              {/* Project Milestones */}\n              <DashboardCard title=\"Project Milestones\">\n                <div className=\"space-y-4\">\n                  {milestones.map((milestone) => (\n                    <div key={milestone.id} className=\"bg-gray-50 p-4 rounded-lg\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"text-sm font-medium text-gray-900\">{milestone.title}</h4>\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                          milestone.status === 'Completed'\n                            ? 'bg-green-100 text-green-800'\n                            : milestone.status === 'In Progress'\n                            ? 'bg-blue-100 text-blue-800'\n                            : milestone.status === 'Delayed'\n                            ? 'bg-red-100 text-red-800'\n                            : 'bg-gray-100 text-gray-800'\n                        }`}>\n                          {milestone.status}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center justify-between text-sm\">\n                        <span className=\"text-gray-500\">Due: {milestone.dueDate}</span>\n                        <span className=\"text-gray-900\">{milestone.progress}%</span>\n                      </div>\n                      <div className=\"mt-2 w-full bg-gray-200 rounded-full h-2\">\n                        <div\n                          className=\"bg-primary-600 h-2 rounded-full\"\n                          style={{ width: `${milestone.progress}%` }}\n                        ></div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </DashboardCard>\n\n              {/* Daily Progress Reports */}\n              <DashboardCard title=\"Recent Progress Reports\">\n                <div className=\"space-y-4\">\n                  {dprSummaries.map((dpr) => (\n                    <div key={dpr.id} className=\"bg-gray-50 p-4 rounded-lg\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div>\n                          <h4 className=\"text-sm font-medium text-gray-900\">Date: {dpr.date}</h4>\n                          <p className=\"text-sm text-gray-500\">Weather: {dpr.weather}</p>\n                        </div>\n                        <span className=\"text-sm font-medium text-gray-900\">{dpr.progress}% Complete</span>\n                      </div>\n                      <div className=\"mt-2\">\n                        <h5 className=\"text-sm font-medium text-gray-900\">Activities:</h5>\n                        <ul className=\"mt-1 space-y-1\">\n                          {dpr.activities.map((activity, index) => (\n                            <li key={index} className=\"text-sm text-gray-500\">\n                              • {activity}\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                      <div className=\"mt-2 flex items-center justify-between text-sm\">\n                        <span className=\"text-gray-500\">Labor Count: {dpr.laborCount}</span>\n                        {dpr.issues && (\n                          <span className=\"text-warning-600\">\n                            <AlertTriangle className=\"h-4 w-4 inline mr-1\" />\n                            {dpr.issues}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </DashboardCard>\n            </div>\n          )}\n\n          {activeTab === 'documents' && (\n            <div className=\"space-y-6\">\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Document\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Type\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Date\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Size\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Status\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Actions\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {documents.map((doc) => (\n                      <tr key={doc.id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                          {doc.name}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {doc.type}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {doc.date}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {doc.size}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                            doc.status === 'Approved'\n                              ? 'bg-green-100 text-green-800'\n                              : doc.status === 'Rejected'\n                              ? 'bg-red-100 text-red-800'\n                              : 'bg-yellow-100 text-yellow-800'\n                          }`}>\n                            {doc.status}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                          <button className=\"text-primary-600 hover:text-primary-900\">\n                            <Download className=\"h-5 w-5\" />\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'issues' && (\n            <div className=\"space-y-6\">\n              {/* Issue Reporting Form */}\n              <DashboardCard title=\"Report an Issue\">\n                <div className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">Issue Type</label>\n                      <select className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\">\n                        <option>Quality Concern</option>\n                        <option>Schedule Delay</option>\n                        <option>Safety Issue</option>\n                        <option>Other</option>\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">Priority</label>\n                      <select className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\">\n                        <option>Low</option>\n                        <option>Medium</option>\n                        <option>High</option>\n                        <option>Critical</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n                    <textarea\n                      rows={4}\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                      placeholder=\"Describe the issue in detail...\"\n                    ></textarea>\n                  </div>\n\n                  <div className=\"flex justify-end\">\n                    <button className=\"btn btn-primary\">\n                      <MessageSquare className=\"h-4 w-4 mr-2\" />\n                      Submit Issue\n                    </button>\n                  </div>\n                </div>\n              </DashboardCard>\n\n              {/* Issue History */}\n              <DashboardCard title=\"Issue History\">\n                <div className=\"space-y-4\">\n                  {[\n                    {\n                      id: 1,\n                      type: 'Quality Concern',\n                      description: 'Concrete finish quality below specification',\n                      status: 'Resolved',\n                      date: '2025-03-15',\n                      priority: 'High'\n                    },\n                    {\n                      id: 2,\n                      type: 'Schedule Delay',\n                      description: 'Material delivery delay affecting timeline',\n                      status: 'In Progress',\n                      date: '2025-03-14',\n                      priority: 'Medium'\n                    }\n                  ].map((issue) => (\n                    <div key={issue.id} className=\"bg-gray-50 p-4 rounded-lg\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"text-sm font-medium text-gray-900\">{issue.type}</h4>\n                        <div className=\"flex items-center space-x-2\">\n                          <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                            issue.priority === 'High'\n                              ? 'bg-red-100 text-red-800'\n                              : 'bg-yellow-100 text-yellow-800'\n                          }`}>\n                            {issue.priority}\n                          </span>\n                          <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                            issue.status === 'Resolved'\n                              ? 'bg-green-100 text-green-800'\n                              : 'bg-blue-100 text-blue-800'\n                          }`}>\n                            {issue.status}\n                          </span>\n                        </div>\n                      </div>\n                      <p className=\"text-sm text-gray-500\">{issue.description}</p>\n                      <div className=\"mt-2 text-xs text-gray-400\">\n                        Reported on: {issue.date}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </DashboardCard>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":16995},"client/src/components/construction/DailyProgress/index.tsx":{"content":"import { useState } from 'react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\nimport { Camera, Upload, Clock, Users, Package, AlertTriangle } from 'lucide-react';\nimport { useDropzone } from 'react-dropzone';\nimport Webcam from 'react-webcam';\n\ninterface DPREntry {\n  id: string;\n  date: string;\n  site: string;\n  activity: string;\n  progress: number;\n  labor: {\n    skilled: number;\n    unskilled: number;\n  };\n  materials: {\n    item: string;\n    quantity: number;\n    unit: string;\n  }[];\n  weather: string;\n  challenges: string;\n  status: 'Draft' | 'Submitted' | 'Approved';\n}\n\nexport function DailyProgress() {\n  const [showCamera, setShowCamera] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  \n  const { getRootProps, getInputProps } = useDropzone({\n    accept: {\n      'image/*': ['.png', '.jpg', '.jpeg']\n    },\n    maxFiles: 5,\n    onDrop: (acceptedFiles) => {\n      console.log('Files uploaded:', acceptedFiles);\n    }\n  });\n\n  const dprEntries: DPREntry[] = [\n    {\n      id: '1',\n      date: '2025-03-20',\n      site: 'Project Site A',\n      activity: 'Foundation Work',\n      progress: 75,\n      labor: {\n        skilled: 12,\n        unskilled: 25\n      },\n      materials: [\n        { item: 'Cement', quantity: 85, unit: 'Bags' },\n        { item: 'Sand', quantity: 12, unit: 'Cu.M' }\n      ],\n      weather: 'Sunny',\n      challenges: 'Minor equipment breakdown in the morning',\n      status: 'Submitted'\n    },\n    {\n      id: '2',\n      date: '2025-03-19',\n      site: 'Project Site B',\n      activity: 'Column Casting',\n      progress: 60,\n      labor: {\n        skilled: 8,\n        unskilled: 15\n      },\n      materials: [\n        { item: 'Steel', quantity: 2.5, unit: 'MT' },\n        { item: 'Concrete', quantity: 45, unit: 'Cu.M' }\n      ],\n      weather: 'Cloudy',\n      challenges: 'None',\n      status: 'Approved'\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <Clock className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Today's Progress</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">85%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <Users className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Labor Present</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">45</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <Package className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Material Usage</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">12 Items</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <AlertTriangle className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Issues Reported</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">2</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* DPR Form */}\n      <DashboardCard title=\"Daily Progress Report\">\n        <div className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Date</label>\n              <input\n                type=\"date\"\n                value={selectedDate}\n                onChange={(e) => setSelectedDate(e.target.value)}\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Site</label>\n              <select className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\">\n                <option>Project Site A</option>\n                <option>Project Site B</option>\n              </select>\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Activities</label>\n            <div className=\"mt-1 space-y-2\">\n              <div className=\"flex items-center space-x-4\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Activity description\"\n                  className=\"flex-1 rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Progress %\"\n                  className=\"w-24 rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Labor Count</label>\n              <div className=\"mt-1 grid grid-cols-2 gap-4\">\n                <div>\n                  <input\n                    type=\"number\"\n                    placeholder=\"Skilled\"\n                    className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                  />\n                </div>\n                <div>\n                  <input\n                    type=\"number\"\n                    placeholder=\"Unskilled\"\n                    className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Weather Conditions</label>\n              <select className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\">\n                <option>Sunny</option>\n                <option>Cloudy</option>\n                <option>Rainy</option>\n                <option>Windy</option>\n              </select>\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Material Usage</label>\n            <div className=\"mt-1 space-y-2\">\n              <div className=\"flex items-center space-x-4\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Material\"\n                  className=\"flex-1 rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Quantity\"\n                  className=\"w-24 rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                />\n                <select className=\"w-24 rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\">\n                  <option>Units</option>\n                  <option>Bags</option>\n                  <option>Cu.M</option>\n                  <option>MT</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Site Photos</label>\n            <div className=\"mt-1 flex items-center space-x-4\">\n              <div\n                {...getRootProps()}\n                className=\"flex-1 border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-primary-500 transition-colors cursor-pointer\"\n              >\n                <input {...getInputProps()} />\n                <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\n                <p className=\"mt-1 text-sm text-gray-500\">\n                  Drag & drop photos here, or click to select\n                </p>\n              </div>\n              <button\n                onClick={() => setShowCamera(!showCamera)}\n                className=\"flex items-center justify-center h-12 w-12 rounded-full bg-primary-100 text-primary-600 hover:bg-primary-200\"\n              >\n                <Camera className=\"h-6 w-6\" />\n              </button>\n            </div>\n            {showCamera && (\n              <div className=\"mt-4\">\n                <Webcam\n                  audio={false}\n                  className=\"w-full rounded-lg\"\n                  screenshotFormat=\"image/jpeg\"\n                />\n                <button className=\"mt-2 btn btn-primary\">\n                  Capture Photo\n                </button>\n              </div>\n            )}\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Challenges & Remarks</label>\n            <textarea\n              rows={3}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n              placeholder=\"Describe any challenges or important observations...\"\n            ></textarea>\n          </div>\n\n          <div className=\"flex justify-end space-x-4\">\n            <button className=\"btn btn-outline\">Save as Draft</button>\n            <button className=\"btn btn-primary\">Submit Report</button>\n          </div>\n        </div>\n      </DashboardCard>\n\n      {/* Recent DPR Entries */}\n      <DashboardCard title=\"Recent Reports\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Site\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Activity\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Progress\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Labor\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {dprEntries.map((entry) => (\n                <tr key={entry.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                    {entry.date}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {entry.site}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {entry.activity}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-center\">\n                    <div className=\"flex items-center justify-center\">\n                      <div className=\"w-16 bg-gray-200 rounded-full h-2\">\n                        <div\n                          className=\"bg-primary-600 h-2 rounded-full\"\n                          style={{ width: `${entry.progress}%` }}\n                        ></div>\n                      </div>\n                      <span className=\"ml-2 text-sm text-gray-500\">{entry.progress}%</span>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-center text-sm text-gray-500\">\n                    {entry.labor.skilled + entry.labor.unskilled}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      entry.status === 'Approved'\n                        ? 'bg-green-100 text-green-800'\n                        : entry.status === 'Submitted'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-gray-100 text-gray-800'\n                    }`}>\n                      {entry.status}\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n    </div>\n  );\n}","size_bytes":13822},"client/src/components/construction/DrawingManagement/index.tsx":{"content":"import { useState } from 'react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\nimport { FileText, Upload, Download, History, Eye, CheckCircle, XCircle } from 'lucide-react';\nimport { useDropzone } from 'react-dropzone';\n\ninterface Drawing {\n  id: string;\n  number: string;\n  title: string;\n  revision: string;\n  category: string;\n  status: 'Pending Review' | 'Approved' | 'Rejected';\n  uploadedBy: string;\n  uploadDate: string;\n  reviewedBy?: string;\n  reviewDate?: string;\n  comments?: string;\n}\n\ninterface DrawingRevision {\n  id: string;\n  version: string;\n  date: string;\n  status: string;\n  changes: string;\n}\n\nexport function DrawingManagement() {\n  const [activeTab, setActiveTab] = useState('current');\n  const [selectedDrawing, setSelectedDrawing] = useState<string | null>(null);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: {\n      'application/pdf': ['.pdf'],\n      'image/*': ['.dwg', '.dxf', '.png', '.jpg']\n    },\n    maxFiles: 5,\n    onDrop: (acceptedFiles) => {\n      console.log('Files uploaded:', acceptedFiles);\n    }\n  });\n\n  const drawings: Drawing[] = [\n    {\n      id: '1',\n      number: 'ARCH-001',\n      title: 'Ground Floor Plan',\n      revision: 'R2',\n      category: 'Architectural',\n      status: 'Approved',\n      uploadedBy: 'John Smith',\n      uploadDate: '2025-03-15',\n      reviewedBy: 'Sarah Johnson',\n      reviewDate: '2025-03-16',\n      comments: 'Approved with minor comments'\n    },\n    {\n      id: '2',\n      number: 'STR-001',\n      title: 'Foundation Layout',\n      revision: 'R1',\n      category: 'Structural',\n      status: 'Pending Review',\n      uploadedBy: 'Mike Wilson',\n      uploadDate: '2025-03-18'\n    }\n  ];\n\n  const revisions: DrawingRevision[] = [\n    {\n      id: '1',\n      version: 'R0',\n      date: '2025-02-01',\n      status: 'Superseded',\n      changes: 'Initial Issue'\n    },\n    {\n      id: '2',\n      version: 'R1',\n      date: '2025-02-15',\n      status: 'Superseded',\n      changes: 'Updated as per client comments'\n    },\n    {\n      id: '3',\n      version: 'R2',\n      date: '2025-03-01',\n      status: 'Current',\n      changes: 'Modified column locations'\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <FileText className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Total Drawings</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">156</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Eye className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Pending Review</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">8</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-success-100 rounded-full flex items-center justify-center\">\n              <CheckCircle className=\"h-6 w-6 text-success-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Approved</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">142</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-error-100 rounded-full flex items-center justify-center\">\n              <XCircle className=\"h-6 w-6 text-error-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Rejected</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">6</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Drawing Upload */}\n      <DashboardCard title=\"Upload Drawings\">\n        <div className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Drawing Number</label>\n              <input\n                type=\"text\"\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                placeholder=\"e.g., ARCH-001\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Title</label>\n              <input\n                type=\"text\"\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                placeholder=\"Drawing title\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Category</label>\n              <select className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\">\n                <option>Architectural</option>\n                <option>Structural</option>\n                <option>MEP</option>\n                <option>Interior</option>\n                <option>Site Plan</option>\n              </select>\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Drawing Files</label>\n            <div\n              {...getRootProps()}\n              className=\"mt-1 border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-primary-500 transition-colors cursor-pointer\"\n            >\n              <input {...getInputProps()} />\n              <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Drag & drop drawing files here, or click to select\n              </p>\n              <p className=\"text-xs text-gray-500\">\n                Supported formats: PDF, DWG, DXF, PNG, JPG\n              </p>\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Revision Notes</label>\n            <textarea\n              rows={3}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n              placeholder=\"Describe the changes in this revision...\"\n            ></textarea>\n          </div>\n\n          <div className=\"flex justify-end space-x-4\">\n            <button className=\"btn btn-outline\">Cancel</button>\n            <button className=\"btn btn-primary\">Upload Drawing</button>\n          </div>\n        </div>\n      </DashboardCard>\n\n      {/* Drawing List */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8 px-6\" aria-label=\"Tabs\">\n            {['current', 'history', 'review'].map((tab) => (\n              <button\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n                className={`\n                  whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\n                  ${activeTab === tab\n                    ? 'border-primary-500 text-primary-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\n                `}\n              >\n                {tab.charAt(0).toUpperCase() + tab.slice(1)}\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        <div className=\"p-6\">\n          {activeTab === 'current' && (\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead>\n                  <tr>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Drawing\n                    </th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Category\n                    </th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Revision\n                    </th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Status\n                    </th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Upload Info\n                    </th>\n                    <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Actions\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {drawings.map((drawing) => (\n                    <tr key={drawing.id}>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm font-medium text-gray-900\">{drawing.number}</div>\n                        <div className=\"text-sm text-gray-500\">{drawing.title}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {drawing.category}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {drawing.revision}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                          drawing.status === 'Approved'\n                            ? 'bg-green-100 text-green-800'\n                            : drawing.status === 'Rejected'\n                            ? 'bg-red-100 text-red-800'\n                            : 'bg-yellow-100 text-yellow-800'\n                        }`}>\n                          {drawing.status}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-500\">\n                          <div>By: {drawing.uploadedBy}</div>\n                          <div>Date: {drawing.uploadDate}</div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                        <button className=\"text-primary-600 hover:text-primary-900 mr-4\">\n                          <Eye className=\"h-5 w-5\" />\n                        </button>\n                        <button className=\"text-primary-600 hover:text-primary-900 mr-4\">\n                          <Download className=\"h-5 w-5\" />\n                        </button>\n                        <button className=\"text-primary-600 hover:text-primary-900\">\n                          <History className=\"h-5 w-5\" />\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n\n          {activeTab === 'history' && (\n            <div className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Drawing Number</label>\n                  <select\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                    value={selectedDrawing || ''}\n                    onChange={(e) => setSelectedDrawing(e.target.value)}\n                  >\n                    <option value=\"\">Select Drawing</option>\n                    {drawings.map(drawing => (\n                      <option key={drawing.id} value={drawing.id}>\n                        {drawing.number} - {drawing.title}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              {selectedDrawing && (\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead>\n                      <tr>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Version\n                        </th>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Date\n                        </th>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Status\n                        </th>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Changes\n                        </th>\n                        <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Actions\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {revisions.map((revision) => (\n                        <tr key={revision.id}>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                            {revision.version}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {revision.date}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                              revision.status === 'Current'\n                                ? 'bg-green-100 text-green-800'\n                                : 'bg-gray-100 text-gray-800'\n                            }`}>\n                              {revision.status}\n                            </span>\n                          </td>\n                          <td className=\"px-6 py-4 text-sm text-gray-500\">\n                            {revision.changes}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <button className=\"text-primary-600 hover:text-primary-900\">\n                              <Download className=\"h-5 w-5\" />\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'review' && (\n            <div className=\"space-y-6\">\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Drawing\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Submitted By\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Submission Date\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Actions\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {drawings\n                      .filter(drawing => drawing.status === 'Pending Review')\n                      .map((drawing) => (\n                        <tr key={drawing.id}>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <div className=\"text-sm font-medium text-gray-900\">{drawing.number}</div>\n                            <div className=\"text-sm text-gray-500\">{drawing.title}</div>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {drawing.uploadedBy}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {drawing.uploadDate}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <button className=\"text-primary-600 hover:text-primary-900 mr-4\">\n                              <Eye className=\"h-5 w-5\" />\n                            </button>\n                            <button className=\"text-success-600 hover:text-success-900 mr-4\">\n                              <CheckCircle className=\"h-5 w-5\" />\n                            </button>\n                            <button className=\"text-error-600 hover:text-error-900\">\n                              <XCircle className=\"h-5 w-5\" />\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":18795},"client/src/components/construction/Estimation/index.tsx":{"content":"import { useState } from 'react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\nimport { Calculator, FileText, History, CheckSquare, Download, Upload } from 'lucide-react';\n\ninterface BOQItem {\n  id: string;\n  description: string;\n  unit: string;\n  quantity: number;\n  rate: number;\n  amount: number;\n}\n\ninterface EstimateVersion {\n  id: string;\n  version: string;\n  date: string;\n  status: 'Draft' | 'Pending' | 'Approved' | 'Rejected';\n  totalAmount: number;\n}\n\nexport function Estimation() {\n  const [activeTab, setActiveTab] = useState('boq');\n  const [selectedVersion, setSelectedVersion] = useState<string | null>(null);\n\n  const boqItems: BOQItem[] = [\n    {\n      id: '1',\n      description: 'Excavation in foundation',\n      unit: 'Cu.M',\n      quantity: 450,\n      rate: 125,\n      amount: 56250\n    },\n    {\n      id: '2',\n      description: 'PCC in foundation',\n      unit: 'Cu.M',\n      quantity: 75,\n      rate: 6500,\n      amount: 487500\n    },\n    {\n      id: '3',\n      description: 'RCC M25 in foundation',\n      unit: 'Cu.M',\n      quantity: 225,\n      rate: 7800,\n      amount: 1755000\n    }\n  ];\n\n  const versions: EstimateVersion[] = [\n    {\n      id: '1',\n      version: 'R0',\n      date: '2025-03-15',\n      status: 'Approved',\n      totalAmount: 2298750\n    },\n    {\n      id: '2',\n      version: 'R1',\n      date: '2025-03-18',\n      status: 'Pending',\n      totalAmount: 2345000\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <Calculator className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Total Estimate</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">₹2.34M</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <History className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Versions</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">2</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-success-100 rounded-full flex items-center justify-center\">\n              <CheckSquare className=\"h-6 w-6 text-success-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Approved Items</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">85%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <FileText className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Pending Review</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">3</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8 px-6\" aria-label=\"Tabs\">\n            {['boq', 'rate-analysis', 'versions'].map((tab) => (\n              <button\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n                className={`\n                  whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\n                  ${activeTab === tab\n                    ? 'border-primary-500 text-primary-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\n                `}\n              >\n                {tab.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        <div className=\"p-6\">\n          {activeTab === 'boq' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex justify-between items-center\">\n                <div className=\"flex space-x-4\">\n                  <button className=\"btn btn-outline\">\n                    <Upload className=\"h-4 w-4 mr-2\" />\n                    Import BOQ\n                  </button>\n                  <button className=\"btn btn-outline\">\n                    <Download className=\"h-4 w-4 mr-2\" />\n                    Export BOQ\n                  </button>\n                </div>\n                <button className=\"btn btn-primary\">Add Item</button>\n              </div>\n\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Description\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Unit\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Quantity\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Rate (₹)\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Amount (₹)\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {boqItems.map((item) => (\n                      <tr key={item.id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {item.description}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {item.unit}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                          {item.quantity.toLocaleString()}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                          {item.rate.toLocaleString()}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                          {item.amount.toLocaleString()}\n                        </td>\n                      </tr>\n                    ))}\n                    <tr className=\"bg-gray-50\">\n                      <td colSpan={4} className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 text-right\">\n                        Total\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 text-right\">\n                        ₹{boqItems.reduce((sum, item) => sum + item.amount, 0).toLocaleString()}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'versions' && (\n            <div className=\"space-y-6\">\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead>\n                    <tr>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Version\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Date\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Amount (₹)\n                      </th>\n                      <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Status\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {versions.map((version) => (\n                      <tr key={version.id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {version.version}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                          {version.date}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                          {version.totalAmount.toLocaleString()}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                            version.status === 'Approved'\n                              ? 'bg-green-100 text-green-800'\n                              : version.status === 'Pending'\n                              ? 'bg-yellow-100 text-yellow-800'\n                              : version.status === 'Rejected'\n                              ? 'bg-red-100 text-red-800'\n                              : 'bg-gray-100 text-gray-800'\n                          }`}>\n                            {version.status}\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":10911},"client/src/components/construction/Inventory/index.tsx":{"content":"import { useState } from 'react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\nimport { Package, AlertTriangle, TrendingUp, Truck, Search, Filter, Plus } from 'lucide-react';\n\ninterface InventoryItem {\n  id: string;\n  code: string;\n  name: string;\n  category: string;\n  unit: string;\n  quantity: number;\n  reorderLevel: number;\n  location: string;\n  lastUpdated: string;\n  status: 'In Stock' | 'Low Stock' | 'Out of Stock';\n}\n\ninterface StockMovement {\n  id: string;\n  date: string;\n  type: 'Receipt' | 'Issue' | 'Return';\n  item: string;\n  quantity: number;\n  reference: string;\n  location: string;\n  handler: string;\n}\n\nexport function Inventory() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [selectedStatus, setSelectedStatus] = useState('All');\n\n  const inventory: InventoryItem[] = [\n    {\n      id: '1',\n      code: 'CEM-001',\n      name: 'Portland Cement',\n      category: 'Construction Materials',\n      unit: 'Bags',\n      quantity: 250,\n      reorderLevel: 100,\n      location: 'Warehouse A',\n      lastUpdated: '2025-03-15',\n      status: 'In Stock'\n    },\n    {\n      id: '2',\n      code: 'STL-001',\n      name: 'Steel Reinforcement 12mm',\n      category: 'Steel',\n      unit: 'MT',\n      quantity: 15,\n      reorderLevel: 20,\n      location: 'Yard B',\n      lastUpdated: '2025-03-14',\n      status: 'Low Stock'\n    }\n  ];\n\n  const movements: StockMovement[] = [\n    {\n      id: '1',\n      date: '2025-03-15',\n      type: 'Receipt',\n      item: 'Portland Cement',\n      quantity: 500,\n      reference: 'PO-2025-001',\n      location: 'Warehouse A',\n      handler: 'John Smith'\n    },\n    {\n      id: '2',\n      date: '2025-03-14',\n      type: 'Issue',\n      item: 'Steel Reinforcement 12mm',\n      quantity: 5,\n      reference: 'REQ-2025-045',\n      location: 'Yard B',\n      handler: 'Mike Wilson'\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <Package className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Total Items</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">1,234</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <AlertTriangle className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Low Stock Items</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">12</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-success-100 rounded-full flex items-center justify-center\">\n              <TrendingUp className=\"h-6 w-6 text-success-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Stock Value</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">₹2.5M</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <Truck className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Pending Orders</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">8</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Inventory Management */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"p-6\">\n          <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"relative rounded-md shadow-sm\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Search className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  type=\"text\"\n                  className=\"focus:ring-primary-500 focus:border-primary-500 block w-full pl-10 sm:text-sm border-gray-300 rounded-md\"\n                  placeholder=\"Search inventory...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"flex flex-wrap items-center gap-4\">\n              <select\n                value={selectedCategory}\n                onChange={(e) => setSelectedCategory(e.target.value)}\n                className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option>All Categories</option>\n                <option>Construction Materials</option>\n                <option>Steel</option>\n                <option>Tools</option>\n                <option>Equipment</option>\n              </select>\n              \n              <select\n                value={selectedStatus}\n                onChange={(e) => setSelectedStatus(e.target.value)}\n                className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option>All Status</option>\n                <option>In Stock</option>\n                <option>Low Stock</option>\n                <option>Out of Stock</option>\n              </select>\n              \n              <button className=\"btn btn-outline\">\n                <Filter className=\"h-4 w-4 mr-2\" />\n                More Filters\n              </button>\n              \n              <button className=\"btn btn-primary\">\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Add Item\n              </button>\n            </div>\n          </div>\n\n          <div className=\"mt-8 overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead>\n                <tr>\n                  <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Item Details\n                  </th>\n                  <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Category\n                  </th>\n                  <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Quantity\n                  </th>\n                  <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Reorder Level\n                  </th>\n                  <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Location\n                  </th>\n                  <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Last Updated\n                  </th>\n                  <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {inventory.map((item) => (\n                  <tr key={item.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-gray-900\">{item.name}</div>\n                      <div className=\"text-sm text-gray-500\">{item.code}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {item.category}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right\">\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {item.quantity.toLocaleString()} {item.unit}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right\">\n                      <div className=\"text-sm text-gray-500\">\n                        {item.reorderLevel.toLocaleString()} {item.unit}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {item.location}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {item.lastUpdated}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                        item.status === 'In Stock'\n                          ? 'bg-green-100 text-green-800'\n                          : item.status === 'Low Stock'\n                          ? 'bg-yellow-100 text-yellow-800'\n                          : 'bg-red-100 text-red-800'\n                      }`}>\n                        {item.status}\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      {/* Stock Movements */}\n      <DashboardCard title=\"Recent Stock Movements\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Type\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Item\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Quantity\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Reference\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Location\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Handler\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {movements.map((movement) => (\n                <tr key={movement.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                    {movement.date}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      movement.type === 'Receipt'\n                        ? 'bg-green-100 text-green-800'\n                        : movement.type === 'Issue'\n                        ? 'bg-red-100 text-red-800'\n                        : 'bg-yellow-100 text-yellow-800'\n                    }`}>\n                      {movement.type}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {movement.item}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm text-gray-900\">\n                    {movement.quantity.toLocaleString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {movement.reference}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {movement.location}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {movement.handler}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n    </div>\n  );\n}","size_bytes":13503},"client/src/components/construction/QualityControl/index.tsx":{"content":"import { useState } from 'react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\nimport { CheckSquare, AlertTriangle, FileText, Camera, Upload } from 'lucide-react';\nimport { useDropzone } from 'react-dropzone';\nimport SignatureCanvas from 'react-signature-canvas';\n\ninterface QCTest {\n  id: string;\n  date: string;\n  type: string;\n  location: string;\n  contractor: string;\n  parameters: {\n    name: string;\n    required: string;\n    actual: string;\n    status: 'Pass' | 'Fail';\n  }[];\n  status: 'Pending' | 'Approved' | 'Rejected';\n  remarks: string;\n}\n\nexport function QualityControl() {\n  const [showSignaturePad, setShowSignaturePad] = useState(false);\n  const [signatureRef, setSignatureRef] = useState<SignatureCanvas | null>(null);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: {\n      'image/*': ['.png', '.jpg', '.jpeg'],\n      'application/pdf': ['.pdf']\n    },\n    maxFiles: 5,\n    onDrop: (acceptedFiles) => {\n      console.log('Files uploaded:', acceptedFiles);\n    }\n  });\n\n  const tests: QCTest[] = [\n    {\n      id: '1',\n      date: '2025-03-20',\n      type: 'Concrete Cube Test',\n      location: 'Block A - Foundation',\n      contractor: 'ABC Contractors',\n      parameters: [\n        { name: 'Compressive Strength', required: '25 N/mm²', actual: '27.5 N/mm²', status: 'Pass' },\n        { name: 'Slump', required: '100mm', actual: '95mm', status: 'Pass' }\n      ],\n      status: 'Approved',\n      remarks: 'All parameters within acceptable limits'\n    },\n    {\n      id: '2',\n      date: '2025-03-19',\n      type: 'Steel Tensile Test',\n      location: 'Block B - Columns',\n      contractor: 'XYZ Steel',\n      parameters: [\n        { name: 'Yield Strength', required: '415 MPa', actual: '425 MPa', status: 'Pass' },\n        { name: 'Ultimate Strength', required: '485 MPa', actual: '460 MPa', status: 'Fail' }\n      ],\n      status: 'Rejected',\n      remarks: 'Ultimate strength below specification'\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <CheckSquare className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Tests Completed</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">45</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <AlertTriangle className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Pending Tests</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">8</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-success-100 rounded-full flex items-center justify-center\">\n              <CheckSquare className=\"h-6 w-6 text-success-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Pass Rate</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">92%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-error-100 rounded-full flex items-center justify-center\">\n              <AlertTriangle className=\"h-6 w-6 text-error-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Failed Tests</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">3</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* QC Test Form */}\n      <DashboardCard title=\"Quality Control Test\">\n        <div className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Test Type</label>\n              <select className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\">\n                <option>Concrete Cube Test</option>\n                <option>Steel Tensile Test</option>\n                <option>Soil Compaction Test</option>\n                <option>Brick Strength Test</option>\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Location</label>\n              <input\n                type=\"text\"\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                placeholder=\"e.g., Block A - Foundation\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700\">Contractor</label>\n              <input\n                type=\"text\"\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                placeholder=\"Contractor name\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Test Parameters</label>\n            <div className=\"mt-1 space-y-2\">\n              <div className=\"grid grid-cols-4 gap-4\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Parameter\"\n                  className=\"rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Required Value\"\n                  className=\"rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Actual Value\"\n                  className=\"rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                />\n                <select className=\"rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\">\n                  <option>Pass</option>\n                  <option>Fail</option>\n                </select>\n              </div>\n            </div>\n            <button className=\"mt-2 text-sm text-primary-600 hover:text-primary-700\">\n              + Add Parameter\n            </button>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Test Reports & Photos</label>\n            <div\n              {...getRootProps()}\n              className=\"mt-1 border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-primary-500 transition-colors cursor-pointer\"\n            >\n              <input {...getInputProps()} />\n              <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Drag & drop test reports or photos here, or click to select\n              </p>\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Remarks</label>\n            <textarea\n              rows={3}\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n              placeholder=\"Add any observations or remarks...\"\n            ></textarea>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">Engineer's Signature</label>\n            {showSignaturePad ? (\n              <div className=\"mt-1\">\n                <SignatureCanvas\n                  ref={(ref) => setSignatureRef(ref)}\n                  canvasProps={{\n                    className: 'border border-gray-300 rounded-md w-full h-40'\n                  }}\n                />\n                <div className=\"mt-2 flex space-x-4\">\n                  <button\n                    className=\"text-sm text-gray-600 hover:text-gray-700\"\n                    onClick={() => signatureRef?.clear()}\n                  >\n                    Clear\n                  </button>\n                  <button\n                    className=\"text-sm text-primary-600 hover:text-primary-700\"\n                    onClick={() => setShowSignaturePad(false)}\n                  >\n                    Done\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <button\n                className=\"mt-1 btn btn-outline\"\n                onClick={() => setShowSignaturePad(true)}\n              >\n                Add Signature\n              </button>\n            )}\n          </div>\n\n          <div className=\"flex justify-end space-x-4\">\n            <button className=\"btn btn-outline\">Save as Draft</button>\n            <button className=\"btn btn-primary\">Submit Test Report</button>\n          </div>\n        </div>\n      </DashboardCard>\n\n      {/* Recent Tests */}\n      <DashboardCard title=\"Recent Tests\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Test Type\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Location\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Contractor\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Parameters\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {tests.map((test) => (\n                <tr key={test.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                    {test.date}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {test.type}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {test.location}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {test.contractor}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"space-y-1\">\n                      {test.parameters.map((param, index) => (\n                        <div key={index} className=\"flex items-center space-x-2\">\n                          <span className={`w-2 h-2 rounded-full ${\n                            param.status === 'Pass' ? 'bg-green-500' : 'bg-red-500'\n                          }`}></span>\n                          <span className=\"text-sm text-gray-500\">\n                            {param.name}: {param.actual}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      test.status === 'Approved'\n                        ? 'bg-green-100 text-green-800'\n                        : test.status === 'Rejected'\n                        ? 'bg-red-100 text-red-800'\n                        : 'bg-yellow-100 text-yellow-800'\n                    }`}>\n                      {test.status}\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n    </div>\n  );\n}","size_bytes":13010},"client/src/components/construction/Reports/index.tsx":{"content":"import { useState } from 'react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\nimport { FileText, Download, BarChart2, Calendar, Filter } from 'lucide-react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\n\nconst progressData = [\n  { month: 'Jan', planned: 15, actual: 12 },\n  { month: 'Feb', planned: 35, actual: 30 },\n  { month: 'Mar', planned: 55, actual: 48 },\n  { month: 'Apr', planned: 75, actual: 65 },\n  { month: 'May', planned: 90, actual: 82 },\n  { month: 'Jun', planned: 100, actual: 95 },\n];\n\nconst costData = [\n  { category: 'Labor', planned: 450000, actual: 480000 },\n  { category: 'Materials', planned: 850000, actual: 820000 },\n  { category: 'Equipment', planned: 250000, actual: 265000 },\n  { category: 'Subcontractors', planned: 350000, actual: 340000 },\n];\n\nconst qualityData = [\n  { name: 'Passed', value: 85 },\n  { name: 'Minor Issues', value: 10 },\n  { name: 'Failed', value: 5 },\n];\n\nconst COLORS = ['#00C49F', '#FFBB28', '#FF8042'];\n\nexport function Reports() {\n  const [reportType, setReportType] = useState('progress');\n  const [dateRange, setDateRange] = useState('month');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Report Controls */}\n      <div className=\"bg-white rounded-lg shadow-sm p-6\">\n        <div className=\"flex flex-wrap gap-4 items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div>\n              <label htmlFor=\"reportType\" className=\"block text-sm font-medium text-gray-700\">\n                Report Type\n              </label>\n              <select\n                id=\"reportType\"\n                value={reportType}\n                onChange={(e) => setReportType(e.target.value)}\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option value=\"progress\">Progress Report</option>\n                <option value=\"cost\">Cost Analysis</option>\n                <option value=\"quality\">Quality Report</option>\n                <option value=\"safety\">Safety Report</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"dateRange\" className=\"block text-sm font-medium text-gray-700\">\n                Date Range\n              </label>\n              <select\n                id=\"dateRange\"\n                value={dateRange}\n                onChange={(e) => setDateRange(e.target.value)}\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option value=\"week\">This Week</option>\n                <option value=\"month\">This Month</option>\n                <option value=\"quarter\">This Quarter</option>\n                <option value=\"year\">This Year</option>\n                <option value=\"custom\">Custom Range</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"flex space-x-4\">\n            <button className=\"btn btn-outline\">\n              <Filter className=\"h-4 w-4 mr-2\" />\n              More Filters\n            </button>\n            <button className=\"btn btn-primary\">\n              <Download className=\"h-4 w-4 mr-2\" />\n              Export Report\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Report Content */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Progress Chart */}\n        <DashboardCard title=\"Project Progress\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={progressData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"planned\"\n                  name=\"Planned Progress\"\n                  stroke=\"#0088FE\"\n                  strokeWidth={2}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"actual\"\n                  name=\"Actual Progress\"\n                  stroke=\"#00C49F\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        {/* Cost Analysis */}\n        <DashboardCard title=\"Cost Analysis\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={costData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"category\" />\n                <YAxis />\n                <Tooltip formatter={(value) => `₹${value.toLocaleString()}`} />\n                <Legend />\n                <Bar dataKey=\"planned\" name=\"Planned Cost\" fill=\"#8884d8\" />\n                <Bar dataKey=\"actual\" name=\"Actual Cost\" fill=\"#82ca9d\" />\n              </BarChart>\n            </Responsive\nContainer>\n          </div>\n        </DashboardCard>\n\n        {/* Quality Metrics */}\n        <DashboardCard title=\"Quality Metrics\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={qualityData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                  label={({ name, value }) => `${name}: ${value}%`}\n                >\n                  {qualityData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        {/* Safety Statistics */}\n        <DashboardCard title=\"Safety Statistics\">\n          <div className=\"space-y-4\">\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Incident Free Days</span>\n                <span className=\"text-sm font-medium text-gray-900\">45 Days</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '90%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Safety Compliance</span>\n                <span className=\"text-sm font-medium text-gray-900\">95%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-blue-500 h-2 rounded-full\" style={{ width: '95%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Risk Assessment</span>\n                <span className=\"text-sm font-medium text-gray-900\">88%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-yellow-500 h-2 rounded-full\" style={{ width: '88%' }}></div>\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Recent Reports */}\n      <DashboardCard title=\"Recent Reports\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Report Name\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Type\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Generated On\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Generated By\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {[\n                {\n                  id: 1,\n                  name: 'Monthly Progress Report - March 2025',\n                  type: 'Progress',\n                  date: '2025-03-31',\n                  generatedBy: 'John Smith'\n                },\n                {\n                  id: 2,\n                  name: 'Quality Inspection Report #45',\n                  type: 'Quality',\n                  date: '2025-03-28',\n                  generatedBy: 'Sarah Johnson'\n                },\n                {\n                  id: 3,\n                  name: 'Cost Analysis Report Q1 2025',\n                  type: 'Financial',\n                  date: '2025-03-25',\n                  generatedBy: 'Mike Wilson'\n                }\n              ].map((report) => (\n                <tr key={report.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {report.name}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {report.type}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {report.date}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {report.generatedBy}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    <button className=\"text-primary-600 hover:text-primary-900\">\n                      <Download className=\"h-5 w-5\" />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n    </div>\n  );\n}","size_bytes":10832},"client/src/components/construction/Safety/index.tsx":{"content":"import { useState } from 'react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\nimport { AlertTriangle, Shield, Users, CheckSquare, Camera, Upload } from 'lucide-react';\nimport { useDropzone } from 'react-dropzone';\n\ninterface SafetyIncident {\n  id: string;\n  date: string;\n  type: 'Near Miss' | 'Minor' | 'Major' | 'Critical';\n  location: string;\n  description: string;\n  reportedBy: string;\n  status: 'Open' | 'In Progress' | 'Resolved';\n  actions: string;\n}\n\ninterface SafetyObservation {\n  id: string;\n  date: string;\n  category: string;\n  location: string;\n  description: string;\n  risk: 'Low' | 'Medium' | 'High';\n  status: 'Open' | 'Closed';\n}\n\nexport function Safety() {\n  const [activeTab, setActiveTab] = useState('incidents');\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: {\n      'image/*': ['.png', '.jpg', '.jpeg']\n    },\n    maxFiles: 5,\n    onDrop: (acceptedFiles) => {\n      console.log('Files uploaded:', acceptedFiles);\n    }\n  });\n\n  const incidents: SafetyIncident[] = [\n    {\n      id: '1',\n      date: '2025-03-20',\n      type: 'Near Miss',\n      location: 'Block A - 3rd Floor',\n      description: 'Worker nearly slipped due to water spillage',\n      reportedBy: 'John Smith',\n      status: 'Resolved',\n      actions: 'Area cleaned and warning signs placed'\n    },\n    {\n      id: '2',\n      date: '2025-03-19',\n      type: 'Minor',\n      location: 'Material Storage Area',\n      description: 'Minor cut while handling materials',\n      reportedBy: 'Sarah Johnson',\n      status: 'In Progress',\n      actions: 'First aid provided, reviewing material handling procedures'\n    }\n  ];\n\n  const observations: SafetyObservation[] = [\n    {\n      id: '1',\n      date: '2025-03-20',\n      category: 'PPE Compliance',\n      location: 'Site Wide',\n      description: 'Workers not wearing safety helmets in designated areas',\n      risk: 'High',\n      status: 'Open'\n    },\n    {\n      id: '2',\n      date: '2025-03-19',\n      category: 'Housekeeping',\n      location: 'Block B Ground Floor',\n      description: 'Construction debris blocking emergency exit',\n      risk: 'Medium',\n      status: 'Closed'\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <Shield className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Safety Score</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">92%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <AlertTriangle className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Open Issues</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">5</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-success-100 rounded-full flex items-center justify-center\">\n              <Users className=\"h-6 w-6 text-success-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Workers Trained</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">145</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <CheckSquare className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Inspections</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">24</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8 px-6\" aria-label=\"Tabs\">\n            {['incidents', 'observations', 'inspections'].map((tab) => (\n              <button\n                key={tab}\n                onClick={() => setActiveTab(tab)}\n                className={`\n                  whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\n                  ${activeTab === tab\n                    ? 'border-primary-500 text-primary-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\n                `}\n              >\n                {tab.charAt(0).toUpperCase() + tab.slice(1)}\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        <div className=\"p-6\">\n          {activeTab === 'incidents' && (\n            <div className=\"space-y-6\">\n              {/* Incident Report Form */}\n              <DashboardCard title=\"Report Safety Incident\">\n                <div className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">Incident Type</label>\n                      <select className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\">\n                        <option>Near Miss</option>\n                        <option>Minor</option>\n                        <option>Major</option>\n                        <option>Critical</option>\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">Location</label>\n                      <input\n                        type=\"text\"\n                        className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                        placeholder=\"Specify incident location\"\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n                    <textarea\n                      rows={3}\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                      placeholder=\"Describe what happened...\"\n                    ></textarea>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Photos</label>\n                    <div\n                      {...getRootProps()}\n                      className=\"mt-1 border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-primary-500 transition-colors cursor-pointer\"\n                    >\n                      <input {...getInputProps()} />\n                      <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\n                      <p className=\"mt-1 text-sm text-gray-500\">\n                        Drag & drop photos here, or click to select\n                      </p>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Immediate Actions Taken</label>\n                    <textarea\n                      rows={2}\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                      placeholder=\"Describe immediate actions taken...\"\n                    ></textarea>\n                  </div>\n\n                  <div className=\"flex justify-end space-x-4\">\n                    <button className=\"btn btn-outline\">Save as Draft</button>\n                    <button className=\"btn btn-primary\">Submit Report</button>\n                  </div>\n                </div>\n              </DashboardCard>\n\n              {/* Recent Incidents */}\n              <DashboardCard title=\"Recent Incidents\">\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead>\n                      <tr>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Date\n                        </th>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Type\n                        </th>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Location\n                        </th>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Description\n                        </th>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Status\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {incidents.map((incident) => (\n                        <tr key={incident.id}>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                            {incident.date}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                              incident.type === 'Critical'\n                                ? 'bg-red-100 text-red-800'\n                                : incident.type === 'Major'\n                                ? 'bg-orange-100 text-orange-800'\n                                : incident.type === 'Minor'\n                                ? 'bg-yellow-100 text-yellow-800'\n                                : 'bg-green-100 text-green-800'\n                            }`}>\n                              {incident.type}\n                            </span>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {incident.location}\n                          </td>\n                          <td className=\"px-6 py-4 text-sm text-gray-500\">\n                            {incident.description}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                              incident.status === 'Resolved'\n                                ? 'bg-green-100 text-green-800'\n                                : incident.status === 'In Progress'\n                                ? 'bg-yellow-100 text-yellow-800'\n                                : 'bg-red-100 text-red-800'\n                            }`}>\n                              {incident.status}\n                            </span>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </DashboardCard>\n            </div>\n          )}\n\n          {activeTab === 'observations' && (\n            <div className=\"space-y-6\">\n              {/* Safety Observation Form */}\n              <DashboardCard title=\"Record Safety Observation\">\n                <div className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">Category</label>\n                      <select className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\">\n                        <option>PPE Compliance</option>\n                        <option>Housekeeping</option>\n                        <option>Work at Height</option>\n                        <option>Fire Safety</option>\n                        <option>Equipment Safety</option>\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">Risk Level</label>\n                      <select className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\">\n                        <option>Low</option>\n                        <option>Medium</option>\n                        <option>High</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Location</label>\n                    <input\n                      type=\"text\"\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                      placeholder=\"Specify observation location\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n                    <textarea\n                      rows={3}\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                      placeholder=\"Describe the safety observation...\"\n                    ></textarea>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Photos</label>\n                    <div\n                      {...getRootProps()}\n                      className=\"mt-1 border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-primary-500 transition-colors cursor-pointer\"\n                    >\n                      <input {...getInputProps()} />\n                      <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\n                      <p className=\"mt-1 text-sm text-gray-500\">\n                        Drag & drop photos here, or click to select\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex justify-end space-x-4\">\n                    <button className=\"btn btn-outline\">Save as Draft</button>\n                    <button className=\"btn btn-primary\">Submit Observation</button>\n                  </div>\n                </div>\n              </DashboardCard>\n\n              {/* Recent Observations */}\n              <DashboardCard title=\"Recent Observations\">\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead>\n                      <tr>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Date\n                        </th>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Category\n                        </th>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Location\n                        </th>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Description\n                        </th>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Risk\n                        </th>\n                        <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Status\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {observations.map((observation) => (\n                        <tr key={observation.id}>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                            {observation.date}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {observation.category}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {observation.location}\n                          </td>\n                          <td className=\"px-6 py-4 text-sm text-gray-500\">\n                            {observation.description}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                              observation.risk === 'High'\n                                ? 'bg-red-100 text-red-800'\n                                : observation.risk === 'Medium'\n                                ? 'bg-yellow-100 text-yellow-800'\n                                : 'bg-green-100 text-green-800'\n                            }`}>\n                              {observation.risk}\n                            </span>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap\">\n                            <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                              observation.status === 'Closed'\n                                ? 'bg-green-100 text-green-800'\n                                : 'bg-yellow-100 text-yellow-800'\n                            }`}>\n                              {observation.status}\n                            </span>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </DashboardCard>\n            </div>\n          )}\n\n          {activeTab === 'inspections' && (\n            <div className=\"space-y-6\">\n              {/* Safety Inspection Form */}\n              <DashboardCard title=\"Safety Inspection\">\n                <div className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">Inspection Area</label>\n                      <select className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\">\n                        <option>Site Access</option>\n                        <option>Working Area</option>\n                        \n                        <option>Material Storage</option>\n                        <option>Equipment Zone</option>\n                        <option>Welfare Facilities</option>\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700\">Inspector</label>\n                      <input\n                        type=\"text\"\n                        className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                        placeholder=\"Inspector name\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    <h4 className=\"font-medium text-gray-900\">Inspection Checklist</h4>\n                    \n                    {[\n                      'PPE compliance in all areas',\n                      'Fire extinguishers in place and accessible',\n                      'Emergency exits clear and marked',\n                      'First aid facilities available',\n                      'Proper lighting in work areas'\n                    ].map((item, index) => (\n                      <div key={index} className=\"flex items-center space-x-4\">\n                        <select className=\"w-24 rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\">\n                          <option>Pass</option>\n                          <option>Fail</option>\n                          <option>N/A</option>\n                        </select>\n                        <span className=\"text-sm text-gray-700\">{item}</span>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Observations</label>\n                    <textarea\n                      rows={3}\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500\"\n                      placeholder=\"Note any observations or concerns...\"\n                    ></textarea>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">Photos</label>\n                    <div\n                      {...getRootProps()}\n                      className=\"mt-1 border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-primary-500 transition-colors cursor-pointer\"\n                    >\n                      <input {...getInputProps()} />\n                      <Upload className=\"mx-auto h-12 w-12 text-gray-400\" />\n                      <p className=\"mt-1 text-sm text-gray-500\">\n                        Drag & drop inspection photos here, or click to select\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex justify-end space-x-4\">\n                    <button className=\"btn btn-outline\">Save as Draft</button>\n                    <button className=\"btn btn-primary\">Submit Inspection</button>\n                  </div>\n                </div>\n              </DashboardCard>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":23268},"client/src/components/crm/CRMOverview/index.tsx":{"content":"import { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport { Users, TrendingUp, MessageSquare, Target, DollarSign } from 'lucide-react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\n\nconst customerData = [\n  { month: 'Jan', newCustomers: 120, activeCustomers: 1200 },\n  { month: 'Feb', newCustomers: 140, activeCustomers: 1300 },\n  { month: 'Mar', newCustomers: 160, activeCustomers: 1400 },\n  { month: 'Apr', newCustomers: 180, activeCustomers: 1500 },\n  { month: 'May', newCustomers: 200, activeCustomers: 1600 },\n  { month: 'Jun', newCustomers: 220, activeCustomers: 1700 },\n];\n\nconst revenueData = [\n  { month: 'Jan', revenue: 150000 },\n  { month: 'Feb', revenue: 160000 },\n  { month: 'Mar', revenue: 170000 },\n  { month: 'Apr', revenue: 180000 },\n  { month: 'May', revenue: 190000 },\n  { month: 'Jun', revenue: 200000 },\n];\n\nexport function CRMOverview() {\n  const [period, setPeriod] = useState('month');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <Users className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Total Customers</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">1,734</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <TrendingUp className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Growth Rate</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">+12.5%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <MessageSquare className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Open Tickets</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">48</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Target className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Opportunities</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">156</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Customer Growth\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={customerData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"newCustomers\"\n                  name=\"New Customers\"\n                  stroke=\"#0088FE\"\n                  strokeWidth={2}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"activeCustomers\"\n                  name=\"Active Customers\"\n                  stroke=\"#00C49F\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Revenue Trend\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={revenueData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip formatter={(value) => `$${value.toLocaleString()}`} />\n                <Legend />\n                <Bar dataKey=\"revenue\" name=\"Revenue\" fill=\"#8884d8\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Recent Activity */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <div className=\"lg:col-span-2\">\n          <DashboardCard title=\"Recent Activities\">\n            <div className=\"flow-root\">\n              <ul className=\"divide-y divide-gray-200\">\n                {[\n                  {\n                    id: 1,\n                    type: 'customer',\n                    description: 'New customer registration',\n                    name: 'John Smith',\n                    date: '2025-03-15',\n                    status: 'completed'\n                  },\n                  {\n                    id: 2,\n                    type: 'support',\n                    description: 'Support ticket resolved',\n                    name: 'Technical Issue #123',\n                    date: '2025-03-14',\n                    status: 'completed'\n                  },\n                  {\n                    id: 3,\n                    type: 'sale',\n                    description: 'New sale completed',\n                    name: 'Premium Package',\n                    date: '2025-03-13',\n                    status: 'completed'\n                  }\n                ].map((activity) => (\n                  <li key={activity.id} className=\"py-4\">\n                    <div className=\"flex space-x-3\">\n                      <div className=\"flex-1 space-y-1\">\n                        <div className=\"flex items-center justify-between\">\n                          <h3 className=\"text-sm font-medium\">{activity.description}</h3>\n                          <p className=\"text-sm text-gray-500\">{activity.date}</p>\n                        </div>\n                        <p className=\"text-sm text-gray-500\">\n                          {activity.name}\n                        </p>\n                      </div>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </DashboardCard>\n        </div>\n\n        <div>\n          <DashboardCard title=\"Quick Stats\">\n            <div className=\"space-y-4\">\n              <div className=\"border-l-4 border-primary-500 pl-4 py-2\">\n                <p className=\"text-sm font-medium text-gray-900\">Customer Satisfaction</p>\n                <p className=\"mt-1 text-sm text-gray-500\">\n                  92% positive feedback this month\n                </p>\n              </div>\n              <div className=\"border-l-4 border-secondary-500 pl-4 py-2\">\n                <p className=\"text-sm font-medium text-gray-900\">Response Time</p>\n                <p className=\"mt-1 text-sm text-gray-500\">\n                  Average 2.5 hours for first response\n                </p>\n              </div>\n              <div className=\"border-l-4 border-accent-500 pl-4 py-2\">\n                <p className=\"text-sm font-medium text-gray-900\">Sales Conversion</p>\n                <p className=\"mt-1 text-sm text-gray-500\">\n                  15% conversion rate on leads\n                </p>\n              </div>\n            </div>\n          </DashboardCard>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":8097},"client/src/components/crm/Customers/index.tsx":{"content":"import { useState } from 'react';\nimport { Search, Filter, Plus, Edit, Trash2, MoreVertical } from 'lucide-react';\n\nconst customers = [\n  {\n    id: 1,\n    name: 'Acme Corporation',\n    contact: 'John Smith',\n    email: 'john.smith@acme.com',\n    phone: '+1 (555) 123-4567',\n    status: 'Active',\n    lastPurchase: '2025-03-15',\n    totalSpent: 25000\n  },\n  {\n    id: 2,\n    name: 'Global Industries',\n    contact: 'Sarah Johnson',\n    email: 'sarah.j@global.com',\n    phone: '+1 (555) 234-5678',\n    status: 'Active',\n    lastPurchase: '2025-03-10',\n    totalSpent: 42000\n  },\n  {\n    id: 3,\n    name: 'Tech Solutions Ltd',\n    contact: 'Mike Wilson',\n    email: 'mike.w@techsolutions.com',\n    phone: '+1 (555) 345-6789',\n    status: 'Inactive',\n    lastPurchase: '2025-02-28',\n    totalSpent: 15000\n  }\n];\n\nexport function Customers() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState('All');\n\n  const filteredCustomers = customers.filter(customer => {\n    const matchesSearch = customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         customer.contact.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         customer.email.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = selectedStatus === 'All' || customer.status === selectedStatus;\n    return matchesSearch && matchesStatus;\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with search and filters */}\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <Search className=\"h-5 w-5 text-gray-400\" />\n              </div>\n              <input\n                type=\"text\"\n                className=\"focus:ring-primary-500 focus:border-primary-500 block w-full pl-10 sm:text-sm border-gray-300 rounded-md\"\n                placeholder=\"Search customers...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n          </div>\n          \n          <div className=\"flex flex-wrap items-center gap-4\">\n            <select\n              value={selectedStatus}\n              onChange={(e) => setSelectedStatus(e.target.value)}\n              className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n            >\n              <option>All Status</option>\n              <option>Active</option>\n              <option>Inactive</option>\n            </select>\n            \n            <button className=\"btn btn-outline\">\n              <Filter className=\"h-4 w-4 mr-2\" />\n              More Filters\n            </button>\n            \n            <button className=\"btn btn-primary\">\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Add Customer\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Customer Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-1\">\n              <p className=\"text-sm font-medium text-gray-500\">Total Customers</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">1,234</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-1\">\n              <p className=\"text-sm font-medium text-gray-500\">Active Customers</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">987</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-1\">\n              <p className=\"text-sm font-medium text-gray-500\">New This Month</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">45</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-1\">\n              <p className=\"text-sm font-medium text-gray-500\">Average Lifetime Value</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">$12,345</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Customer List */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Customer\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Contact\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Last Purchase\n                </th>\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Total Spent\n                </th>\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {filteredCustomers.map((customer) => (\n                <tr key={customer.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm font-medium text-gray-900\">{customer.name}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm text-gray-900\">{customer.contact}</div>\n                    <div className=\"text-sm text-gray-500\">{customer.email}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      customer.status === 'Active'\n                        ? 'bg-green-100 text-green-800'\n                        : 'bg-red-100 text-red-800'\n                    }`}>\n                      {customer.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {customer.lastPurchase}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    ${customer.totalSpent.toLocaleString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    <button className=\"text-primary-600 hover:text-primary-900 mr-3\">\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button className=\"text-red-600 hover:text-red-900 mr-3\">\n                      <Trash2 className=\"h-4 w-4\" />\n                    </button>\n                    <button className=\"text-gray-400 hover:text-gray-500\">\n                      <MoreVertical className=\"h-4 w-4\" />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":8111},"client/src/components/manufacturing/Maintenance/index.tsx":{"content":"import { useState } from 'react';\nimport { PenTool, Calendar, AlertTriangle, CheckCircle, Clock, Settings, BarChart2 } from 'lucide-react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\n\nconst maintenanceSchedule = [\n  {\n    id: 1,\n    equipment: 'Production Line A',\n    type: 'Preventive',\n    dueDate: '2025-03-20',\n    assignedTo: 'John Smith',\n    status: 'Scheduled',\n    priority: 'High'\n  },\n  {\n    id: 2,\n    equipment: 'CNC Machine 3',\n    type: 'Routine',\n    dueDate: '2025-03-18',\n    assignedTo: 'Mike Johnson',\n    status: 'In Progress',\n    priority: 'Medium'\n  },\n  {\n    id: 3,\n    equipment: 'Assembly Robot 2',\n    type: 'Repair',\n    dueDate: '2025-03-15',\n    assignedTo: 'Sarah Wilson',\n    status: 'Completed',\n    priority: 'High'\n  }\n];\n\nconst equipmentStatus = [\n  {\n    id: 1,\n    name: 'Production Line A',\n    status: 'Operational',\n    lastMaintenance: '2025-02-15',\n    nextMaintenance: '2025-03-15',\n    uptime: '98.5%'\n  },\n  {\n    id: 2,\n    name: 'Production Line B',\n    status: 'Maintenance Required',\n    lastMaintenance: '2025-02-01',\n    nextMaintenance: '2025-03-01',\n    uptime: '92.3%'\n  },\n  {\n    id: 3,\n    name: 'Production Line C',\n    status: 'Under Repair',\n    lastMaintenance: '2025-02-28',\n    nextMaintenance: '2025-03-28',\n    uptime: '85.7%'\n  }\n];\n\nexport function Maintenance() {\n  const [selectedEquipment, setSelectedEquipment] = useState(null);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <PenTool className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Equipment Uptime</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">92.5%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Calendar className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Scheduled Tasks</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">8</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-error-100 rounded-full flex items-center justify-center\">\n              <AlertTriangle className=\"h-6 w-6 text-error-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Critical Issues</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">2</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-success-100 rounded-full flex items-center justify-center\">\n              <CheckCircle className=\"h-6 w-6 text-success-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Completed Today</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">5</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Equipment Status */}\n      <DashboardCard title=\"Equipment Status\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Equipment\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Last Maintenance\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Next Maintenance\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Uptime\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {equipmentStatus.map((equipment) => (\n                <tr key={equipment.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {equipment.name}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      equipment.status === 'Operational'\n                        ? 'bg-green-100 text-green-800'\n                        : equipment.status === 'Maintenance Required'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-red-100 text-red-800'\n                    }`}>\n                      {equipment.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {equipment.lastMaintenance}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {equipment.nextMaintenance}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {equipment.uptime}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Maintenance Schedule */}\n      <DashboardCard title=\"Maintenance Schedule\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Equipment\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Type\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Due Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Assigned To\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Priority\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {maintenanceSchedule.map((task) => (\n                <tr key={task.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {task.equipment}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {task.type}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {task.dueDate}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {task.assignedTo}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      task.status === 'Completed'\n                        ? 'bg-green-100 text-green-800'\n                        : task.status === 'In Progress'\n                        ? 'bg-blue-100 text-blue-800'\n                        : 'bg-yellow-100 text-yellow-800'\n                    }`}>\n                      {task.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      task.priority === 'High'\n                        ? 'bg-red-100 text-red-800'\n                        : 'bg-yellow-100 text-yellow-800'\n                    }`}>\n                      {task.priority}\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Maintenance Insights */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <DashboardCard title=\"Maintenance Metrics\">\n          <div className=\"space-y-4\">\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">MTBF</span>\n                <span className=\"text-sm font-medium text-gray-900\">168 hours</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-primary-500 h-2 rounded-full\" style={{ width: '85%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">MTTR</span>\n                <span className=\"text-sm font-medium text-gray-900\">4.2 hours</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-warning-500 h-2 rounded-full\" style={{ width: '65%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">PM Compliance</span>\n                <span className=\"text-sm font-medium text-gray-900\">92%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-success-500 h-2 rounded-full\" style={{ width: '92%' }}></div>\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Recent Issues\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-start\">\n              <AlertTriangle className=\"h-5 w-5 text-warning-500 mt-0.5\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-900\">Bearing Wear</p>\n                <p className=\"text-xs text-gray-500\">Production Line B - Station 3</p>\n                <p className=\"text-xs text-gray-500\">Reported 2 hours ago</p>\n              </div>\n            </div>\n            <div className=\"flex items-start\">\n              <AlertTriangle className=\"h-5 w-5 text-error-500 mt-0.5\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-900\">Motor Overheating</p>\n                <p className=\"text-xs text-gray-500\">Assembly Robot 2</p>\n                <p className=\"text-xs text-gray-500\">Reported 4 hours ago</p>\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Upcoming Maintenance\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-start\">\n              <Calendar className=\"h-5 w-5 text-gray-400 mt-0.5\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-900\">Preventive Maintenance</p>\n                <p className=\"text-xs text-gray-500\">Production Line A</p>\n                <p className=\"text-xs text-gray-500\">Scheduled for tomorrow</p>\n              </div>\n            </div>\n            <div className=\"flex items-start\">\n              <Calendar className=\"h-5 w-5 text-gray-400 mt-0.5\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-900\">Calibration</p>\n                <p className=\"text-xs text-gray-500\">Quality Control Equipment</p>\n                <p className=\"text-xs text-gray-500\">Scheduled for next week</p>\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n    </div>\n  );\n}","size_bytes":13256},"client/src/components/manufacturing/ManufacturingOverview/index.tsx":{"content":"import { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\nimport { Factory, TrendingUp, AlertCircle, Clock, CheckCircle, PenTool, Truck, HardHat } from 'lucide-react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\n\nconst productionData = [\n  { month: 'Jan', planned: 1000, actual: 950 },\n  { month: 'Feb', planned: 1200, actual: 1150 },\n  { month: 'Mar', planned: 1400, actual: 1380 },\n  { month: 'Apr', planned: 1300, actual: 1250 },\n  { month: 'May', planned: 1500, actual: 1480 },\n  { month: 'Jun', planned: 1600, actual: 1550 },\n];\n\nconst qualityData = [\n  { name: 'Pass', value: 85 },\n  { name: 'Minor Issues', value: 10 },\n  { name: 'Major Issues', value: 5 },\n];\n\nconst constructionSites = [\n  { name: 'Site A - Residential Complex', progress: 75, workers: 45, equipment: 12 },\n  { name: 'Site B - Commercial Center', progress: 60, workers: 35, equipment: 8 },\n  { name: 'Site C - Infrastructure', progress: 40, workers: 25, equipment: 15 },\n];\n\nconst COLORS = ['#00C49F', '#FFBB28', '#FF8042'];\n\nexport function ManufacturingOverview() {\n  const [period, setPeriod] = useState('month');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <Factory className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Active Sites</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">8</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <HardHat className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Total Workers</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">105</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <PenTool className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Equipment Units</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">35</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Truck className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Material Deliveries</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">24</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Construction Sites Overview */}\n      <DashboardCard title=\"Active Construction Sites\">\n        <div className=\"space-y-4\">\n          {constructionSites.map((site, index) => (\n            <div key={index} className=\"bg-gray-50 p-4 rounded-lg\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <h3 className=\"text-lg font-medium text-gray-900\">{site.name}</h3>\n                <span className=\"text-sm text-gray-500\">{site.progress}% Complete</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2.5 mb-4\">\n                <div\n                  className=\"bg-primary-600 h-2.5 rounded-full\"\n                  style={{ width: `${site.progress}%` }}\n                ></div>\n              </div>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-gray-500\">Workers on Site</p>\n                  <p className=\"text-lg font-medium\">{site.workers}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-500\">Equipment Units</p>\n                  <p className=\"text-lg font-medium\">{site.equipment}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </DashboardCard>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Production Performance\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={productionData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"planned\"\n                  name=\"Planned\"\n                  stroke=\"#0088FE\"\n                  strokeWidth={2}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"actual\"\n                  name=\"Actual\"\n                  stroke=\"#00C49F\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Quality Metrics\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={qualityData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                  label={({ name, value }) => `${name}: ${value}%`}\n                >\n                  {qualityData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Additional Information */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <DashboardCard title=\"Safety Compliance\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm font-medium text-gray-900\">PPE Compliance</span>\n              <span className=\"text-sm font-medium text-gray-900\">98%</span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '98%' }}></div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm font-medium text-gray-900\">Safety Training</span>\n              <span className=\"text-sm font-medium text-gray-900\">95%</span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '95%' }}></div>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-sm font-medium text-gray-900\">Incident Reports</span>\n              <span className=\"text-sm font-medium text-gray-900\">0 this month</span>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Equipment Status\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <div className=\"h-3 w-3 rounded-full bg-green-500 mr-2\"></div>\n                <span className=\"text-sm font-medium\">Operational</span>\n              </div>\n              <span className=\"text-sm text-gray-500\">28 units</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <div className=\"h-3 w-3 rounded-full bg-yellow-500 mr-2\"></div>\n                <span className=\"text-sm font-medium\">Under Maintenance</span>\n              </div>\n              <span className=\"text-sm text-gray-500\">5 units</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <div className=\"h-3 w-3 rounded-full bg-red-500 mr-2\"></div>\n                <span className=\"text-sm font-medium\">Out of Service</span>\n              </div>\n              <span className=\"text-sm text-gray-500\">2 units</span>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Material Inventory\">\n          <div className=\"space-y-4\">\n            <div className=\"border-l-4 border-primary-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Concrete</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                180 cubic yards in stock\n              </p>\n            </div>\n            <div className=\"border-l-4 border-secondary-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Steel</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                25 tons available\n              </p>\n            </div>\n            <div className=\"border-l-4 border-warning-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Lumber</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Low stock - reorder needed\n              </p>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n    </div>\n  );\n}","size_bytes":10361},"client/src/components/manufacturing/Planning/index.tsx":{"content":"import { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LineChart,\n  Line\n} from 'recharts';\nimport { Calendar, Clock, TrendingUp, Package, Plus } from 'lucide-react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\n\nconst productionPlan = [\n  {\n    id: 1,\n    product: 'Product A',\n    quantity: 1000,\n    startDate: '2025-03-20',\n    endDate: '2025-03-25',\n    status: 'Scheduled',\n    line: 'Line 1',\n    priority: 'High'\n  },\n  {\n    id: 2,\n    product: 'Product B',\n    quantity: 750,\n    startDate: '2025-03-26',\n    endDate: '2025-03-30',\n    status: 'Pending',\n    line: 'Line 2',\n    priority: 'Medium'\n  },\n  {\n    id: 3,\n    product: 'Product C',\n    quantity: 500,\n    startDate: '2025-04-01',\n    endDate: '2025-04-05',\n    status: 'Draft',\n    line: 'Line 1',\n    priority: 'Low'\n  }\n];\n\nconst capacityData = [\n  { month: 'Jan', planned: 90, actual: 85 },\n  { month: 'Feb', planned: 85, actual: 82 },\n  { month: 'Mar', planned: 95, actual: 90 },\n  { month: 'Apr', planned: 88, actual: 85 },\n  { month: 'May', planned: 92, actual: 88 },\n  { month: 'Jun', planned: 96, actual: 92 },\n];\n\nconst demandForecast = [\n  { month: 'Jul', forecast: 1200, confirmed: 800 },\n  { month: 'Aug', forecast: 1300, confirmed: 900 },\n  { month: 'Sep', forecast: 1400, confirmed: 850 },\n  { month: 'Oct', forecast: 1500, confirmed: 1000 },\n  { month: 'Nov', forecast: 1600, confirmed: 1100 },\n  { month: 'Dec', forecast: 1700, confirmed: 1200 },\n];\n\nexport function Planning() {\n  const [selectedPeriod, setSelectedPeriod] = useState('month');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <Calendar className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Planned Orders</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">24</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <Clock className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Lead Time</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">5.2 days</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <TrendingUp className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Capacity Utilization</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">87%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Package className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">WIP Inventory</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">$125K</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Production Plan */}\n      <DashboardCard \n        title={\n          <div className=\"flex items-center justify-between\">\n            <span>Production Plan</span>\n            <button className=\"btn btn-primary btn-sm\">\n              <Plus className=\"h-4 w-4 mr-2\" />\n              New Plan\n            </button>\n          </div>\n        }\n      >\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Product\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Quantity\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Start Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  End Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Line\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Priority\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {productionPlan.map((plan) => (\n                <tr key={plan.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {plan.product}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {plan.quantity}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {plan.startDate}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {plan.endDate}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {plan.line}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      plan.status === 'Scheduled'\n                        ? 'bg-green-100 text-green-800'\n                        : plan.status === 'Pending'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-gray-100 text-gray-800'\n                    }`}>\n                      {plan.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      plan.priority === 'High'\n                        ? 'bg-red-100 text-red-800'\n                        : plan.priority === 'Medium'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-green-100 text-green-800'\n                    }`}>\n                      {plan.priority}\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Capacity Utilization\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={capacityData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"planned\"\n                  name=\"Planned Capacity (%)\"\n                  stroke=\"#0088FE\"\n                  strokeWidth={2}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"actual\"\n                  name=\"Actual Utilization (%)\"\n                  stroke=\"#00C49F\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Demand Forecast\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={demandForecast}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"forecast\" name=\"Forecasted Demand\" fill=\"#8884d8\" />\n                <Bar dataKey=\"confirmed\" name=\"Confirmed Orders\" fill=\"#82ca9d\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Planning Insights */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <DashboardCard title=\"Resource Allocation\">\n          <div className=\"space-y-4\">\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Line 1</span>\n                <span className=\"text-sm font-medium text-gray-900\">95%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-primary-500 h-2 rounded-full\" style={{ width: '95%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Line 2</span>\n                <span className=\"text-sm font-medium text-gray-900\">82%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-primary-500 h-2 rounded-full\" style={{ width: '82%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Line 3</span>\n                <span className=\"text-sm font-medium text-gray-900\">78%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-primary-500 h-2 rounded-full\" style={{ width: '78%' }}></div>\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Material Requirements\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Package className=\"h-5 w-5 text-gray-400\" />\n                <span className=\"ml-2 text-sm font-medium text-gray-900\">Raw Material A</span>\n              </div>\n              <span className=\"text-sm text-gray-500\">2,500 units</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Package className=\"h-5 w-5 text-gray-400\" />\n                <span className=\"ml-2 text-sm font-medium text-gray-900\">Raw Material B</span>\n              </div>\n              <span className=\"text-sm text-gray-500\">1,800 units</span>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <Package className=\"h-5 w-5 text-gray-400\" />\n                <span className=\"ml-2 text-sm font-medium text-gray-900\">Raw Material C</span>\n              </div>\n              <span className=\"text-sm text-gray-500\">3,200 units</span>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Planning Alerts\">\n          <div className=\"space-y-4\">\n            <div className=\"border-l-4 border-warning-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Capacity Alert</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Line 1 approaching maximum capacity\n              </p>\n            </div>\n            <div className=\"border-l-4 border-error-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Material Shortage</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Raw Material B inventory below safety stock\n              </p>\n            </div>\n            <div className=\"border-l-4 border-success-500 pl-4 py-2\">\n              <p className=\"text-sm font-medium text-gray-900\">Schedule Update</p>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                Production schedule optimized for next week\n              </p>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n    </div>\n  );\n}","size_bytes":13495},"client/src/components/manufacturing/Production/index.tsx":{"content":"import { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport { PenTool, Calendar, AlertTriangle, CheckCircle, Clock, Settings, BarChart2, Hammer, Truck, HardHat } from 'lucide-react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\n\nconst constructionLines = [\n  {\n    id: 1,\n    name: 'Residential Complex A',\n    status: 'In Progress',\n    efficiency: 92,\n    currentPhase: 'Foundation Work',\n    targetCompletion: '85%',\n    currentProgress: '65%',\n    startTime: '07:00 AM',\n    estimatedCompletion: '06:00 PM',\n    workers: 25,\n    equipment: 8,\n    boq: {\n      concrete: { planned: 450, actual: 380 },\n      steel: { planned: 75, actual: 62 },\n      bricks: { planned: 25000, actual: 21000 }\n    },\n    safety: {\n      incidents: 0,\n      observations: 3,\n      compliance: 98\n    },\n    quality: {\n      testsCompleted: 15,\n      testsPending: 2,\n      approvalRate: 95\n    }\n  },\n  {\n    id: 2,\n    name: 'Commercial Building B',\n    status: 'In Progress',\n    efficiency: 88,\n    currentPhase: 'Structural Work',\n    targetCompletion: '75%',\n    currentProgress: '45%',\n    startTime: '07:30 AM',\n    estimatedCompletion: '05:30 PM',\n    workers: 30,\n    equipment: 12,\n    boq: {\n      concrete: { planned: 850, actual: 720 },\n      steel: { planned: 120, actual: 98 },\n      bricks: { planned: 35000, actual: 28000 }\n    },\n    safety: {\n      incidents: 1,\n      observations: 5,\n      compliance: 92\n    },\n    quality: {\n      testsCompleted: 22,\n      testsPending: 4,\n      approvalRate: 91\n    }\n  },\n  {\n    id: 3,\n    name: 'Infrastructure Project C',\n    status: 'On Hold',\n    efficiency: 0,\n    currentPhase: 'Weather Delay',\n    targetCompletion: '60%',\n    currentProgress: '40%',\n    startTime: '-',\n    estimatedCompletion: '-',\n    workers: 0,\n    equipment: 5,\n    boq: {\n      concrete: { planned: 320, actual: 250 },\n      steel: { planned: 45, actual: 32 },\n      bricks: { planned: 15000, actual: 12000 }\n    },\n    safety: {\n      incidents: 0,\n      observations: 2,\n      compliance: 95\n    },\n    quality: {\n      testsCompleted: 8,\n      testsPending: 3,\n      approvalRate: 88\n    }\n  }\n];\n\nconst hourlyProgress = [\n  { hour: '07:00', siteA: 120, siteB: 100, siteC: 0 },\n  { hour: '08:00', siteA: 125, siteB: 105, siteC: 0 },\n  { hour: '09:00', siteA: 118, siteB: 98, siteC: 0 },\n  { hour: '10:00', siteA: 122, siteB: 102, siteC: 0 },\n  { hour: '11:00', siteA: 115, siteB: 95, siteC: 0 },\n  { hour: '12:00', siteA: 128, siteB: 108, siteC: 0 },\n];\n\nexport function Production() {\n  const [selectedSite, setSelectedSite] = useState(null);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Construction Site Status */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {constructionLines.map((site) => (\n          <div key={site.id} className=\"bg-white rounded-lg shadow-sm p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">{site.name}</h3>\n              <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                site.status === 'In Progress'\n                  ? 'bg-green-100 text-green-800'\n                  : 'bg-yellow-100 text-yellow-800'\n              }`}>\n                {site.status}\n              </span>\n            </div>\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-500\">Efficiency</span>\n                <span className=\"text-sm font-medium\">{site.efficiency}%</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-500\">Current Phase</span>\n                <span className=\"text-sm font-medium\">{site.currentPhase}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-500\">Progress</span>\n                <span className=\"text-sm font-medium\">\n                  {site.currentProgress}/{site.targetCompletion}\n                </span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                <div\n                  className=\"bg-primary-600 h-2.5 rounded-full\"\n                  style={{ width: site.currentProgress }}\n                ></div>\n              </div>\n\n              {/* BOQ Summary */}\n              <div className=\"mt-4 p-3 bg-gray-50 rounded-lg\">\n                <h4 className=\"text-sm font-medium text-gray-900 mb-2\">BOQ Progress</h4>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Concrete</span>\n                    <span>{Math.round((site.boq.concrete.actual / site.boq.concrete.planned) * 100)}%</span>\n                  </div>\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Steel</span>\n                    <span>{Math.round((site.boq.steel.actual / site.boq.steel.planned) * 100)}%</span>\n                  </div>\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Bricks</span>\n                    <span>{Math.round((site.boq.bricks.actual / site.boq.bricks.planned) * 100)}%</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Safety & Quality */}\n              <div className=\"grid grid-cols-2 gap-4 mt-4\">\n                <div className=\"p-3 bg-gray-50 rounded-lg\">\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Safety</h4>\n                  <div className=\"space-y-1\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Compliance</span>\n                      <span>{site.safety.compliance}%</span>\n                    </div>\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Incidents</span>\n                      <span>{site.safety.incidents}</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"p-3 bg-gray-50 rounded-lg\">\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Quality</h4>\n                  <div className=\"space-y-1\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Approval</span>\n                      <span>{site.quality.approvalRate}%</span>\n                    </div>\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Pending</span>\n                      <span>{site.quality.testsPending}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4 mt-4\">\n                <div>\n                  <span className=\"text-sm text-gray-500\">Workers</span>\n                  <div className=\"flex items-center mt-1\">\n                    <HardHat className=\"h-4 w-4 text-gray-400 mr-2\" />\n                    <span className=\"text-sm font-medium\">{site.workers}</span>\n                  </div>\n                </div>\n                <div>\n                  <span className=\"text-sm text-gray-500\">Equipment</span>\n                  <div className=\"flex items-center mt-1\">\n                    <Hammer className=\"h-4 w-4 text-gray-400 mr-2\" />\n                    <span className=\"text-sm font-medium\">{site.equipment}</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex justify-between text-xs text-gray-500 mt-4\">\n                <span>{site.startTime}</span>\n                <span>{site.estimatedCompletion}</span>\n              </div>\n            </div>\n            <div className=\"mt-4 flex justify-end space-x-2\">\n              {site.status === 'In Progress' ? (\n                <button className=\"p-2 text-gray-400 hover:text-gray-500\">\n                  <Clock className=\"h-5 w-5\" />\n                </button>\n              ) : (\n                <button className=\"p-2 text-gray-400 hover:text-gray-500\">\n                  <Calendar className=\"h-5 w-5\" />\n                </button>\n              )}\n              <button className=\"p-2 text-gray-400 hover:text-gray-500\">\n                <Settings className=\"h-5 w-5\" />\n              </button>\n              <button className=\"p-2 text-gray-400 hover:text-gray-500\">\n                <BarChart2 className=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Progress Chart */}\n      <DashboardCard title=\"Hourly Progress Tracking\">\n        <div className=\"h-80\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={hourlyProgress}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"hour\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"siteA\" name=\"Site A\" fill=\"#0088FE\" />\n              <Bar dataKey=\"siteB\" name=\"Site B\" fill=\"#00C49F\" />\n              <Bar dataKey=\"siteC\" name=\"Site C\" fill=\"#FFBB28\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </DashboardCard>\n\n      {/* Site Alerts */}\n      <DashboardCard title=\"Construction Alerts\">\n        <div className=\"space-y-4\">\n          <div className=\"flex items-start p-4 bg-yellow-50 rounded-lg\">\n            <AlertTriangle className=\"h-5 w-5 text-yellow-400\" />\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-yellow-800\">Weather Advisory</h3>\n              <div className=\"mt-2 text-sm text-yellow-700\">\n                <p>Expected rain may affect concrete pouring schedule at Site B</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex items-start p-4 bg-red-50 rounded-lg\">\n            <AlertTriangle className=\"h-5 w-5 text-red-400\" />\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">Equipment Maintenance Required</h3>\n              <div className=\"mt-2 text-sm text-red-700\">\n                <p>Crane #3 at Site A requires immediate inspection</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </DashboardCard>\n\n      {/* Resource Schedule */}\n      <DashboardCard title=\"Today's Resource Schedule\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Time Slot\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Activity\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Site\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Resources\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  08:00 - 12:00\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Concrete Foundation Pour\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Site A\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  15 workers, 3 mixers\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                    In Progress\n                  </span>\n                </td>\n              </tr>\n              <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  13:00 - 17:00\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Steel Framework Installation\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  Site B\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  20 workers, 2 cranes\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800\">\n                    Scheduled\n                  </span>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n    </div>\n  );\n}","size_bytes":13458},"client/src/components/manufacturing/QualityControl/index.tsx":{"content":"import { useState } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\nimport { CheckCircle, AlertTriangle, XCircle, BarChart2 } from 'lucide-react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\n\nconst qualityMetrics = [\n  { month: 'Jan', defectRate: 2.1, firstPassYield: 95.5 },\n  { month: 'Feb', defectRate: 1.8, firstPassYield: 96.2 },\n  { month: 'Mar', defectRate: 1.5, firstPassYield: 97.0 },\n  { month: 'Apr', defectRate: 1.9, firstPassYield: 95.8 },\n  { month: 'May', defectRate: 1.6, firstPassYield: 96.5 },\n  { month: 'Jun', defectRate: 1.4, firstPassYield: 97.2 },\n];\n\nconst defectTypes = [\n  { name: 'Minor Defects', value: 65 },\n  { name: 'Major Defects', value: 25 },\n  { name: 'Critical Defects', value: 10 },\n];\n\nconst COLORS = ['#00C49F', '#FFBB28', '#FF8042'];\n\nconst inspectionResults = [\n  {\n    id: 1,\n    batch: 'B-2025-001',\n    product: 'Product X-123',\n    inspectedBy: 'John Smith',\n    date: '2025-03-15',\n    result: 'Pass',\n    defects: 0,\n    notes: 'All quality parameters within acceptable range'\n  },\n  {\n    id: 2,\n    batch: 'B-2025-002',\n    product: 'Product Y-456',\n    inspectedBy: 'Sarah Johnson',\n    date: '2025-03-15',\n    result: 'Minor Issues',\n    defects: 2,\n    notes: 'Minor surface imperfections detected'\n  },\n  {\n    id: 3,\n    batch: 'B-2025-003',\n    product: 'Product Z-789',\n    inspectedBy: 'Mike Wilson',\n    date: '2025-03-14',\n    result: 'Fail',\n    defects: 5,\n    notes: 'Multiple quality parameters out of specification'\n  }\n];\n\nexport function QualityControl() {\n  const [period, setPeriod] = useState('month');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-green-100 rounded-full flex items-center justify-center\">\n              <CheckCircle className=\"h-6 w-6 text-green-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">First Pass Yield</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">96.5%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-yellow-100 rounded-full flex items-center justify-center\">\n              <AlertTriangle className=\"h-6 w-6 text-yellow-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Defect Rate</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">1.8%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-blue-100 rounded-full flex items-center justify-center\">\n              <BarChart2 className=\"h-6 w-6 text-blue-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Quality Score</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">94.2</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-purple-100 rounded-full flex items-center justify-center\">\n              <XCircle className=\"h-6 w-6 text-purple-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Rejection Rate</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">0.5%</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Quality Metrics Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Quality Trends\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={qualityMetrics}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"firstPassYield\"\n                  name=\"First Pass Yield (%)\"\n                  stroke=\"#00C49F\"\n                  strokeWidth={2}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"defectRate\"\n                  name=\"Defect Rate (%)\"\n                  stroke=\"#FF8042\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Defect Distribution\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={defectTypes}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                  label={({ name, value }) => `${name}: ${value}%`}\n                >\n                  {defectTypes.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Recent Inspections */}\n      <DashboardCard title=\"Recent Quality Inspections\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Batch\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Product\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Inspector\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Result\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Notes\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {inspectionResults.map((inspection) => (\n                <tr key={inspection.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    {inspection.batch}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {inspection.product}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {inspection.inspectedBy}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {inspection.date}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      inspection.result === 'Pass'\n                        ? 'bg-green-100 text-green-800'\n                        : inspection.result === 'Minor Issues'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-red-100 text-red-800'\n                    }`}>\n                      {inspection.result}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {inspection.notes}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n\n      {/* Quality Alerts */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Quality Alerts\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-start p-4 bg-red-50 rounded-lg\">\n              <AlertTriangle className=\"h-5 w-5 text-red-400\" />\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Critical Quality Alert</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  <p>Line B - Product Y-456 showing increased defect rate</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-start p-4 bg-yellow-50 rounded-lg\">\n              <AlertTriangle className=\"h-5 w-5 text-yellow-400\" />\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-yellow-800\">Quality Check Required</h3>\n                <div className=\"mt-2 text-sm text-yellow-700\">\n                  <p>Batch B-2025-004 pending final quality inspection</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Quality Metrics\">\n          <div className=\"space-y-4\">\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Process Capability</span>\n                <span className=\"text-sm font-medium text-gray-900\">1.33</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-primary-500 h-2 rounded-full\" style={{ width: '85%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Customer Complaints</span>\n                <span className=\"text-sm font-medium text-gray-900\">0.5%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '95%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Inspection Coverage</span>\n                <span className=\"text-sm font-medium text-gray-900\">98%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-blue-500 h-2 rounded-full\" style={{ width: '98%' }}></div>\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n    </div>\n  );\n}","size_bytes":11627},"client/src/components/projects/ActiveProjects/index.tsx":{"content":"import { useState } from 'react';\nimport { Search, Filter, Plus, Edit, Trash2, MoreVertical } from 'lucide-react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\n\nconst projects = [\n  {\n    id: 1,\n    name: 'Website Redesign',\n    manager: 'John Smith',\n    team: ['Design', 'Frontend', 'Backend'],\n    startDate: '2025-01-15',\n    deadline: '2025-04-30',\n    progress: 65,\n    status: 'On Track',\n    priority: 'High'\n  },\n  {\n    id: 2,\n    name: 'Mobile App Development',\n    manager: 'Sarah Johnson',\n    team: ['Mobile', 'Backend', 'QA'],\n    startDate: '2025-02-01',\n    deadline: '2025-06-30',\n    progress: 45,\n    status: 'At Risk',\n    priority: 'Medium'\n  },\n  {\n    id: 3,\n    name: 'Data Migration',\n    manager: 'Mike Wilson',\n    team: ['Database', 'Backend'],\n    startDate: '2025-03-01',\n    deadline: '2025-05-15',\n    progress: 25,\n    status: 'Delayed',\n    priority: 'High'\n  }\n];\n\nexport function ActiveProjects() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState('All');\n\n  const filteredProjects = projects.filter(project => {\n    const matchesSearch = project.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         project.manager.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = selectedStatus === 'All' || project.status === selectedStatus;\n    return matchesSearch && matchesStatus;\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with search and filters */}\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <Search className=\"h-5 w-5 text-gray-400\" />\n              </div>\n              <input\n                type=\"text\"\n                className=\"focus:ring-primary-500 focus:border-primary-500 block w-full pl-10 sm:text-sm border-gray-300 rounded-md\"\n                placeholder=\"Search projects...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n          </div>\n          \n          <div className=\"flex flex-wrap items-center gap-4\">\n            <select\n              value={selectedStatus}\n              onChange={(e) => setSelectedStatus(e.target.value)}\n              className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n            >\n              <option>All Status</option>\n              <option>On Track</option>\n              <option>At Risk</option>\n              <option>Delayed</option>\n            </select>\n            \n            <button className=\"btn btn-outline\">\n              <Filter className=\"h-4 w-4 mr-2\" />\n              More Filters\n            </button>\n            \n            <button className=\"btn btn-primary\">\n              <Plus className=\"h-4 w-4 mr-2\" />\n              New Project\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Project List */}\n      <DashboardCard title=\"Active Projects\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Project\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Manager\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Team\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Timeline\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Progress\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Priority\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {filteredProjects.map((project) => (\n                <tr key={project.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm font-medium text-gray-900\">{project.name}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {project.manager}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex flex-wrap gap-1\">\n                      {project.team.map((member, index) => (\n                        <span\n                          key={index}\n                          className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\"\n                        >\n                          {member}\n                        </span>\n                      ))}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    <div>{project.startDate}</div>\n                    <div>{project.deadline}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex flex-col items-center\">\n                      <span className=\"text-sm text-gray-900\">{project.progress}%</span>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2 mt-1\">\n                        <div\n                          className=\"bg-primary-600 h-2 rounded-full\"\n                          style={{ width: `${project.progress}%` }}\n                        ></div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      project.status === 'On Track'\n                        ? 'bg-green-100 text-green-800'\n                        : project.status === 'At Risk'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-red-100 text-red-800'\n                    }`}>\n                      {project.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      project.priority === 'High'\n                        ? 'bg-red-100 text-red-800'\n                        : 'bg-yellow-100 text-yellow-800'\n                    }`}>\n                      {project.priority}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    <button className=\"text-primary-600 hover:text-primary-900 mr-3\">\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button className=\"text-red-600 hover:text-red-900 mr-3\">\n                      <Trash2 className=\"h-4 w-4\" />\n                    </button>\n                    <button className=\"text-gray-400 hover:text-gray-500\">\n                      <MoreVertical className=\"h-4 w-4\" />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n    </div>\n  );\n}","size_bytes":8479},"client/src/components/projects/ProjectCalendar/index.tsx":{"content":"import { useState } from 'react';\nimport { Calendar, Clock, Users, AlertTriangle } from 'lucide-react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\n\nconst events = [\n  {\n    id: 1,\n    title: 'Project Kickoff',\n    project: 'Website Redesign',\n    date: '2025-03-20',\n    time: '10:00 AM',\n    attendees: ['John Smith', 'Sarah Johnson', 'Mike Wilson'],\n    type: 'Meeting'\n  },\n  {\n    id: 2,\n    title: 'Sprint Review',\n    project: 'Mobile App Development',\n    date: '2025-03-21',\n    time: '2:00 PM',\n    attendees: ['Sarah Johnson', 'Mike Wilson'],\n    type: 'Review'\n  },\n  {\n    id: 3,\n    title: 'Database Migration',\n    project: 'Data Migration',\n    date: '2025-03-22',\n    time: '9:00 AM',\n    attendees: ['John Smith', 'Mike Wilson'],\n    type: 'Milestone'\n  }\n];\n\nexport function ProjectCalendar() {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedView, setSelectedView] = useState('month');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <Calendar className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Today's Events</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">5</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <Clock className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Upcoming</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">12</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <Users className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Team Meetings</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">8</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <AlertTriangle className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Deadlines</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">3</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Calendar View */}\n      <DashboardCard title=\"Project Calendar\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center space-x-4\">\n            <button className=\"btn btn-outline\">Today</button>\n            <div className=\"flex items-center space-x-2\">\n              <button className=\"p-2 hover:bg-gray-100 rounded\">\n                <svg className=\"h-5 w-5 text-gray-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n              <button className=\"p-2 hover:bg-gray-100 rounded\">\n                <svg className=\"h-5 w-5 text-gray-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n            <h3 className=\"text-lg font-medium text-gray-900\">March 2025</h3>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <button\n              className={`px-3 py-1 rounded ${\n                selectedView === 'month'\n                  ? 'bg-primary-100 text-primary-600'\n                  : 'text-gray-600 hover:bg-gray-100'\n              }`}\n              onClick={() => setSelectedView('month')}\n            >\n              Month\n            </button>\n            <button\n              className={`px-3 py-1 rounded ${\n                selectedView === 'week'\n                  ? 'bg-primary-100 text-primary-600'\n                  : 'text-gray-600 hover:bg-gray-100'\n              }`}\n              onClick={() => setSelectedView('week')}\n            >\n              Week\n            </button>\n            <button\n              className={`px-3 py-1 rounded ${\n                selectedView === 'day'\n                  ? 'bg-primary-100 text-primary-600'\n                  : 'text-gray-600 hover:bg-gray-100'\n              }`}\n              onClick={() => setSelectedView('day')}\n            >\n              Day\n            </button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-7 gap-px bg-gray-200\">\n          {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((day) => (\n            <div key={day} className=\"bg-gray-50 py-2 text-center text-sm font-medium text-gray-500\">\n              {day}\n            </div>\n          ))}\n          {Array.from({ length: 35 }).map((_, index) => (\n            <div\n              key={index}\n              className=\"bg-white min-h-[120px] p-2 text-sm text-gray-500 hover:bg-gray-50\"\n            >\n              {index + 1}\n            </div>\n          ))}\n        </div>\n      </DashboardCard>\n\n      {/* Upcoming Events */}\n      <DashboardCard title=\"Upcoming Events\">\n        <div className=\"space-y-6\">\n          {events.map((event) => (\n            <div key={event.id} className=\"flex items-start space-x-4\">\n              <div className=\"flex-shrink-0\">\n                <div className={`h-10 w-10 rounded-lg flex items-center justify-center ${\n                  event.type === 'Meeting'\n                    ? 'bg-blue-100 text-blue-600'\n                    : event.type === 'Review'\n                    ? 'bg-purple-100 text-purple-600'\n                    : 'bg-green-100 text-green-600'\n                }`}>\n                  {event.type === 'Meeting' ? (\n                    <Users className=\"h-5 w-5\" />\n                  ) : event.type === 'Review' ? (\n                    <Clock className=\"h-5 w-5\" />\n                  ) : (\n                    <Calendar className=\"h-5 w-5\" />\n                  )}\n                </div>\n              </div>\n              <div className=\"flex-1\">\n                <div className=\"flex items-center justify-between\">\n                  <h4 className=\"text-sm font-medium text-gray-900\">{event.title}</h4>\n                  <span className=\"text-sm text-gray-500\">{event.time}</span>\n                </div>\n                <p className=\"mt-1 text-sm text-gray-500\">{event.project}</p>\n                <div className=\"mt-2 flex flex-wrap gap-1\">\n                  {event.attendees.map((attendee, index) => (\n                    <span\n                      key={index}\n                      className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\"\n                    >\n                      {attendee}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </DashboardCard>\n    </div>\n  );\n}","size_bytes":8087},"client/src/components/projects/ProjectOverview/index.tsx":{"content":"import { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\nimport { FolderKanban, Clock, Users, TrendingUp, AlertTriangle } from 'lucide-react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\n\nconst projectStatus = [\n  { name: 'On Track', value: 60 },\n  { name: 'At Risk', value: 25 },\n  { name: 'Delayed', value: 15 }\n];\n\nconst COLORS = ['#00C49F', '#FFBB28', '#FF8042'];\n\nconst projectProgress = [\n  { month: 'Jan', planned: 20, actual: 18 },\n  { month: 'Feb', planned: 40, actual: 35 },\n  { month: 'Mar', planned: 60, actual: 55 },\n  { month: 'Apr', planned: 80, actual: 72 },\n  { month: 'May', planned: 90, actual: 85 },\n  { month: 'Jun', planned: 100, actual: 95 },\n];\n\nconst resourceAllocation = [\n  { department: 'Engineering', allocated: 45, available: 50 },\n  { department: 'Design', allocated: 20, available: 25 },\n  { department: 'Marketing', allocated: 15, available: 20 },\n  { department: 'QA', allocated: 10, available: 15 },\n];\n\nexport function ProjectOverview() {\n  const [period, setPeriod] = useState('month');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <FolderKanban className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Active Projects</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">24</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <Clock className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">On-Time Delivery</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">85%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <Users className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Team Members</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">156</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <TrendingUp className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Budget Utilization</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">92%</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Project Status Distribution\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={projectStatus}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                  label={({ name, value }) => `${name}: ${value}%`}\n                >\n                  {projectStatus.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Project Progress\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={projectProgress}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"planned\"\n                  name=\"Planned Progress\"\n                  stroke=\"#0088FE\"\n                  strokeWidth={2}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"actual\"\n                  name=\"Actual Progress\"\n                  stroke=\"#00C49F\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Resource Allocation */}\n      <DashboardCard title=\"Resource Allocation\">\n        <div className=\"h-80\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={resourceAllocation}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"department\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"allocated\" name=\"Allocated Resources\" fill=\"#8884d8\" />\n              <Bar dataKey=\"available\" name=\"Available Resources\" fill=\"#82ca9d\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </DashboardCard>\n\n      {/* Project Insights */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <DashboardCard title=\"Project Health\">\n          <div className=\"space-y-4\">\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Schedule Performance</span>\n                <span className=\"text-sm font-medium text-gray-900\">92%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-primary-500 h-2 rounded-full\" style={{ width: '92%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Cost Performance</span>\n                <span className=\"text-sm font-medium text-gray-900\">88%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-secondary-500 h-2 rounded-full\" style={{ width: '88%' }}></div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between items-center mb-1\">\n                <span className=\"text-sm font-medium text-gray-900\">Quality Metrics</span>\n                <span className=\"text-sm font-medium text-gray-900\">95%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-accent-500 h-2 rounded-full\" style={{ width: '95%' }}></div>\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Risk Assessment\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-start\">\n              <AlertTriangle className=\"h-5 w-5 text-error-500 mt-0.5\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-900\">High Risk</p>\n                <p className=\"text-xs text-gray-500\">Resource constraints in Engineering team</p>\n              </div>\n            </div>\n            <div className=\"flex items-start\">\n              <AlertTriangle className=\"h-5 w-5 text-warning-500 mt-0.5\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-900\">Medium Risk</p>\n                <p className=\"text-xs text-gray-500\">Potential delay in vendor deliveries</p>\n              </div>\n            </div>\n            <div className=\"flex items-start\">\n              <AlertTriangle className=\"h-5 w-5 text-success-500 mt-0.5\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-900\">Low Risk</p>\n                <p className=\"text-xs text-gray-500\">Minor budget variations</p>\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Upcoming Milestones\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-start\">\n              <Clock className=\"h-5 w-5 text-gray-400 mt-0.5\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-900\">Phase 1 Completion</p>\n                <p className=\"text-xs text-gray-500\">Due in 5 days</p>\n              </div>\n            </div>\n            <div className=\"flex items-start\">\n              <Clock className=\"h-5 w-5 text-gray-400 mt-0.5\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-900\">Client Review</p>\n                <p className=\"text-xs text-gray-500\">Due in 2 weeks</p>\n              </div>\n            </div>\n            <div className=\"flex items-start\">\n              <Clock className=\"h-5 w-5 text-gray-400 mt-0.5\" />\n              <div className=\"ml-3\">\n                <p className=\"text-sm font-medium text-gray-900\">Beta Launch</p>\n                <p className=\"text-xs text-gray-500\">Due in 1 month</p>\n              </div>\n            </div>\n          </div>\n        </DashboardCard>\n      </div>\n    </div>\n  );\n}","size_bytes":10192},"client/src/components/projects/ProjectResources/index.tsx":{"content":"import { useState } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell\n} from 'recharts';\nimport { Users, Clock, DollarSign, Briefcase } from 'lucide-react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\n\nconst resourceAllocation = [\n  { department: 'Engineering', allocated: 45, available: 50 },\n  { department: 'Design', allocated: 20, available: 25 },\n  { department: 'Marketing', allocated: 15, available: 20 },\n  { department: 'QA', allocated: 10, available: 15 },\n];\n\nconst skillDistribution = [\n  { name: 'Frontend', value: 30 },\n  { name: 'Backend', value: 25 },\n  { name: 'Design', value: 20 },\n  { name: 'DevOps', value: 15 },\n  { name: 'QA', value: 10 },\n];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nconst teamMembers = [\n  {\n    id: 1,\n    name: 'John Smith',\n    role: 'Senior Developer',\n    department: 'Engineering',\n    availability: 'Available',\n    skills: ['React', 'Node.js', 'TypeScript'],\n    utilization: 85\n  },\n  {\n    id: 2,\n    name: 'Sarah Johnson',\n    role: 'UI Designer',\n    department: 'Design',\n    availability: 'Assigned',\n    skills: ['Figma', 'UI/UX', 'Prototyping'],\n    utilization: 90\n  },\n  {\n    id: 3,\n    name: 'Mike Wilson',\n    role: 'QA Engineer',\n    department: 'QA',\n    availability: 'Available',\n    skills: ['Testing', 'Automation', 'Selenium'],\n    utilization: 75\n  }\n];\n\nexport function ProjectResources() {\n  const [selectedDepartment, setSelectedDepartment] = useState('All');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <Users className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Total Resources</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">110</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-secondary-100 rounded-full flex items-center justify-center\">\n              <Clock className=\"h-6 w-6 text-secondary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Utilization Rate</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">85%</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-accent-100 rounded-full flex items-center justify-center\">\n              <DollarSign className=\"h-6 w-6 text-accent-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Resource Cost</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">$125K</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Briefcase className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Active Projects</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">24</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Resource Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardCard title=\"Resource Allocation\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={resourceAllocation}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"department\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"allocated\" name=\"Allocated\" fill=\"#8884d8\" />\n                <Bar dataKey=\"available\" name=\"Available\" fill=\"#82ca9d\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n\n        <DashboardCard title=\"Skill Distribution\">\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={skillDistribution}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                  label={({ name, value }) => `${name}: ${value}%`}\n                >\n                  {skillDistribution.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </DashboardCard>\n      </div>\n\n      {/* Team Members */}\n      <DashboardCard title=\"Team Members\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Member\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Role\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Department\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Skills\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Availability\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Utilization\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {teamMembers.map((member) => (\n                <tr key={member.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm font-medium text-gray-900\">{member.name}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {member.role}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {member.department}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex flex-wrap gap-1\">\n                      {member.skills.map((skill, index) => (\n                        <span\n                          key={index}\n                          className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\"\n                        >\n                          {skill}\n                        </span>\n                      ))}\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      member.availability === 'Available'\n                        ? 'bg-green-100 text-green-800'\n                        : 'bg-yellow-100 text-yellow-800'\n                    }`}>\n                      {member.availability}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex flex-col items-center\">\n                      <span className=\"text-sm text-gray-900\">{member.utilization}%</span>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2 mt-1\">\n                        <div\n                          className=\"bg-primary-600 h-2 rounded-full\"\n                          style={{ width: `${member.utilization}%` }}\n                        ></div>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n    </div>\n  );\n}","size_bytes":9169},"client/src/components/projects/ProjectTasks/index.tsx":{"content":"import { useState } from 'react';\nimport { Search, Filter, Plus, CheckCircle, Clock, AlertTriangle } from 'lucide-react';\nimport { DashboardCard } from '../../dashboard/DashboardCard';\n\nconst tasks = [\n  {\n    id: 1,\n    title: 'Design System Implementation',\n    project: 'Website Redesign',\n    assignee: 'Sarah Johnson',\n    dueDate: '2025-03-20',\n    priority: 'High',\n    status: 'In Progress',\n    progress: 75\n  },\n  {\n    id: 2,\n    title: 'API Integration',\n    project: 'Mobile App Development',\n    assignee: 'Mike Wilson',\n    dueDate: '2025-03-25',\n    priority: 'Medium',\n    status: 'Todo',\n    progress: 0\n  },\n  {\n    id: 3,\n    title: 'Database Migration Script',\n    project: 'Data Migration',\n    assignee: 'John Smith',\n    dueDate: '2025-03-18',\n    priority: 'High',\n    status: 'Review',\n    progress: 90\n  }\n];\n\nexport function ProjectTasks() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState('All');\n\n  const filteredTasks = tasks.filter(task => {\n    const matchesSearch = task.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         task.project.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         task.assignee.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = selectedStatus === 'All' || task.status === selectedStatus;\n    return matchesSearch && matchesStatus;\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with search and filters */}\n      <div className=\"bg-white shadow rounded-lg p-6\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"relative rounded-md shadow-sm\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <Search className=\"h-5 w-5 text-gray-400\" />\n              </div>\n              <input\n                type=\"text\"\n                className=\"focus:ring-primary-500 focus:border-primary-500 block w-full pl-10 sm:text-sm border-gray-300 rounded-md\"\n                placeholder=\"Search tasks...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n          </div>\n          \n          <div className=\"flex flex-wrap items-center gap-4\">\n            <select\n              value={selectedStatus}\n              onChange={(e) => setSelectedStatus(e.target.value)}\n              className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n            >\n              <option>All Status</option>\n              <option>Todo</option>\n              <option>In Progress</option>\n              <option>Review</option>\n              <option>Done</option>\n            </select>\n            \n            <button className=\"btn btn-outline\">\n              <Filter className=\"h-4 w-4 mr-2\" />\n              More Filters\n            </button>\n            \n            <button className=\"btn btn-primary\">\n              <Plus className=\"h-4 w-4 mr-2\" />\n              New Task\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Task Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-primary-100 rounded-full flex items-center justify-center\">\n              <CheckCircle className=\"h-6 w-6 text-primary-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Completed Tasks</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">45</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-warning-100 rounded-full flex items-center justify-center\">\n              <Clock className=\"h-6 w-6 text-warning-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">In Progress</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">28</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-error-100 rounded-full flex items-center justify-center\">\n              <AlertTriangle className=\"h-6 w-6 text-error-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Overdue</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">5</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 h-12 w-12 bg-success-100 rounded-full flex items-center justify-center\">\n              <CheckCircle className=\"h-6 w-6 text-success-600\" />\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Completion Rate</p>\n              <p className=\"text-2xl font-semibold text-gray-900\">92%</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Task List */}\n      <DashboardCard title=\"Tasks\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Task\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Project\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Assignee\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Due Date\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Progress\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Priority\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {filteredTasks.map((task) => (\n                <tr key={task.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm font-medium text-gray-900\">{task.title}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {task.project}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {task.assignee}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {task.dueDate}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex flex-col items-center\">\n                      <span className=\"text-sm text-gray-900\">{task.progress}%</span>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2 mt-1\">\n                        <div\n                          className=\"bg-primary-600 h-2 rounded-full\"\n                          style={{ width: `${task.progress}%` }}\n                        ></div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      task.status === 'Done'\n                        ? 'bg-green-100 text-green-800'\n                        : task.status === 'In Progress'\n                        ? 'bg-blue-100 text-blue-800'\n                        : task.status === 'Review'\n                        ? 'bg-purple-100 text-purple-800'\n                        : 'bg-gray-100 text-gray-800'\n                    }`}>\n                      {task.status}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                      task.priority === 'High'\n                        ? 'bg-red-100 text-red-800'\n                        : 'bg-yellow-100 text-yellow-800'\n                    }`}>\n                      {task.priority}\n                    </span>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </DashboardCard>\n    </div>\n  );\n}","size_bytes":9580},"client/src/components/settings/GeneralSettings/index.tsx":{"content":"import { useState } from 'react';\nimport { Globe, Palette, HelpCircle } from 'lucide-react';\n\nexport function GeneralSettings() {\n  const [language, setLanguage] = useState('en');\n  const [timezone, setTimezone] = useState('UTC');\n  const [theme, setTheme] = useState('light');\n  const [dateFormat, setDateFormat] = useState('MM/DD/YYYY');\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white shadow rounded-lg divide-y divide-gray-200\">\n        {/* Language and Region */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Language and Region</h3>\n            <Globe className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"language\" className=\"block text-sm font-medium text-gray-700\">\n                Language\n              </label>\n              <select\n                id=\"language\"\n                value={language}\n                onChange={(e) => setLanguage(e.target.value)}\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option value=\"en\">English</option>\n                <option value=\"es\">Spanish</option>\n                <option value=\"fr\">French</option>\n                <option value=\"de\">German</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"timezone\" className=\"block text-sm font-medium text-gray-700\">\n                Timezone\n              </label>\n              <select\n                id=\"timezone\"\n                value={timezone}\n                onChange={(e) => setTimezone(e.target.value)}\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option value=\"UTC\">UTC</option>\n                <option value=\"EST\">Eastern Time</option>\n                <option value=\"CST\">Central Time</option>\n                <option value=\"PST\">Pacific Time</option>\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"dateFormat\" className=\"block text-sm font-medium text-gray-700\">\n                Date Format\n              </label>\n              <select\n                id=\"dateFormat\"\n                value={dateFormat}\n                onChange={(e) => setDateFormat(e.target.value)}\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option value=\"MM/DD/YYYY\">MM/DD/YYYY</option>\n                <option value=\"DD/MM/YYYY\">DD/MM/YYYY</option>\n                <option value=\"YYYY-MM-DD\">YYYY-MM-DD</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* Appearance */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Appearance</h3>\n            <Palette className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"theme\" className=\"block text-sm font-medium text-gray-700\">\n                Theme\n              </label>\n              <select\n                id=\"theme\"\n                value={theme}\n                onChange={(e) => setTheme(e.target.value)}\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n              >\n                <option value=\"light\">Light</option>\n                <option value=\"dark\">Dark</option>\n                <option value=\"system\">System</option>\n              </select>\n            </div>\n            <div>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                />\n                <span className=\"ml-2 text-sm text-gray-900\">Enable animations</span>\n              </label>\n            </div>\n            <div>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                />\n                <span className=\"ml-2 text-sm text-gray-900\">Compact mode</span>\n              </label>\n            </div>\n          </div>\n        </div>\n\n        {/* Help and Support */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Help and Support</h3>\n            <HelpCircle className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          <div className=\"space-y-4\">\n            <button className=\"w-full text-left px-4 py-3 rounded-lg border border-gray-200 hover:bg-gray-50\">\n              <div className=\"text-sm font-medium text-gray-900\">Documentation</div>\n              <div className=\"text-sm text-gray-500\">View user guides and documentation</div>\n            </button>\n            <button className=\"w-full text-left px-4 py-3 rounded-lg border border-gray-200 hover:bg-gray-50\">\n              <div className=\"text-sm font-medium text-gray-900\">Support Center</div>\n              <div className=\"text-sm text-gray-500\">Get help from our support team</div>\n            </button>\n            <button className=\"w-full text-left px-4 py-3 rounded-lg border border-gray-200 hover:bg-gray-50\">\n              <div className=\"text-sm font-medium text-gray-900\">Feedback</div>\n              <div className=\"text-sm text-gray-500\">Share your feedback and suggestions</div>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Save Changes */}\n      <div className=\"flex justify-end\">\n        <button className=\"btn btn-primary\">Save Changes</button>\n      </div>\n    </div>\n  );\n}","size_bytes":6329},"client/src/components/settings/IntegrationSettings/index.tsx":{"content":"import { useState } from 'react';\nimport { Database, Link, Check, X } from 'lucide-react';\n\nconst integrations = [\n  {\n    id: 1,\n    name: 'Google Calendar',\n    description: 'Sync your calendar events',\n    icon: 'https://www.google.com/calendar/images/favicon_v2014_1.ico',\n    status: 'connected',\n    lastSync: '2 hours ago'\n  },\n  {\n    id: 2,\n    name: 'Slack',\n    description: 'Get notifications in your Slack channels',\n    icon: 'https://a.slack-edge.com/80588/marketing/img/meta/favicon-32.png',\n    status: 'disconnected'\n  },\n  {\n    id: 3,\n    name: 'Microsoft Teams',\n    description: 'Collaborate with your team in Microsoft Teams',\n    icon: 'https://teams.microsoft.com/favicon.ico',\n    status: 'connected',\n    lastSync: '1 day ago'\n  }\n];\n\nexport function IntegrationSettings() {\n  const [activeIntegrations, setActiveIntegrations] = useState(\n    integrations.reduce((acc, integration) => ({\n      ...acc,\n      [integration.id]: integration.status === 'connected'\n    }), {})\n  );\n\n  const toggleIntegration = (id: number) => {\n    setActiveIntegrations(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white shadow rounded-lg divide-y divide-gray-200\">\n        {/* Available Integrations */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Available Integrations</h3>\n            <Database className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          \n          <div className=\"space-y-6\">\n            {integrations.map((integration) => (\n              <div\n                key={integration.id}\n                className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\"\n              >\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"flex-shrink-0\">\n                    <img\n                      src={integration.icon}\n                      alt={integration.name}\n                      className=\"h-8 w-8 rounded\"\n                    />\n                  </div>\n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-900\">{integration.name}</h4>\n                    <p className=\"text-sm text-gray-500\">{integration.description}</p>\n                    {integration.lastSync && (\n                      <p className=\"text-xs text-gray-400 mt-1\">\n                        Last synced: {integration.lastSync}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-4\">\n                  {activeIntegrations[integration.id] ? (\n                    <>\n                      <span className=\"flex items-center text-sm text-success-600\">\n                        <Check className=\"h-4 w-4 mr-1\" />\n                        Connected\n                      </span>\n                      <button\n                        className=\"text-sm text-gray-500 hover:text-gray-700\"\n                        onClick={() => toggleIntegration(integration.id)}\n                      >\n                        Disconnect\n                      </button>\n                    </>\n                  ) : (\n                    <button\n                      className=\"btn btn-primary btn-sm\"\n                      onClick={() => toggleIntegration(integration.id)}\n                    >\n                      <Link className=\"h-4 w-4 mr-2\" />\n                      Connect\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Integration Settings */}\n        <div className=\"p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Integration Settings</h3>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                  defaultChecked\n                />\n                <span className=\"ml-2 text-sm text-gray-900\">\n                  Auto-sync integrations\n                </span>\n              </label>\n              <p className=\"mt-1 text-sm text-gray-500 ml-6\">\n                Automatically sync data with connected integrations\n              </p>\n            </div>\n            \n            <div>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                  defaultChecked\n                />\n                <span className=\"ml-2 text-sm text-gray-900\">\n                  Notify on sync errors\n                </span>\n              </label>\n              <p className=\"mt-1 text-sm text-gray-500 ml-6\">\n                Receive notifications when integration syncs fail\n              </p>\n            </div>\n            \n            <div>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                  defaultChecked\n                />\n                <span className=\"ml-2 text-sm text-gray-900\">\n                  Allow data sharing\n                </span>\n              </label>\n              <p className=\"mt-1 text-sm text-gray-500 ml-6\">\n                Share data between connected integrations\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Sync Schedule */}\n        <div className=\"p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Sync Schedule</h3>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"syncInterval\" className=\"block text-sm font-medium text-gray-700\">\n                Sync Interval\n              </label>\n              <select\n                id=\"syncInterval\"\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n                defaultValue=\"15\"\n              >\n                <option value=\"5\">Every 5 minutes</option>\n                <option value=\"15\">Every 15 minutes</option>\n                <option value=\"30\">Every 30 minutes</option>\n                <option value=\"60\">Every hour</option>\n              </select>\n            </div>\n            \n            <div>\n              <label htmlFor=\"retryAttempts\" className=\"block text-sm font-medium text-gray-700\">\n                Retry Attempts\n              </label>\n              <select\n                id=\"retryAttempts\"\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm rounded-md\"\n                defaultValue=\"3\"\n              >\n                <option value=\"1\">1 attempt</option>\n                <option value=\"3\">3 attempts</option>\n                <option value=\"5\">5 attempts</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Save Changes */}\n      <div className=\"flex justify-end space-x-3\">\n        <button className=\"btn btn-outline\">Reset All</button>\n        <button className=\"btn btn-primary\">Save Changes</button>\n      </div>\n    </div>\n  );\n}","size_bytes":7622},"client/src/components/settings/NotificationSettings/index.tsx":{"content":"import { useState } from 'react';\nimport { Bell, Mail, MessageSquare, Calendar } from 'lucide-react';\n\nexport function NotificationSettings() {\n  const [emailNotifications, setEmailNotifications] = useState({\n    security: true,\n    updates: true,\n    marketing: false,\n  });\n\n  const [pushNotifications, setPushNotifications] = useState({\n    messages: true,\n    reminders: true,\n    updates: false,\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white shadow rounded-lg divide-y divide-gray-200\">\n        {/* Email Notifications */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Email Notifications</h3>\n            <Mail className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          \n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-900\">Security Alerts</p>\n                <p className=\"text-sm text-gray-500\">\n                  Get notified about security-related events\n                </p>\n              </div>\n              <button\n                className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${\n                  emailNotifications.security ? 'bg-primary-600' : 'bg-gray-200'\n                }`}\n                onClick={() => setEmailNotifications(prev => ({\n                  ...prev,\n                  security: !prev.security\n                }))}\n              >\n                <span\n                  className={`pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${\n                    emailNotifications.security ? 'translate-x-5' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-900\">Product Updates</p>\n                <p className=\"text-sm text-gray-500\">\n                  Receive updates about new features and improvements\n                </p>\n              </div>\n              <button\n                className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${\n                  emailNotifications.updates ? 'bg-primary-600' : 'bg-gray-200'\n                }`}\n                onClick={() => setEmailNotifications(prev => ({\n                  ...prev,\n                  updates: !prev.updates\n                }))}\n              >\n                <span\n                  className={`pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${\n                    emailNotifications.updates ? 'translate-x-5' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-900\">Marketing</p>\n                <p className=\"text-sm text-gray-500\">\n                  Receive marketing and promotional emails\n                </p>\n              </div>\n              <button\n                className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${\n                  emailNotifications.marketing ? 'bg-primary-600' : 'bg-gray-200'\n                }`}\n                onClick={() => setEmailNotifications(prev => ({\n                  ...prev,\n                  marketing: !prev.marketing\n                }))}\n              >\n                <span\n                  className={`pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${\n                    emailNotifications.marketing ? 'translate-x-5' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Push Notifications */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Push Notifications</h3>\n            <Bell className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          \n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-900\">Messages</p>\n                <p className=\"text-sm text-gray-500\">\n                  Get notified when you receive new messages\n                </p>\n              </div>\n              <button\n                className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${\n                  pushNotifications.messages ? 'bg-primary-600' : 'bg-gray-200'\n                }`}\n                onClick={() => setPushNotifications(prev => ({\n                  ...prev,\n                  messages: !prev.messages\n                }))}\n              >\n                <span\n                  className={`pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${\n                    pushNotifications.messages ? 'translate-x-5' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-900\">Reminders</p>\n                <p className=\"text-sm text-gray-500\">\n                  Get notified about upcoming events and deadlines\n                </p>\n              </div>\n              <button\n                className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${\n                  pushNotifications.reminders ? 'bg-primary-600' : 'bg-gray-200'\n                }`}\n                onClick={() => setPushNotifications(prev => ({\n                  ...prev,\n                  reminders: !prev.reminders\n                }))}\n              >\n                <span\n                  className={`pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${\n                    pushNotifications.reminders ? 'translate-x-5' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-900\">System Updates</p>\n                <p className=\"text-sm text-gray-500\">\n                  Get notified about system updates and maintenance\n                </p>\n              </div>\n              <button\n                className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${\n                  pushNotifications.updates ? 'bg-primary-600' : 'bg-gray-200'\n                }`}\n                onClick={() => setPushNotifications(prev => ({\n                  ...prev,\n                  updates: !prev.updates\n                }))}\n              >\n                <span\n                  className={`pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${\n                    pushNotifications.updates ? 'translate-x-5' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Notification Schedule */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Notification Schedule</h3>\n            <Calendar className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"quietHoursStart\" className=\"block text-sm font-medium text-gray-700\">\n                Quiet Hours Start\n              </label>\n              <input\n                type=\"time\"\n                id=\"quietHoursStart\"\n                className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                defaultValue=\"22:00\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"quietHoursEnd\" className=\"block text-sm font-medium text-gray-700\">\n                Quiet Hours End\n              </label>\n              <input\n                type=\"time\"\n                id=\"quietHoursEnd\"\n                className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                defaultValue=\"07:00\"\n              />\n            </div>\n            <div>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                  defaultChecked\n                />\n                <span className=\"ml-2 text-sm text-gray-900\">\n                  Enable Do Not Disturb during quiet hours\n                </span>\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Save Changes */}\n      <div className=\"flex justify-end space-x-3\">\n        <button className=\"btn btn-outline\">Reset to Default</button>\n        <button className=\"btn btn-primary\">Save Changes</button>\n      </div>\n    </div>\n  );\n}","size_bytes":10611},"client/src/components/settings/ProfileSettings/index.tsx":{"content":"import { useState } from 'react';\nimport { Camera, Mail, Phone, MapPin, User, Building, Calendar, Save, X } from 'lucide-react';\nimport { useAuthStore } from '../../../stores/authStore';\n\nexport function ProfileSettings() {\n  const { user, updateUser } = useAuthStore();\n  const [isLoading, setIsLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  \n  // Initialize profile data from current user or default values\n  const [profileData, setProfileData] = useState({\n    firstName: user?.name.split(' ')[0] || 'Admin',\n    lastName: user?.name.split(' ')[1] || 'User',\n    email: user?.email || 'admin@example.com',\n    phone: '+1 (555) 123-4567',\n    title: 'System Administrator',\n    department: 'Information Technology',\n    location: 'New York, NY',\n    bio: 'Experienced system administrator with expertise in ERP systems and team leadership.',\n    role: user?.role || 'Administrator'\n  });\n\n  // Store original data for cancel functionality\n  const [originalData, setOriginalData] = useState(profileData);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setProfileData(prev => ({ ...prev, [name]: value }));\n    // Clear field error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[name];\n        return newErrors;\n      });\n    }\n  };\n\n  // Validate form data\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!profileData.firstName.trim()) {\n      newErrors.firstName = 'First name is required';\n    }\n    if (!profileData.lastName.trim()) {\n      newErrors.lastName = 'Last name is required';\n    }\n    if (!profileData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(profileData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n    if (!profileData.title.trim()) {\n      newErrors.title = 'Job title is required';\n    }\n    if (!profileData.department.trim()) {\n      newErrors.department = 'Department is required';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Handle save changes\n  const handleSave = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Update user in auth store and localStorage\n      const updatedUser = {\n        ...user!,\n        name: `${profileData.firstName} ${profileData.lastName}`,\n        email: profileData.email\n      };\n\n      // Save to localStorage (simulating JSON file storage)\n      const profileStorageKey = 'erp_user_profile';\n      localStorage.setItem(profileStorageKey, JSON.stringify(profileData));\n      localStorage.setItem('erp_user', JSON.stringify(updatedUser));\n\n      // Update original data to reflect saved state\n      setOriginalData(profileData);\n      \n      // Update auth store if needed\n      if (updateUser) {\n        updateUser(updatedUser);\n      }\n\n      setSuccessMessage('Profile updated successfully!');\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (error) {\n      console.error('Error saving profile:', error);\n      setErrors({ submit: 'Failed to save profile. Please try again.' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle cancel changes\n  const handleCancel = () => {\n    setProfileData(originalData);\n    setErrors({});\n    setSuccessMessage('');\n  };\n\n  // Check if form has changes\n  const hasChanges = JSON.stringify(profileData) !== JSON.stringify(originalData);\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-4 sm:p-6\">\n      {/* Success Message */}\n      {successMessage && (\n        <div className=\"mb-6 bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded-md\">\n          <span className=\"block sm:inline font-medium\">{successMessage}</span>\n        </div>\n      )}\n\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-indigo-600 to-purple-700 rounded-xl p-4 sm:p-6 mb-6 shadow-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3 sm:space-x-4\">\n            <div className=\"bg-white bg-opacity-20 rounded-lg p-2 sm:p-3\">\n              <User className=\"h-5 w-5 sm:h-6 sm:w-6 text-white\" />\n            </div>\n            <div>\n              <h1 className=\"text-xl sm:text-2xl font-bold text-white\">Profile Settings</h1>\n              <p className=\"text-indigo-100 text-sm sm:text-base\">Manage your personal and professional information</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <form onSubmit={handleSave} className=\"space-y-4 sm:space-y-6\">\n        {/* Profile Photo Section */}\n        <div className=\"bg-gray-50 rounded-lg p-4 sm:p-6 border border-gray-200\">\n          <h2 className=\"text-base sm:text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Camera className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2 text-indigo-600\" />\n            Profile Photo\n          </h2>\n          <div className=\"flex flex-col sm:flex-row items-start sm:items-center space-y-4 sm:space-y-0 sm:space-x-6\">\n            <div className=\"relative\">\n              <div className=\"h-20 w-20 sm:h-24 sm:w-24 rounded-full bg-gradient-to-br from-indigo-500 to-purple-600 flex items-center justify-center shadow-lg\">\n                <span className=\"text-xl sm:text-2xl font-bold text-white\">\n                  {profileData.firstName[0]}{profileData.lastName[0]}\n                </span>\n              </div>\n              <button \n                type=\"button\"\n                className=\"absolute bottom-0 right-0 p-1.5 rounded-full bg-white shadow-md border-2 border-gray-100 hover:bg-gray-50 transition-all duration-200\"\n                data-testid=\"button-change-photo\"\n              >\n                <Camera className=\"h-3 w-3 sm:h-4 sm:w-4 text-gray-600\" />\n              </button>\n            </div>\n            <div className=\"flex-1\">\n              <h3 className=\"text-sm sm:text-base font-medium text-gray-900\">Update Profile Picture</h3>\n              <p className=\"mt-1 text-xs sm:text-sm text-gray-500\">\n                Upload a professional photo for your profile\n              </p>\n              <div className=\"mt-3 flex flex-wrap gap-2\">\n                <button \n                  type=\"button\"\n                  className=\"px-3 py-1.5 text-xs sm:text-sm font-medium text-indigo-700 bg-indigo-100 rounded-md hover:bg-indigo-200 transition-all duration-200\"\n                  data-testid=\"button-upload-photo\"\n                >\n                  Upload New\n                </button>\n                <button \n                  type=\"button\"\n                  className=\"px-3 py-1.5 text-xs sm:text-sm font-medium text-gray-600 bg-gray-100 rounded-md hover:bg-gray-200 transition-all duration-200\"\n                  data-testid=\"button-remove-photo\"\n                >\n                  Remove\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Personal Information Section */}\n        <div className=\"bg-gray-50 rounded-lg p-4 sm:p-6 border border-gray-200\">\n          <h2 className=\"text-base sm:text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <User className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2 text-blue-600\" />\n            Personal Information\n          </h2>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n              <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                First Name <span className=\"text-red-500\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                name=\"firstName\"\n                value={profileData.firstName}\n                onChange={handleInputChange}\n                className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 text-sm font-medium ${\n                  errors.firstName ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                }`}\n                placeholder=\"Enter first name\"\n                data-testid=\"input-firstName\"\n              />\n              {errors.firstName && <p className=\"mt-1 text-xs text-red-600\">{errors.firstName}</p>}\n            </div>\n\n            <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n              <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                Last Name <span className=\"text-red-500\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                name=\"lastName\"\n                value={profileData.lastName}\n                onChange={handleInputChange}\n                className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 text-sm font-medium ${\n                  errors.lastName ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                }`}\n                placeholder=\"Enter last name\"\n                data-testid=\"input-lastName\"\n              />\n              {errors.lastName && <p className=\"mt-1 text-xs text-red-600\">{errors.lastName}</p>}\n            </div>\n\n            <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n              <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                Email Address <span className=\"text-red-500\">*</span>\n              </label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Mail className=\"h-4 w-4 text-gray-400\" />\n                </div>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={profileData.email}\n                  onChange={handleInputChange}\n                  className={`block w-full pl-10 pr-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 text-sm ${\n                    errors.email ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                  }`}\n                  placeholder=\"Enter email address\"\n                  data-testid=\"input-email\"\n                />\n              </div>\n              {errors.email && <p className=\"mt-1 text-xs text-red-600\">{errors.email}</p>}\n            </div>\n\n            <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n              <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                Phone Number\n              </label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Phone className=\"h-4 w-4 text-gray-400\" />\n                </div>\n                <input\n                  type=\"tel\"\n                  name=\"phone\"\n                  value={profileData.phone}\n                  onChange={handleInputChange}\n                  className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 text-sm\"\n                  placeholder=\"Enter phone number\"\n                  data-testid=\"input-phone\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Professional Information Section */}\n        <div className=\"bg-gray-50 rounded-lg p-4 sm:p-6 border border-gray-200\">\n          <h2 className=\"text-base sm:text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Building className=\"h-4 w-4 sm:h-5 sm:w-5 mr-2 text-green-600\" />\n            Professional Information\n          </h2>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n              <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                Job Title <span className=\"text-red-500\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                name=\"title\"\n                value={profileData.title}\n                onChange={handleInputChange}\n                className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 text-sm ${\n                  errors.title ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                }`}\n                placeholder=\"Enter job title\"\n                data-testid=\"input-title\"\n              />\n              {errors.title && <p className=\"mt-1 text-xs text-red-600\">{errors.title}</p>}\n            </div>\n\n            <div className=\"bg-white rounded-md p-3 border border-gray-300\">\n              <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                Department <span className=\"text-red-500\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                name=\"department\"\n                value={profileData.department}\n                onChange={handleInputChange}\n                className={`block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 text-sm ${\n                  errors.department ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : 'border-gray-300'\n                }`}\n                placeholder=\"Enter department\"\n                data-testid=\"input-department\"\n              />\n              {errors.department && <p className=\"mt-1 text-xs text-red-600\">{errors.department}</p>}\n            </div>\n\n            <div className=\"sm:col-span-2 bg-white rounded-md p-3 border border-gray-300\">\n              <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                Location\n              </label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <MapPin className=\"h-4 w-4 text-gray-400\" />\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"location\"\n                  value={profileData.location}\n                  onChange={handleInputChange}\n                  className=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 text-sm\"\n                  placeholder=\"Enter location\"\n                  data-testid=\"input-location\"\n                />\n              </div>\n            </div>\n\n            <div className=\"sm:col-span-2 bg-white rounded-md p-3 border border-gray-300\">\n              <label className=\"block text-xs sm:text-sm font-medium text-gray-700 mb-1.5\">\n                Professional Bio\n              </label>\n              <textarea\n                name=\"bio\"\n                value={profileData.bio}\n                onChange={handleInputChange}\n                rows={4}\n                className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200 text-sm resize-none\"\n                placeholder=\"Brief description of your professional background...\"\n                data-testid=\"textarea-bio\"\n              />\n              <p className=\"mt-1 text-xs text-gray-500\">\n                Provide a brief overview of your experience and expertise\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Error message */}\n        {errors.submit && (\n          <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n            <span className=\"text-sm font-medium\">{errors.submit}</span>\n          </div>\n        )}\n\n        {/* Action buttons */}\n        <div className=\"flex flex-col sm:flex-row justify-end space-y-2 sm:space-y-0 sm:space-x-3 pt-4 border-t border-gray-200\">\n          <button\n            type=\"button\"\n            onClick={handleCancel}\n            className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-all duration-200 font-medium text-sm\"\n            disabled={isLoading}\n            data-testid=\"button-cancel\"\n          >\n            <X className=\"h-4 w-4 mr-2 inline-block\" />\n            Cancel Changes\n          </button>\n          <button\n            type=\"submit\"\n            className={`px-6 py-2 bg-gradient-to-r from-indigo-600 to-purple-700 text-white rounded-md hover:from-indigo-700 hover:to-purple-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-all duration-200 font-semibold shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed text-sm ${\n              !hasChanges ? 'opacity-50 cursor-not-allowed' : ''\n            }`}\n            disabled={isLoading || !hasChanges}\n            data-testid=\"button-save\"\n          >\n            {isLoading ? (\n              <>\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2 inline-block\"></div>\n                Saving...\n              </>\n            ) : (\n              <>\n                <Save className=\"h-4 w-4 mr-2 inline-block\" />\n                Save Changes\n              </>\n            )}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}","size_bytes":18159},"client/src/components/settings/SecuritySettings/index.tsx":{"content":"import { useState } from 'react';\nimport { Key, Smartphone, Shield, AlertTriangle } from 'lucide-react';\n\nexport function SecuritySettings() {\n  const [showChangePassword, setShowChangePassword] = useState(false);\n  const [twoFactorEnabled, setTwoFactorEnabled] = useState(false);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white shadow rounded-lg divide-y divide-gray-200\">\n        {/* Password Settings */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Password</h3>\n            <Key className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          \n          {!showChangePassword ? (\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-500\">\n                  Last changed 3 months ago\n                </p>\n              </div>\n              <button\n                className=\"btn btn-outline\"\n                onClick={() => setShowChangePassword(true)}\n              >\n                Change Password\n              </button>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              <div>\n                <label htmlFor=\"currentPassword\" className=\"block text-sm font-medium text-gray-700\">\n                  Current Password\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"currentPassword\"\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"newPassword\" className=\"block text-sm font-medium text-gray-700\">\n                  New Password\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"newPassword\"\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                  Confirm New Password\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-primary-500 focus:border-primary-500 sm:text-sm\"\n                />\n              </div>\n              <div className=\"flex justify-end space-x-3\">\n                <button\n                  className=\"btn btn-outline\"\n                  onClick={() => setShowChangePassword(false)}\n                >\n                  Cancel\n                </button>\n                <button className=\"btn btn-primary\">\n                  Update Password\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Two-Factor Authentication */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Two-Factor Authentication</h3>\n            <Smartphone className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-500\">\n                Add an extra layer of security to your account\n              </p>\n            </div>\n            <div className=\"flex items-center\">\n              <button\n                className={`relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 ${\n                  twoFactorEnabled ? 'bg-primary-600' : 'bg-gray-200'\n                }`}\n                role=\"switch\"\n                aria-checked={twoFactorEnabled}\n                onClick={() => setTwoFactorEnabled(!twoFactorEnabled)}\n              >\n                <span\n                  aria-hidden=\"true\"\n                  className={`pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out ${\n                    twoFactorEnabled ? 'translate-x-5' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Login History */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Login History</h3>\n            <Shield className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          \n          <div className=\"space-y-4\">\n            {[\n              { device: 'Chrome on Windows', location: 'New York, USA', time: '2 hours ago', current: true },\n              { device: 'Safari on iPhone', location: 'Boston, USA', time: '1 day ago' },\n              { device: 'Firefox on MacOS', location: 'San Francisco, USA', time: '3 days ago' },\n            ].map((session, index) => (\n              <div key={index} className=\"flex items-center justify-between py-3\">\n                <div className=\"flex items-center\">\n                  <div className=\"mr-4\">\n                    <Shield className=\"h-5 w-5 text-gray-400\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900\">\n                      {session.device}\n                      {session.current && (\n                        <span className=\"ml-2 text-xs font-medium text-primary-600\">\n                          (Current Session)\n                        </span>\n                      )}\n                    </p>\n                    <p className=\"text-xs text-gray-500\">\n                      {session.location} • {session.time}\n                    </p>\n                  </div>\n                </div>\n                {!session.current && (\n                  <button className=\"text-sm text-error-600 hover:text-error-700\">\n                    Revoke\n                  </button>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Security Alerts */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Security Alerts</h3>\n            <AlertTriangle className=\"h-5 w-5 text-gray-400\" />\n          </div>\n          \n          <div className=\"space-y-4\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                defaultChecked\n              />\n              <span className=\"ml-2 text-sm text-gray-900\">\n                Email me about suspicious login attempts\n              </span>\n            </label>\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                defaultChecked\n              />\n              <span className=\"ml-2 text-sm text-gray-900\">\n                Email me about new device logins\n              </span>\n            </label>\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                defaultChecked\n              />\n              <span className=\"ml-2 text-sm text-gray-900\">\n                Email me about password changes\n              </span>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":7991},"client/src/components/supply-chain/Inventory/index.tsx":{"content":"import React from 'react';\n\nexport function Inventory() {\n  return (\n    <div className=\"bg-white shadow rounded-lg p-6\">\n      <h2 className=\"text-2xl font-semibold text-gray-900 mb-6\">Inventory Management</h2>\n      \n      <div className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {/* Inventory Summary Card */}\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Inventory Summary</h3>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Total Items</span>\n                <span className=\"font-medium\">1,234</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Low Stock Items</span>\n                <span className=\"text-orange-600 font-medium\">23</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Out of Stock</span>\n                <span className=\"text-red-600 font-medium\">5</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Stock Value Card */}\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Stock Value</h3>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Total Value</span>\n                <span className=\"font-medium\">$543,210</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Monthly Change</span>\n                <span className=\"text-green-600 font-medium\">+$12,345</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Warehouse Status Card */}\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Warehouse Status</h3>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Capacity Used</span>\n                <span className=\"font-medium\">78%</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Available Space</span>\n                <span className=\"font-medium\">22%</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Recent Activity Table */}\n        <div className=\"mt-8\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Recent Inventory Activity</h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Item</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Action</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Quantity</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                <tr>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">Product A</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">Restocked</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">+50</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">2025-01-15</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                      Completed\n                    </span>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">Product B</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">Shipped</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">-25</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">2025-01-14</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">\n                      In Transit\n                    </span>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":5174},"client/src/components/supply-chain/Logistics/index.tsx":{"content":"import React from 'react';\n\nexport function Logistics() {\n  return (\n    <div className=\"bg-white shadow rounded-lg p-6\">\n      <h2 className=\"text-2xl font-semibold text-gray-900 mb-6\">Logistics Management</h2>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 shadow-sm\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Shipment Tracking</h3>\n          <div className=\"space-y-4\">\n            <p className=\"text-gray-600\">Monitor and manage active shipments across your supply chain network.</p>\n          </div>\n        </div>\n\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 shadow-sm\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Route Optimization</h3>\n          <div className=\"space-y-4\">\n            <p className=\"text-gray-600\">Optimize delivery routes for maximum efficiency and cost savings.</p>\n          </div>\n        </div>\n\n        <div className=\"bg-white border border-gray-200 rounded-lg p-6 shadow-sm\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Carrier Management</h3>\n          <div className=\"space-y-4\">\n            <p className=\"text-gray-600\">Manage relationships with shipping carriers and track performance metrics.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":1399},"client/src/components/supply-chain/Procurement/index.tsx":{"content":"import React from 'react';\n\nexport function Procurement() {\n  return (\n    <div className=\"bg-white shadow rounded-lg p-6\">\n      <h2 className=\"text-2xl font-semibold text-gray-900 mb-6\">Procurement Management</h2>\n      <div className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          <div className=\"bg-gray-50 p-6 rounded-lg\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Purchase Orders</h3>\n            <p className=\"text-gray-600\">Manage and track all purchase orders in one place</p>\n          </div>\n          <div className=\"bg-gray-50 p-6 rounded-lg\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Supplier Management</h3>\n            <p className=\"text-gray-600\">Monitor supplier performance and relationships</p>\n          </div>\n          <div className=\"bg-gray-50 p-6 rounded-lg\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Cost Analysis</h3>\n            <p className=\"text-gray-600\">Track and analyze procurement costs and savings</p>\n          </div>\n        </div>\n        \n        <div className=\"mt-8\">\n          <h3 className=\"text-xl font-medium text-gray-900 mb-4\">Recent Purchase Orders</h3>\n          <div className=\"bg-white border rounded-lg overflow-hidden\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Order ID</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Supplier</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Amount</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                <tr>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">PO-2025-001</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">Acme Supplies</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                      Approved\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">$12,500.00</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">2025-01-15</td>\n                </tr>\n                <tr>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">PO-2025-002</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">Global Parts Inc.</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800\">\n                      Pending\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">$8,750.00</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">2025-01-14</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":3735},"client/src/components/supply-chain/SupplyChainOverview/index.tsx":{"content":"import React from 'react';\n\nexport function SupplyChainOverview() {\n  return (\n    <div className=\"bg-white shadow rounded-lg p-6\">\n      <h2 className=\"text-2xl font-semibold text-gray-800 mb-4\">Supply Chain Overview</h2>\n      <p className=\"text-gray-600\">Supply chain overview content will be displayed here.</p>\n    </div>\n  );\n}","size_bytes":333},"client/src/components/supply-chain/Vendors/index.tsx":{"content":"import React from 'react';\n\nexport function Vendors() {\n  return (\n    <div className=\"bg-white shadow rounded-lg p-6\">\n      <h2 className=\"text-2xl font-semibold text-gray-900 mb-6\">Vendor Management</h2>\n      <div className=\"space-y-6\">\n        <div className=\"border-b border-gray-200 pb-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Active Vendors</h3>\n          <p className=\"text-gray-500\">No vendors to display</p>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":492},".local/state/replit/agent/progress_tracker.md":{"content":"[x] 1. Install the required packages\n[x] 2. Restart the workflow to see if the project is working\n[x] 3. Verify the project is working using the feedback tool - Fixed Settings page and General tab routing\n[ ] 4. Inform user the import is completed and they can start building, mark the import as completed using the complete_project_import tool","size_bytes":344}},"version":1}